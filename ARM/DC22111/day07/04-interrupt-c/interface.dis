
interface.elf:     file format elf32-littlearm


Disassembly of section .text:

c0008000 <_start>:
.text

	.global	_start
_start:
@ 异常向量表
	b reset
c0008000:	ea00000d 	b	c000803c <reset>
	ldr pc, _undefined_instruction
c0008004:	e59ff014 	ldr	pc, [pc, #20]	; c0008020 <_undefined_instruction>
	ldr pc, _software_interrupt
c0008008:	e59ff014 	ldr	pc, [pc, #20]	; c0008024 <_software_interrupt>
	ldr pc, _prefetch_abort
c000800c:	e59ff014 	ldr	pc, [pc, #20]	; c0008028 <_prefetch_abort>
	ldr pc, _data_abort
c0008010:	e59ff014 	ldr	pc, [pc, #20]	; c000802c <_data_abort>
	ldr pc, _not_used
c0008014:	e59ff014 	ldr	pc, [pc, #20]	; c0008030 <_not_used>
	ldr pc, _irq
c0008018:	e59ff014 	ldr	pc, [pc, #20]	; c0008034 <_irq>
	ldr pc, _fiq
c000801c:	e59ff014 	ldr	pc, [pc, #20]	; c0008038 <_fiq>

c0008020 <_undefined_instruction>:
c0008020:	c0008140 	andgt	r8, r0, r0, asr #2

c0008024 <_software_interrupt>:
c0008024:	c0008160 	andgt	r8, r0, r0, ror #2

c0008028 <_prefetch_abort>:
c0008028:	c0008180 	andgt	r8, r0, r0, lsl #3

c000802c <_data_abort>:
c000802c:	c00081a0 	andgt	r8, r0, r0, lsr #3

c0008030 <_not_used>:
c0008030:	c00081c0 	andgt	r8, r0, r0, asr #3

c0008034 <_irq>:
c0008034:	c00081e0 	andgt	r8, r0, r0, ror #3

c0008038 <_fiq>:
c0008038:	c0008200 	andgt	r8, r0, r0, lsl #4

c000803c <reset>:

 /* The actual reset code */
reset:
	@ 重新映射异常向量表的入口地址
	/* Set Vector Base Address Register */
	mrc p15, 0, r0, c1, c0, 0
c000803c:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
	bic r0, #(1<<13)
c0008040:	e3c00a02 	bic	r0, r0, #8192	; 0x2000
	mcr p15, 0, r0, c1, c0, 0
c0008044:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
	ldr	r0,=0xc0008000
c0008048:	e59f01b8 	ldr	r0, [pc, #440]	; c0008208 <stacktop+0x4>
	mcr	p15,0,r0,c12,c0,0		@ Vector Base Address Register
c000804c:	ee0c0f10 	mcr	15, 0, r0, cr12, cr0, {0}

	/* Set the cpu to svc32 mode */
	mrs r0, cpsr
c0008050:	e10f0000 	mrs	r0, CPSR
	bic r0, r0, #0x1f
c0008054:	e3c0001f 	bic	r0, r0, #31
	orr r0, r0, #0xd3
c0008058:	e38000d3 	orr	r0, r0, #211	; 0xd3
	msr cpsr, r0
c000805c:	e129f000 	msr	CPSR_fc, r0

	/* Enable NEON/VFP unit */
	mrc p15, #0, r1, c1, c0, #2
c0008060:	ee111f50 	mrc	15, 0, r1, cr1, cr0, {2}
	orr r1, r1, #(0xf << 20)
c0008064:	e381160f 	orr	r1, r1, #15728640	; 0xf00000
	mcr p15, #0, r1, c1, c0, #2
c0008068:	ee011f50 	mcr	15, 0, r1, cr1, cr0, {2}
	mov r1, #0
c000806c:	e3a01000 	mov	r1, #0
	mcr p15, #0, r1, c7, c5, #4
c0008070:	ee071f95 	mcr	15, 0, r1, cr7, cr5, {4}
	mov r0, #0x40000000
c0008074:	e3a00101 	mov	r0, #1073741824	; 0x40000000
	fmxr fpexc, r0
c0008078:	eee80a10 	vmsr	fpexc, r0

	/* Cache init */
	mrc	p15, 0, r0, c0, c0, 0
c000807c:	ee100f10 	mrc	15, 0, r0, cr0, cr0, {0}
	and	r1, r0, #0x00f00000
c0008080:	e200160f 	and	r1, r0, #15728640	; 0xf00000
	and	r2, r0, #0x0000000f
c0008084:	e200200f 	and	r2, r0, #15
	orr r2, r2, r1, lsr #20-4
c0008088:	e1822821 	orr	r2, r2, r1, lsr #16
	cmp r2, #0x30
c000808c:	e3520030 	cmp	r2, #48	; 0x30
	mrceq p15, 0, r0, c1, c0, 1
c0008090:	0e110f30 	mrceq	15, 0, r0, cr1, cr0, {1}
	orreq r0, r0, #0x6
c0008094:	03800006 	orreq	r0, r0, #6
	mcreq p15, 0, r0, c1, c0, 1
c0008098:	0e010f30 	mcreq	15, 0, r0, cr1, cr0, {1}

	/* Invalidate L1 I/D */
	mov r0, #0
c000809c:	e3a00000 	mov	r0, #0
	mcr	p15, 0, r0, c8, c7, 0
c00080a0:	ee080f17 	mcr	15, 0, r0, cr8, cr7, {0}
	mcr	p15, 0, r0, c7, c5, 0
c00080a4:	ee070f15 	mcr	15, 0, r0, cr7, cr5, {0}

	/* Disable mmu stuff and caches */
	mrc p15, 0, r0, c1, c0, 0
c00080a8:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
	bic r0, r0, #0x00002000
c00080ac:	e3c00a02 	bic	r0, r0, #8192	; 0x2000
	bic r0, r0, #0x00000007
c00080b0:	e3c00007 	bic	r0, r0, #7
	orr r0, r0, #0x00001000
c00080b4:	e3800a01 	orr	r0, r0, #4096	; 0x1000
	orr r0, r0, #0x00000002
c00080b8:	e3800002 	orr	r0, r0, #2
	orr r0, r0, #0x00000800
c00080bc:	e3800b02 	orr	r0, r0, #2048	; 0x800
	mcr p15, 0, r0, c1, c0, 0
c00080c0:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}

c00080c4 <init_stack>:

	/* Initialize stacks */
	@ 初始化各种模式下的占空间
init_stack:
	ldr	r0, stacktop        /*get stack top pointer*/
c00080c4:	e59f0138 	ldr	r0, [pc, #312]	; c0008204 <stacktop>

	/********svc mode stack********/
	mov	sp, r0
c00080c8:	e1a0d000 	mov	sp, r0
	sub	r0, #128*4          /*512 byte  for irq mode of stack*/
c00080cc:	e2400c02 	sub	r0, r0, #512	; 0x200
	/********irq mode stack********/
	msr	cpsr, #0xd2
c00080d0:	e329f0d2 	msr	CPSR_fc, #210	; 0xd2
	mov	sp, r0
c00080d4:	e1a0d000 	mov	sp, r0
	sub	r0, #128*4          /*512 byte  for fiq mode of stack*/
c00080d8:	e2400c02 	sub	r0, r0, #512	; 0x200
	/********fiq mode stack********/
	msr	cpsr, #0xd1
c00080dc:	e329f0d1 	msr	CPSR_fc, #209	; 0xd1
	mov	sp, r0
c00080e0:	e1a0d000 	mov	sp, r0
	sub	r0, #0
c00080e4:	e2400000 	sub	r0, r0, #0
	/********abort mode stack******/
	msr	cpsr, #0xd7
c00080e8:	e329f0d7 	msr	CPSR_fc, #215	; 0xd7
	mov	sp, r0
c00080ec:	e1a0d000 	mov	sp, r0
	sub	r0, #0
c00080f0:	e2400000 	sub	r0, r0, #0
	/********undefine mode stack**/
	msr	cpsr, #0xdb
c00080f4:	e329f0db 	msr	CPSR_fc, #219	; 0xdb
	mov	sp, r0
c00080f8:	e1a0d000 	mov	sp, r0
	sub	r0, #0
c00080fc:	e2400000 	sub	r0, r0, #0
    /***sys mode and usr mode stack***/
	msr	cpsr, #0x10
c0008100:	e329f010 	msr	CPSR_fc, #16
	mov	sp, r0             /*1024 byte  for user mode of stack*/
c0008104:	e1a0d000 	mov	sp, r0

    /******clear bss section********/
	@ 清除BSS段
	ldr	r0, =__bss_start	/* this is auto-relocated! */
c0008108:	e59f00fc 	ldr	r0, [pc, #252]	; c000820c <stacktop+0x8>
	ldr	r1, =__bss_end__	/* this is auto-relocated! */
c000810c:	e59f10fc 	ldr	r1, [pc, #252]	; c0008210 <stacktop+0xc>
	mov	r2, #0x00000000		/* prepare zero to clear BSS */
c0008110:	e3a02000 	mov	r2, #0

c0008114 <clbss_l>:

clbss_l: cmp r0, r1			/* while not at end of BSS */
c0008114:	e1500001 	cmp	r0, r1
	strlo r2, [r0]			/* clear 32-bit BSS word */
c0008118:	35802000 	strcc	r2, [r0]
	addlo r0, r0, #4		/* move to next */
c000811c:	32800004 	addcc	r0, r0, #4
	blo	clbss_l
c0008120:	3afffffb 	bcc	c0008114 <clbss_l>

	/* Call _main */
	ldr pc, =main     @ 汇编调用C  跳转到main.c文件的main函数中
c0008124:	e59ff0e8 	ldr	pc, [pc, #232]	; c0008214 <stacktop+0x10>
c0008128:	e320f000 	nop	{0}
c000812c:	e320f000 	nop	{0}
c0008130:	e320f000 	nop	{0}
c0008134:	e320f000 	nop	{0}
c0008138:	e320f000 	nop	{0}
c000813c:	e320f000 	nop	{0}

c0008140 <undefined_instruction>:
/*
 * Exception handlers
 */
	.align 5  // 2的5次方，=32bit 也就是4字节对其
undefined_instruction:
	b	.
c0008140:	eafffffe 	b	c0008140 <undefined_instruction>
c0008144:	e320f000 	nop	{0}
c0008148:	e320f000 	nop	{0}
c000814c:	e320f000 	nop	{0}
c0008150:	e320f000 	nop	{0}
c0008154:	e320f000 	nop	{0}
c0008158:	e320f000 	nop	{0}
c000815c:	e320f000 	nop	{0}

c0008160 <software_interrupt>:

	.align 5
software_interrupt:
	b	.
c0008160:	eafffffe 	b	c0008160 <software_interrupt>
c0008164:	e320f000 	nop	{0}
c0008168:	e320f000 	nop	{0}
c000816c:	e320f000 	nop	{0}
c0008170:	e320f000 	nop	{0}
c0008174:	e320f000 	nop	{0}
c0008178:	e320f000 	nop	{0}
c000817c:	e320f000 	nop	{0}

c0008180 <prefetch_abort>:

	.align 5
prefetch_abort:
	b	.
c0008180:	eafffffe 	b	c0008180 <prefetch_abort>
c0008184:	e320f000 	nop	{0}
c0008188:	e320f000 	nop	{0}
c000818c:	e320f000 	nop	{0}
c0008190:	e320f000 	nop	{0}
c0008194:	e320f000 	nop	{0}
c0008198:	e320f000 	nop	{0}
c000819c:	e320f000 	nop	{0}

c00081a0 <data_abort>:

	.align 5
data_abort:
	b	.
c00081a0:	eafffffe 	b	c00081a0 <data_abort>
c00081a4:	e320f000 	nop	{0}
c00081a8:	e320f000 	nop	{0}
c00081ac:	e320f000 	nop	{0}
c00081b0:	e320f000 	nop	{0}
c00081b4:	e320f000 	nop	{0}
c00081b8:	e320f000 	nop	{0}
c00081bc:	e320f000 	nop	{0}

c00081c0 <not_used>:

	.align 5
not_used:
	b	.
c00081c0:	eafffffe 	b	c00081c0 <not_used>
c00081c4:	e320f000 	nop	{0}
c00081c8:	e320f000 	nop	{0}
c00081cc:	e320f000 	nop	{0}
c00081d0:	e320f000 	nop	{0}
c00081d4:	e320f000 	nop	{0}
c00081d8:	e320f000 	nop	{0}
c00081dc:	e320f000 	nop	{0}

c00081e0 <irq>:

	.align 5
	.global irq
irq:
	sub  lr, lr, #4
c00081e0:	e24ee004 	sub	lr, lr, #4
	stmfd sp!, {r0-r12, lr}
c00081e4:	e92d5fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	bl do_irq
c00081e8:	eb000540 	bl	c00096f0 <do_irq>
	ldmfd sp!, {r0-r12, pc}^
c00081ec:	e8fd9fff 	ldm	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}^
c00081f0:	e320f000 	nop	{0}
c00081f4:	e320f000 	nop	{0}
c00081f8:	e320f000 	nop	{0}
c00081fc:	e320f000 	nop	{0}

c0008200 <fiq>:

	.align 5
	.global fiq
fiq:
	b .
c0008200:	eafffffe 	b	c0008200 <fiq>

c0008204 <stacktop>:
c0008204:	c000ab34 	andgt	sl, r0, r4, lsr fp
	ldr	r0,=0xc0008000
c0008208:	c0008000 	andgt	r8, r0, r0
	ldr	r0, =__bss_start	/* this is auto-relocated! */
c000820c:	c000ac34 	andgt	sl, r0, r4, lsr ip
	ldr	r1, =__bss_end__	/* this is auto-relocated! */
c0008210:	c000ac42 	andgt	sl, r0, r2, asr #24
	ldr pc, =main     @ 汇编调用C  跳转到main.c文件的main函数中
c0008214:	c000a268 	andgt	sl, r0, r8, ror #4

c0008218 <__umodsi3>:
	.text
	.globl	 __umodsi3
	.type  __umodsi3       ,function
	.align 0
 __umodsi3      :
	cmp	divisor, #0
c0008218:	e3510000 	cmp	r1, #0
	beq	Ldiv0
c000821c:	0a000026 	beq	c00082bc <Ldiv0>
	mov	curbit, #1
c0008220:	e3a03001 	mov	r3, #1
	cmp	dividend, divisor
c0008224:	e1500001 	cmp	r0, r1
	movcc	pc, lr
c0008228:	31a0f00e 	movcc	pc, lr

c000822c <Loop1>:
Loop1:
	@ Unless the divisor is very big, shift it up in multiples of
	@ four bits, since this is the amount of unwinding in the main
	@ division loop.  Continue shifting until the divisor is
	@ larger than the dividend.
	cmp	divisor, #0x10000000
c000822c:	e3510201 	cmp	r1, #268435456	; 0x10000000
	cmpcc	divisor, dividend
c0008230:	31510000 	cmpcc	r1, r0
	movcc	divisor, divisor, lsl #4
c0008234:	31a01201 	lslcc	r1, r1, #4
	movcc	curbit, curbit, lsl #4
c0008238:	31a03203 	lslcc	r3, r3, #4
	bcc	Loop1
c000823c:	3afffffa 	bcc	c000822c <Loop1>

c0008240 <Lbignum>:
Lbignum:
	@ For very big divisors, we must shift it a bit at a time, or
	@ we will be in danger of overflowing.
	cmp	divisor, #0x80000000
c0008240:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
	cmpcc	divisor, dividend
c0008244:	31510000 	cmpcc	r1, r0
	movcc	divisor, divisor, lsl #1
c0008248:	31a01081 	lslcc	r1, r1, #1
	movcc	curbit, curbit, lsl #1
c000824c:	31a03083 	lslcc	r3, r3, #1
	bcc	Lbignum
c0008250:	3afffffa 	bcc	c0008240 <Lbignum>

c0008254 <Loop3>:
Loop3:
	@ Test for possible subtractions.  On the final pass, this may
	@ subtract too much from the dividend, so keep track of which
	@ subtractions are done, we can fix them up afterwards...
	mov	overdone, #0
c0008254:	e3a02000 	mov	r2, #0
	cmp	dividend, divisor
c0008258:	e1500001 	cmp	r0, r1
	subcs	dividend, dividend, divisor
c000825c:	20400001 	subcs	r0, r0, r1
	cmp	dividend, divisor, lsr #1
c0008260:	e15000a1 	cmp	r0, r1, lsr #1
	subcs	dividend, dividend, divisor, lsr #1
c0008264:	204000a1 	subcs	r0, r0, r1, lsr #1
	orrcs	overdone, overdone, curbit, ror #1
c0008268:	218220e3 	orrcs	r2, r2, r3, ror #1
	cmp	dividend, divisor, lsr #2
c000826c:	e1500121 	cmp	r0, r1, lsr #2
	subcs	dividend, dividend, divisor, lsr #2
c0008270:	20400121 	subcs	r0, r0, r1, lsr #2
	orrcs	overdone, overdone, curbit, ror #2
c0008274:	21822163 	orrcs	r2, r2, r3, ror #2
	cmp	dividend, divisor, lsr #3
c0008278:	e15001a1 	cmp	r0, r1, lsr #3
	subcs	dividend, dividend, divisor, lsr #3
c000827c:	204001a1 	subcs	r0, r0, r1, lsr #3
	orrcs	overdone, overdone, curbit, ror #3
c0008280:	218221e3 	orrcs	r2, r2, r3, ror #3
	mov	ip, curbit
c0008284:	e1a0c003 	mov	ip, r3
	cmp	dividend, #0			@ Early termination?
c0008288:	e3500000 	cmp	r0, #0
	movnes	curbit, curbit, lsr #4		@ No, any more bits to do?
c000828c:	11b03223 	lsrsne	r3, r3, #4
	movne	divisor, divisor, lsr #4
c0008290:	11a01221 	lsrne	r1, r1, #4
	bne	Loop3
c0008294:	1affffee 	bne	c0008254 <Loop3>
	@ the top three bits of "overdone".  Exactly which were not needed
	@ are governed by the position of the bit, stored in ip.
	@ If we terminated early, because dividend became zero,
	@ then none of the below will match, since the bit in ip will not be
	@ in the bottom nibble.
	ands	overdone, overdone, #0xe0000000
c0008298:	e212220e 	ands	r2, r2, #-536870912	; 0xe0000000
	moveq	pc, lr				@ No fixups needed
c000829c:	01a0f00e 	moveq	pc, lr
	tst	overdone, ip, ror #3
c00082a0:	e11201ec 	tst	r2, ip, ror #3
	addne	dividend, dividend, divisor, lsr #3
c00082a4:	108001a1 	addne	r0, r0, r1, lsr #3
	tst	overdone, ip, ror #2
c00082a8:	e112016c 	tst	r2, ip, ror #2
	addne	dividend, dividend, divisor, lsr #2
c00082ac:	10800121 	addne	r0, r0, r1, lsr #2
	tst	overdone, ip, ror #1
c00082b0:	e11200ec 	tst	r2, ip, ror #1
	addne	dividend, dividend, divisor, lsr #1
c00082b4:	108000a1 	addne	r0, r0, r1, lsr #1
	mov	pc, lr
c00082b8:	e1a0f00e 	mov	pc, lr

c00082bc <Ldiv0>:
Ldiv0:
	str	lr, [sp, #-4]!
c00082bc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
@	bl	 __div0       (PLT)
	mov	r0, #0			@ about as wrong as it could be
c00082c0:	e3a00000 	mov	r0, #0
	ldmia	sp!, {pc}
c00082c4:	e8bd8000 	ldmfd	sp!, {pc}

c00082c8 <__udivsi3>:
	.text
	.globl	 __udivsi3
	.type  __udivsi3       ,function
	.align	0
 __udivsi3      :
	cmp	divisor, #0
c00082c8:	e3510000 	cmp	r1, #0
	beq	Ldiv0
c00082cc:	0a00001f 	beq	c0008350 <Ldiv0>
	mov	curbit, #1
c00082d0:	e3a03001 	mov	r3, #1
	mov	result, #0
c00082d4:	e3a02000 	mov	r2, #0
	cmp	dividend, divisor
c00082d8:	e1500001 	cmp	r0, r1
	bcc	Lgot_result
c00082dc:	3a000019 	bcc	c0008348 <Lgot_result>

c00082e0 <Loop1>:
Loop1:
	@ Unless the divisor is very big, shift it up in multiples of
	@ four bits, since this is the amount of unwinding in the main
	@ division loop.  Continue shifting until the divisor is
	@ larger than the dividend.
	cmp	divisor, #0x10000000
c00082e0:	e3510201 	cmp	r1, #268435456	; 0x10000000
	cmpcc	divisor, dividend
c00082e4:	31510000 	cmpcc	r1, r0
	movcc	divisor, divisor, lsl #4
c00082e8:	31a01201 	lslcc	r1, r1, #4
	movcc	curbit, curbit, lsl #4
c00082ec:	31a03203 	lslcc	r3, r3, #4
	bcc	Loop1
c00082f0:	3afffffa 	bcc	c00082e0 <Loop1>

c00082f4 <Lbignum>:
Lbignum:
	@ For very big divisors, we must shift it a bit at a time, or
	@ we will be in danger of overflowing.
	cmp	divisor, #0x80000000
c00082f4:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
	cmpcc	divisor, dividend
c00082f8:	31510000 	cmpcc	r1, r0
	movcc	divisor, divisor, lsl #1
c00082fc:	31a01081 	lslcc	r1, r1, #1
	movcc	curbit, curbit, lsl #1
c0008300:	31a03083 	lslcc	r3, r3, #1
	bcc	Lbignum
c0008304:	3afffffa 	bcc	c00082f4 <Lbignum>

c0008308 <Loop3>:
Loop3:
	@ Test for possible subtractions, and note which bits
	@ are done in the result.  On the final pass, this may subtract
	@ too much from the dividend, but the result will be ok, since the
	@ "bit" will have been shifted out at the bottom.
	cmp	dividend, divisor
c0008308:	e1500001 	cmp	r0, r1
	subcs	dividend, dividend, divisor
c000830c:	20400001 	subcs	r0, r0, r1
	orrcs	result, result, curbit
c0008310:	21822003 	orrcs	r2, r2, r3
	cmp	dividend, divisor, lsr #1
c0008314:	e15000a1 	cmp	r0, r1, lsr #1
	subcs	dividend, dividend, divisor, lsr #1
c0008318:	204000a1 	subcs	r0, r0, r1, lsr #1
	orrcs	result, result, curbit, lsr #1
c000831c:	218220a3 	orrcs	r2, r2, r3, lsr #1
	cmp	dividend, divisor, lsr #2
c0008320:	e1500121 	cmp	r0, r1, lsr #2
	subcs	dividend, dividend, divisor, lsr #2
c0008324:	20400121 	subcs	r0, r0, r1, lsr #2
	orrcs	result, result, curbit, lsr #2
c0008328:	21822123 	orrcs	r2, r2, r3, lsr #2
	cmp	dividend, divisor, lsr #3
c000832c:	e15001a1 	cmp	r0, r1, lsr #3
	subcs	dividend, dividend, divisor, lsr #3
c0008330:	204001a1 	subcs	r0, r0, r1, lsr #3
	orrcs	result, result, curbit, lsr #3
c0008334:	218221a3 	orrcs	r2, r2, r3, lsr #3
	cmp	dividend, #0			@ Early termination?
c0008338:	e3500000 	cmp	r0, #0
	movnes	curbit, curbit, lsr #4		@ No, any more bits to do?
c000833c:	11b03223 	lsrsne	r3, r3, #4
	movne	divisor, divisor, lsr #4
c0008340:	11a01221 	lsrne	r1, r1, #4
	bne	Loop3
c0008344:	1affffef 	bne	c0008308 <Loop3>

c0008348 <Lgot_result>:
Lgot_result:
	mov	r0, result
c0008348:	e1a00002 	mov	r0, r2
	mov	pc, lr
c000834c:	e1a0f00e 	mov	pc, lr

c0008350 <Ldiv0>:
Ldiv0:
	str	lr, [sp, #-4]!
c0008350:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
	@bl	 __div0       (PLT)
	mov	r0, #0			@ about as wrong as it could be
c0008354:	e3a00000 	mov	r0, #0
	ldmia	sp!, {pc}
c0008358:	e8bd8000 	ldmfd	sp!, {pc}

c000835c <__toupper>:
		c -= 'A'-'a';
	return c;
}

static inline unsigned char __toupper(unsigned char c)
{
c000835c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c0008360:	e28db000 	add	fp, sp, #0
c0008364:	e24dd004 	sub	sp, sp, #4
c0008368:	e1a03000 	mov	r3, r0
c000836c:	e54b3004 	strb	r3, [fp, #-4]
	if (islower(c))
c0008370:	e55b2004 	ldrb	r2, [fp, #-4]
c0008374:	e30a3b34 	movw	r3, #43828	; 0xab34
c0008378:	e34c3000 	movt	r3, #49152	; 0xc000
c000837c:	e7d33002 	ldrb	r3, [r3, r2]
c0008380:	e2033002 	and	r3, r3, #2
c0008384:	e3530000 	cmp	r3, #0
c0008388:	0a000002 	beq	c0008398 <__toupper+0x3c>
		c -= 'a'-'A';
c000838c:	e55b3004 	ldrb	r3, [fp, #-4]
c0008390:	e2433020 	sub	r3, r3, #32
c0008394:	e54b3004 	strb	r3, [fp, #-4]
	return c;
c0008398:	e55b3004 	ldrb	r3, [fp, #-4]
}
c000839c:	e1a00003 	mov	r0, r3
c00083a0:	e28bd000 	add	sp, fp, #0
c00083a4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c00083a8:	e12fff1e 	bx	lr

c00083ac <simple_strtoul>:
#include <ctype.h>
#include "uart.h"
#define size_t unsigned int

unsigned long simple_strtoul(const char *cp,char **endp,unsigned int base)
{
c00083ac:	e92d4800 	push	{fp, lr}
c00083b0:	e28db004 	add	fp, sp, #4
c00083b4:	e24dd014 	sub	sp, sp, #20
c00083b8:	e50b0010 	str	r0, [fp, #-16]
c00083bc:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
c00083c0:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
	unsigned long result = 0,value;
c00083c4:	e3a03000 	mov	r3, #0
c00083c8:	e50b3008 	str	r3, [fp, #-8]

	if (*cp == '0') {
c00083cc:	e51b3010 	ldr	r3, [fp, #-16]
c00083d0:	e5d33000 	ldrb	r3, [r3]
c00083d4:	e3530030 	cmp	r3, #48	; 0x30
c00083d8:	1a00001a 	bne	c0008448 <simple_strtoul+0x9c>
		cp++;
c00083dc:	e51b3010 	ldr	r3, [fp, #-16]
c00083e0:	e2833001 	add	r3, r3, #1
c00083e4:	e50b3010 	str	r3, [fp, #-16]
		if ((*cp == 'x') && isxdigit(cp[1])) {
c00083e8:	e51b3010 	ldr	r3, [fp, #-16]
c00083ec:	e5d33000 	ldrb	r3, [r3]
c00083f0:	e3530078 	cmp	r3, #120	; 0x78
c00083f4:	1a00000e 	bne	c0008434 <simple_strtoul+0x88>
c00083f8:	e51b3010 	ldr	r3, [fp, #-16]
c00083fc:	e2833001 	add	r3, r3, #1
c0008400:	e5d33000 	ldrb	r3, [r3]
c0008404:	e1a02003 	mov	r2, r3
c0008408:	e30a3b34 	movw	r3, #43828	; 0xab34
c000840c:	e34c3000 	movt	r3, #49152	; 0xc000
c0008410:	e7d33002 	ldrb	r3, [r3, r2]
c0008414:	e2033044 	and	r3, r3, #68	; 0x44
c0008418:	e3530000 	cmp	r3, #0
c000841c:	0a000004 	beq	c0008434 <simple_strtoul+0x88>
			base = 16;
c0008420:	e3a03010 	mov	r3, #16
c0008424:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
			cp++;
c0008428:	e51b3010 	ldr	r3, [fp, #-16]
c000842c:	e2833001 	add	r3, r3, #1
c0008430:	e50b3010 	str	r3, [fp, #-16]
		}
		if (!base) {
c0008434:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
c0008438:	e3530000 	cmp	r3, #0
c000843c:	1a000001 	bne	c0008448 <simple_strtoul+0x9c>
			base = 8;
c0008440:	e3a03008 	mov	r3, #8
c0008444:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
		}
	}
	if (!base) {
c0008448:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
c000844c:	e3530000 	cmp	r3, #0
c0008450:	1a00000b 	bne	c0008484 <simple_strtoul+0xd8>
		base = 10;
c0008454:	e3a0300a 	mov	r3, #10
c0008458:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
	}
	while (isxdigit(*cp) && (value = isdigit(*cp) ? *cp-'0' : (islower(*cp)
c000845c:	ea000008 	b	c0008484 <simple_strtoul+0xd8>
	    ? toupper(*cp) : *cp)-'A'+10) < base) {
		result = result*base + value;
c0008460:	e51b3008 	ldr	r3, [fp, #-8]
c0008464:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
c0008468:	e0030392 	mul	r3, r2, r3
c000846c:	e51b200c 	ldr	r2, [fp, #-12]
c0008470:	e0823003 	add	r3, r2, r3
c0008474:	e50b3008 	str	r3, [fp, #-8]
		cp++;
c0008478:	e51b3010 	ldr	r3, [fp, #-16]
c000847c:	e2833001 	add	r3, r3, #1
c0008480:	e50b3010 	str	r3, [fp, #-16]
	while (isxdigit(*cp) && (value = isdigit(*cp) ? *cp-'0' : (islower(*cp)
c0008484:	e51b3010 	ldr	r3, [fp, #-16]
c0008488:	e5d33000 	ldrb	r3, [r3]
c000848c:	e1a02003 	mov	r2, r3
c0008490:	e30a3b34 	movw	r3, #43828	; 0xab34
c0008494:	e34c3000 	movt	r3, #49152	; 0xc000
c0008498:	e7d33002 	ldrb	r3, [r3, r2]
c000849c:	e2033044 	and	r3, r3, #68	; 0x44
c00084a0:	e3530000 	cmp	r3, #0
c00084a4:	0a000024 	beq	c000853c <simple_strtoul+0x190>
c00084a8:	e51b3010 	ldr	r3, [fp, #-16]
c00084ac:	e5d33000 	ldrb	r3, [r3]
c00084b0:	e1a02003 	mov	r2, r3
c00084b4:	e30a3b34 	movw	r3, #43828	; 0xab34
c00084b8:	e34c3000 	movt	r3, #49152	; 0xc000
c00084bc:	e7d33002 	ldrb	r3, [r3, r2]
c00084c0:	e2033004 	and	r3, r3, #4
c00084c4:	e3530000 	cmp	r3, #0
c00084c8:	0a000003 	beq	c00084dc <simple_strtoul+0x130>
c00084cc:	e51b3010 	ldr	r3, [fp, #-16]
c00084d0:	e5d33000 	ldrb	r3, [r3]
c00084d4:	e2433030 	sub	r3, r3, #48	; 0x30
c00084d8:	ea000012 	b	c0008528 <simple_strtoul+0x17c>
c00084dc:	e51b3010 	ldr	r3, [fp, #-16]
c00084e0:	e5d33000 	ldrb	r3, [r3]
c00084e4:	e1a02003 	mov	r2, r3
c00084e8:	e30a3b34 	movw	r3, #43828	; 0xab34
c00084ec:	e34c3000 	movt	r3, #49152	; 0xc000
c00084f0:	e7d33002 	ldrb	r3, [r3, r2]
c00084f4:	e2033002 	and	r3, r3, #2
c00084f8:	e3530000 	cmp	r3, #0
c00084fc:	0a000006 	beq	c000851c <simple_strtoul+0x170>
	    ? toupper(*cp) : *cp)-'A'+10) < base) {
c0008500:	e51b3010 	ldr	r3, [fp, #-16]
c0008504:	e5d33000 	ldrb	r3, [r3]
c0008508:	e1a00003 	mov	r0, r3
c000850c:	ebffff92 	bl	c000835c <__toupper>
c0008510:	e1a03000 	mov	r3, r0
c0008514:	e2433037 	sub	r3, r3, #55	; 0x37
c0008518:	ea000002 	b	c0008528 <simple_strtoul+0x17c>
c000851c:	e51b3010 	ldr	r3, [fp, #-16]
c0008520:	e5d33000 	ldrb	r3, [r3]
c0008524:	e2433037 	sub	r3, r3, #55	; 0x37
	while (isxdigit(*cp) && (value = isdigit(*cp) ? *cp-'0' : (islower(*cp)
c0008528:	e50b300c 	str	r3, [fp, #-12]
c000852c:	e51b200c 	ldr	r2, [fp, #-12]
c0008530:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
c0008534:	e1520003 	cmp	r2, r3
c0008538:	3affffc8 	bcc	c0008460 <simple_strtoul+0xb4>
	}
	if (endp)
c000853c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c0008540:	e3530000 	cmp	r3, #0
c0008544:	0a000002 	beq	c0008554 <simple_strtoul+0x1a8>
		*endp = (char *)cp;
c0008548:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c000854c:	e51b2010 	ldr	r2, [fp, #-16]
c0008550:	e5832000 	str	r2, [r3]
	return result;
c0008554:	e51b3008 	ldr	r3, [fp, #-8]
}
c0008558:	e1a00003 	mov	r0, r3
c000855c:	e24bd004 	sub	sp, fp, #4
c0008560:	e8bd8800 	pop	{fp, pc}

c0008564 <simple_strtol>:

long simple_strtol(const char *cp,char **endp,unsigned int base)
{
c0008564:	e92d4800 	push	{fp, lr}
c0008568:	e28db004 	add	fp, sp, #4
c000856c:	e24dd00c 	sub	sp, sp, #12
c0008570:	e50b0008 	str	r0, [fp, #-8]
c0008574:	e50b100c 	str	r1, [fp, #-12]
c0008578:	e50b2010 	str	r2, [fp, #-16]
	if(*cp=='-')
c000857c:	e51b3008 	ldr	r3, [fp, #-8]
c0008580:	e5d33000 	ldrb	r3, [r3]
c0008584:	e353002d 	cmp	r3, #45	; 0x2d
c0008588:	1a000008 	bne	c00085b0 <simple_strtol+0x4c>
		return -simple_strtoul(cp+1,endp,base);
c000858c:	e51b3008 	ldr	r3, [fp, #-8]
c0008590:	e2833001 	add	r3, r3, #1
c0008594:	e51b2010 	ldr	r2, [fp, #-16]
c0008598:	e51b100c 	ldr	r1, [fp, #-12]
c000859c:	e1a00003 	mov	r0, r3
c00085a0:	ebffff81 	bl	c00083ac <simple_strtoul>
c00085a4:	e1a03000 	mov	r3, r0
c00085a8:	e2633000 	rsb	r3, r3, #0
c00085ac:	ea000004 	b	c00085c4 <simple_strtol+0x60>
	return simple_strtoul(cp,endp,base);
c00085b0:	e51b2010 	ldr	r2, [fp, #-16]
c00085b4:	e51b100c 	ldr	r1, [fp, #-12]
c00085b8:	e51b0008 	ldr	r0, [fp, #-8]
c00085bc:	ebffff7a 	bl	c00083ac <simple_strtoul>
c00085c0:	e1a03000 	mov	r3, r0
}
c00085c4:	e1a00003 	mov	r0, r3
c00085c8:	e24bd004 	sub	sp, fp, #4
c00085cc:	e8bd8800 	pop	{fp, pc}

c00085d0 <skip_atoi>:

/* we use this so that we can do without the ctype library */
#define is_digit(c)	((c) >= '0' && (c) <= '9')

static int skip_atoi(const char **s)
{
c00085d0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c00085d4:	e28db000 	add	fp, sp, #0
c00085d8:	e24dd008 	sub	sp, sp, #8
c00085dc:	e50b0008 	str	r0, [fp, #-8]
	int i=0;
c00085e0:	e3a03000 	mov	r3, #0
c00085e4:	e50b3004 	str	r3, [fp, #-4]

	while (is_digit(**s))
c00085e8:	ea00000e 	b	c0008628 <skip_atoi+0x58>
		i = i*10 + *((*s)++) - '0';
c00085ec:	e51b2004 	ldr	r2, [fp, #-4]
c00085f0:	e1a03002 	mov	r3, r2
c00085f4:	e1a03103 	lsl	r3, r3, #2
c00085f8:	e0833002 	add	r3, r3, r2
c00085fc:	e1a03083 	lsl	r3, r3, #1
c0008600:	e1a00003 	mov	r0, r3
c0008604:	e51b3008 	ldr	r3, [fp, #-8]
c0008608:	e5933000 	ldr	r3, [r3]
c000860c:	e2831001 	add	r1, r3, #1
c0008610:	e51b2008 	ldr	r2, [fp, #-8]
c0008614:	e5821000 	str	r1, [r2]
c0008618:	e5d33000 	ldrb	r3, [r3]
c000861c:	e0803003 	add	r3, r0, r3
c0008620:	e2433030 	sub	r3, r3, #48	; 0x30
c0008624:	e50b3004 	str	r3, [fp, #-4]
	while (is_digit(**s))
c0008628:	e51b3008 	ldr	r3, [fp, #-8]
c000862c:	e5933000 	ldr	r3, [r3]
c0008630:	e5d33000 	ldrb	r3, [r3]
c0008634:	e353002f 	cmp	r3, #47	; 0x2f
c0008638:	9a000004 	bls	c0008650 <skip_atoi+0x80>
c000863c:	e51b3008 	ldr	r3, [fp, #-8]
c0008640:	e5933000 	ldr	r3, [r3]
c0008644:	e5d33000 	ldrb	r3, [r3]
c0008648:	e3530039 	cmp	r3, #57	; 0x39
c000864c:	9affffe6 	bls	c00085ec <skip_atoi+0x1c>
	return i;
c0008650:	e51b3004 	ldr	r3, [fp, #-4]
}
c0008654:	e1a00003 	mov	r0, r3
c0008658:	e28bd000 	add	sp, fp, #0
c000865c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c0008660:	e12fff1e 	bx	lr

c0008664 <number>:
#ifdef CFG_64BIT_VSPRINTF
static char * number(char * str, long long num, unsigned int base, int size, int precision ,int type)
#else
static char * number(char * str, long num, unsigned int base, int size, int precision ,int type)
#endif
{
c0008664:	e92d4800 	push	{fp, lr}
c0008668:	e28db004 	add	fp, sp, #4
c000866c:	e24dd068 	sub	sp, sp, #104	; 0x68
c0008670:	e50b0060 	str	r0, [fp, #-96]	; 0xffffffa0
c0008674:	e50b1064 	str	r1, [fp, #-100]	; 0xffffff9c
c0008678:	e50b2068 	str	r2, [fp, #-104]	; 0xffffff98
c000867c:	e50b306c 	str	r3, [fp, #-108]	; 0xffffff94
	char c,sign,tmp[66];
	const char *digits="0123456789abcdefghijklmnopqrstuvwxyz";
c0008680:	e30a3280 	movw	r3, #41600	; 0xa280
c0008684:	e34c3000 	movt	r3, #49152	; 0xc000
c0008688:	e50b300c 	str	r3, [fp, #-12]
	int i;

	if (type & LARGE)
c000868c:	e59b3008 	ldr	r3, [fp, #8]
c0008690:	e2033040 	and	r3, r3, #64	; 0x40
c0008694:	e3530000 	cmp	r3, #0
c0008698:	0a000002 	beq	c00086a8 <number+0x44>
		digits = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
c000869c:	e30a32a8 	movw	r3, #41640	; 0xa2a8
c00086a0:	e34c3000 	movt	r3, #49152	; 0xc000
c00086a4:	e50b300c 	str	r3, [fp, #-12]
	if (type & LEFT)
c00086a8:	e59b3008 	ldr	r3, [fp, #8]
c00086ac:	e2033010 	and	r3, r3, #16
c00086b0:	e3530000 	cmp	r3, #0
c00086b4:	0a000002 	beq	c00086c4 <number+0x60>
		type &= ~ZEROPAD;
c00086b8:	e59b3008 	ldr	r3, [fp, #8]
c00086bc:	e3c33001 	bic	r3, r3, #1
c00086c0:	e58b3008 	str	r3, [fp, #8]
	if (base < 2 || base > 36)
c00086c4:	e51b3068 	ldr	r3, [fp, #-104]	; 0xffffff98
c00086c8:	e3530001 	cmp	r3, #1
c00086cc:	9a000002 	bls	c00086dc <number+0x78>
c00086d0:	e51b3068 	ldr	r3, [fp, #-104]	; 0xffffff98
c00086d4:	e3530024 	cmp	r3, #36	; 0x24
c00086d8:	9a000001 	bls	c00086e4 <number+0x80>
		return 0;
c00086dc:	e3a03000 	mov	r3, #0
c00086e0:	ea0000d5 	b	c0008a3c <number+0x3d8>
	c = (type & ZEROPAD) ? '0' : ' ';
c00086e4:	e59b3008 	ldr	r3, [fp, #8]
c00086e8:	e2033001 	and	r3, r3, #1
c00086ec:	e3530000 	cmp	r3, #0
c00086f0:	0a000001 	beq	c00086fc <number+0x98>
c00086f4:	e3a03030 	mov	r3, #48	; 0x30
c00086f8:	ea000000 	b	c0008700 <number+0x9c>
c00086fc:	e3a03020 	mov	r3, #32
c0008700:	e54b3011 	strb	r3, [fp, #-17]	; 0xffffffef
	sign = 0;
c0008704:	e3a03000 	mov	r3, #0
c0008708:	e54b3005 	strb	r3, [fp, #-5]
	if (type & SIGN) {
c000870c:	e59b3008 	ldr	r3, [fp, #8]
c0008710:	e2033002 	and	r3, r3, #2
c0008714:	e3530000 	cmp	r3, #0
c0008718:	0a00001e 	beq	c0008798 <number+0x134>
		if (num < 0) {
c000871c:	e51b3064 	ldr	r3, [fp, #-100]	; 0xffffff9c
c0008720:	e3530000 	cmp	r3, #0
c0008724:	aa000008 	bge	c000874c <number+0xe8>
			sign = '-';
c0008728:	e3a0302d 	mov	r3, #45	; 0x2d
c000872c:	e54b3005 	strb	r3, [fp, #-5]
			num = -num;
c0008730:	e51b3064 	ldr	r3, [fp, #-100]	; 0xffffff9c
c0008734:	e2633000 	rsb	r3, r3, #0
c0008738:	e50b3064 	str	r3, [fp, #-100]	; 0xffffff9c
			size--;
c000873c:	e51b306c 	ldr	r3, [fp, #-108]	; 0xffffff94
c0008740:	e2433001 	sub	r3, r3, #1
c0008744:	e50b306c 	str	r3, [fp, #-108]	; 0xffffff94
c0008748:	ea000012 	b	c0008798 <number+0x134>
		} else if (type & PLUS) {
c000874c:	e59b3008 	ldr	r3, [fp, #8]
c0008750:	e2033004 	and	r3, r3, #4
c0008754:	e3530000 	cmp	r3, #0
c0008758:	0a000005 	beq	c0008774 <number+0x110>
			sign = '+';
c000875c:	e3a0302b 	mov	r3, #43	; 0x2b
c0008760:	e54b3005 	strb	r3, [fp, #-5]
			size--;
c0008764:	e51b306c 	ldr	r3, [fp, #-108]	; 0xffffff94
c0008768:	e2433001 	sub	r3, r3, #1
c000876c:	e50b306c 	str	r3, [fp, #-108]	; 0xffffff94
c0008770:	ea000008 	b	c0008798 <number+0x134>
		} else if (type & SPACE) {
c0008774:	e59b3008 	ldr	r3, [fp, #8]
c0008778:	e2033008 	and	r3, r3, #8
c000877c:	e3530000 	cmp	r3, #0
c0008780:	0a000004 	beq	c0008798 <number+0x134>
			sign = ' ';
c0008784:	e3a03020 	mov	r3, #32
c0008788:	e54b3005 	strb	r3, [fp, #-5]
			size--;
c000878c:	e51b306c 	ldr	r3, [fp, #-108]	; 0xffffff94
c0008790:	e2433001 	sub	r3, r3, #1
c0008794:	e50b306c 	str	r3, [fp, #-108]	; 0xffffff94
		}
	}
	if (type & SPECIAL) {
c0008798:	e59b3008 	ldr	r3, [fp, #8]
c000879c:	e2033020 	and	r3, r3, #32
c00087a0:	e3530000 	cmp	r3, #0
c00087a4:	0a00000c 	beq	c00087dc <number+0x178>
		if (base == 16)
c00087a8:	e51b3068 	ldr	r3, [fp, #-104]	; 0xffffff98
c00087ac:	e3530010 	cmp	r3, #16
c00087b0:	1a000003 	bne	c00087c4 <number+0x160>
			size -= 2;
c00087b4:	e51b306c 	ldr	r3, [fp, #-108]	; 0xffffff94
c00087b8:	e2433002 	sub	r3, r3, #2
c00087bc:	e50b306c 	str	r3, [fp, #-108]	; 0xffffff94
c00087c0:	ea000005 	b	c00087dc <number+0x178>
		else if (base == 8)
c00087c4:	e51b3068 	ldr	r3, [fp, #-104]	; 0xffffff98
c00087c8:	e3530008 	cmp	r3, #8
c00087cc:	1a000002 	bne	c00087dc <number+0x178>
			size--;
c00087d0:	e51b306c 	ldr	r3, [fp, #-108]	; 0xffffff94
c00087d4:	e2433001 	sub	r3, r3, #1
c00087d8:	e50b306c 	str	r3, [fp, #-108]	; 0xffffff94
	}
	i = 0;
c00087dc:	e3a03000 	mov	r3, #0
c00087e0:	e50b3010 	str	r3, [fp, #-16]
	if (num == 0)
c00087e4:	e51b3064 	ldr	r3, [fp, #-100]	; 0xffffff9c
c00087e8:	e3530000 	cmp	r3, #0
c00087ec:	1a000022 	bne	c000887c <number+0x218>
		tmp[i++]='0';
c00087f0:	e51b3010 	ldr	r3, [fp, #-16]
c00087f4:	e2832001 	add	r2, r3, #1
c00087f8:	e50b2010 	str	r2, [fp, #-16]
c00087fc:	e24b2004 	sub	r2, fp, #4
c0008800:	e0823003 	add	r3, r2, r3
c0008804:	e3a02030 	mov	r2, #48	; 0x30
c0008808:	e5432058 	strb	r2, [r3, #-88]	; 0xffffffa8
c000880c:	ea00001d 	b	c0008888 <number+0x224>
	else while (num != 0)
	if (i > precision)
c0008810:	e51b2010 	ldr	r2, [fp, #-16]
c0008814:	e59b3004 	ldr	r3, [fp, #4]
c0008818:	e1520003 	cmp	r2, r3
c000881c:	da000016 	ble	c000887c <number+0x218>
		tmp[i++] = digits[do_div(num,base)];
c0008820:	e51b3064 	ldr	r3, [fp, #-100]	; 0xffffff9c
c0008824:	e51b1068 	ldr	r1, [fp, #-104]	; 0xffffff98
c0008828:	e1a00003 	mov	r0, r3
c000882c:	ebfffe79 	bl	c0008218 <__umodsi3>
c0008830:	e1a03000 	mov	r3, r0
c0008834:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
c0008838:	e51b3064 	ldr	r3, [fp, #-100]	; 0xffffff9c
c000883c:	e51b1068 	ldr	r1, [fp, #-104]	; 0xffffff98
c0008840:	e1a00003 	mov	r0, r3
c0008844:	ebfffe9f 	bl	c00082c8 <__udivsi3>
c0008848:	e1a03000 	mov	r3, r0
c000884c:	e50b3064 	str	r3, [fp, #-100]	; 0xffffff9c
c0008850:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
c0008854:	e1a02003 	mov	r2, r3
c0008858:	e51b300c 	ldr	r3, [fp, #-12]
c000885c:	e0832002 	add	r2, r3, r2
c0008860:	e51b3010 	ldr	r3, [fp, #-16]
c0008864:	e2831001 	add	r1, r3, #1
c0008868:	e50b1010 	str	r1, [fp, #-16]
c000886c:	e5d22000 	ldrb	r2, [r2]
c0008870:	e24b1004 	sub	r1, fp, #4
c0008874:	e0813003 	add	r3, r1, r3
c0008878:	e5432058 	strb	r2, [r3, #-88]	; 0xffffffa8
	else while (num != 0)
c000887c:	e51b3064 	ldr	r3, [fp, #-100]	; 0xffffff9c
c0008880:	e3530000 	cmp	r3, #0
c0008884:	1affffe1 	bne	c0008810 <number+0x1ac>
	precision = i;
c0008888:	e51b3010 	ldr	r3, [fp, #-16]
c000888c:	e58b3004 	str	r3, [fp, #4]
	size -= precision;
c0008890:	e51b206c 	ldr	r2, [fp, #-108]	; 0xffffff94
c0008894:	e59b3004 	ldr	r3, [fp, #4]
c0008898:	e0423003 	sub	r3, r2, r3
c000889c:	e50b306c 	str	r3, [fp, #-108]	; 0xffffff94
	if (!(type&(ZEROPAD+LEFT)))
c00088a0:	e59b3008 	ldr	r3, [fp, #8]
c00088a4:	e2033011 	and	r3, r3, #17
c00088a8:	e3530000 	cmp	r3, #0
c00088ac:	1a00000a 	bne	c00088dc <number+0x278>
		while(size-->0)
c00088b0:	ea000004 	b	c00088c8 <number+0x264>
			*str++ = ' ';
c00088b4:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
c00088b8:	e2832001 	add	r2, r3, #1
c00088bc:	e50b2060 	str	r2, [fp, #-96]	; 0xffffffa0
c00088c0:	e3a02020 	mov	r2, #32
c00088c4:	e5c32000 	strb	r2, [r3]
		while(size-->0)
c00088c8:	e51b306c 	ldr	r3, [fp, #-108]	; 0xffffff94
c00088cc:	e2432001 	sub	r2, r3, #1
c00088d0:	e50b206c 	str	r2, [fp, #-108]	; 0xffffff94
c00088d4:	e3530000 	cmp	r3, #0
c00088d8:	cafffff5 	bgt	c00088b4 <number+0x250>
	if (sign)
c00088dc:	e55b3005 	ldrb	r3, [fp, #-5]
c00088e0:	e3530000 	cmp	r3, #0
c00088e4:	0a000004 	beq	c00088fc <number+0x298>
		*str++ = sign;
c00088e8:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
c00088ec:	e2832001 	add	r2, r3, #1
c00088f0:	e50b2060 	str	r2, [fp, #-96]	; 0xffffffa0
c00088f4:	e55b2005 	ldrb	r2, [fp, #-5]
c00088f8:	e5c32000 	strb	r2, [r3]
	if (type & SPECIAL) {
c00088fc:	e59b3008 	ldr	r3, [fp, #8]
c0008900:	e2033020 	and	r3, r3, #32
c0008904:	e3530000 	cmp	r3, #0
c0008908:	0a000016 	beq	c0008968 <number+0x304>
		if (base==8)
c000890c:	e51b3068 	ldr	r3, [fp, #-104]	; 0xffffff98
c0008910:	e3530008 	cmp	r3, #8
c0008914:	1a000005 	bne	c0008930 <number+0x2cc>
			*str++ = '0';
c0008918:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
c000891c:	e2832001 	add	r2, r3, #1
c0008920:	e50b2060 	str	r2, [fp, #-96]	; 0xffffffa0
c0008924:	e3a02030 	mov	r2, #48	; 0x30
c0008928:	e5c32000 	strb	r2, [r3]
c000892c:	ea00000d 	b	c0008968 <number+0x304>
		else if (base==16) {
c0008930:	e51b3068 	ldr	r3, [fp, #-104]	; 0xffffff98
c0008934:	e3530010 	cmp	r3, #16
c0008938:	1a00000a 	bne	c0008968 <number+0x304>
			*str++ = '0';
c000893c:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
c0008940:	e2832001 	add	r2, r3, #1
c0008944:	e50b2060 	str	r2, [fp, #-96]	; 0xffffffa0
c0008948:	e3a02030 	mov	r2, #48	; 0x30
c000894c:	e5c32000 	strb	r2, [r3]
			*str++ = digits[33];
c0008950:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
c0008954:	e2832001 	add	r2, r3, #1
c0008958:	e50b2060 	str	r2, [fp, #-96]	; 0xffffffa0
c000895c:	e51b200c 	ldr	r2, [fp, #-12]
c0008960:	e5d22021 	ldrb	r2, [r2, #33]	; 0x21
c0008964:	e5c32000 	strb	r2, [r3]
		}
	}
	if (!(type & LEFT))
c0008968:	e59b3008 	ldr	r3, [fp, #8]
c000896c:	e2033010 	and	r3, r3, #16
c0008970:	e3530000 	cmp	r3, #0
c0008974:	1a000010 	bne	c00089bc <number+0x358>
		while (size-- > 0)
c0008978:	ea000004 	b	c0008990 <number+0x32c>
			*str++ = c;
c000897c:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
c0008980:	e2832001 	add	r2, r3, #1
c0008984:	e50b2060 	str	r2, [fp, #-96]	; 0xffffffa0
c0008988:	e55b2011 	ldrb	r2, [fp, #-17]	; 0xffffffef
c000898c:	e5c32000 	strb	r2, [r3]
		while (size-- > 0)
c0008990:	e51b306c 	ldr	r3, [fp, #-108]	; 0xffffff94
c0008994:	e2432001 	sub	r2, r3, #1
c0008998:	e50b206c 	str	r2, [fp, #-108]	; 0xffffff94
c000899c:	e3530000 	cmp	r3, #0
c00089a0:	cafffff5 	bgt	c000897c <number+0x318>
	while (i < precision--)
c00089a4:	ea000004 	b	c00089bc <number+0x358>
		*str++ = '0';
c00089a8:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
c00089ac:	e2832001 	add	r2, r3, #1
c00089b0:	e50b2060 	str	r2, [fp, #-96]	; 0xffffffa0
c00089b4:	e3a02030 	mov	r2, #48	; 0x30
c00089b8:	e5c32000 	strb	r2, [r3]
	while (i < precision--)
c00089bc:	e59b3004 	ldr	r3, [fp, #4]
c00089c0:	e2432001 	sub	r2, r3, #1
c00089c4:	e58b2004 	str	r2, [fp, #4]
c00089c8:	e51b2010 	ldr	r2, [fp, #-16]
c00089cc:	e1520003 	cmp	r2, r3
c00089d0:	bafffff4 	blt	c00089a8 <number+0x344>
	while (i-- > 0)
c00089d4:	ea000007 	b	c00089f8 <number+0x394>
		*str++ = tmp[i];
c00089d8:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
c00089dc:	e2832001 	add	r2, r3, #1
c00089e0:	e50b2060 	str	r2, [fp, #-96]	; 0xffffffa0
c00089e4:	e24b105c 	sub	r1, fp, #92	; 0x5c
c00089e8:	e51b2010 	ldr	r2, [fp, #-16]
c00089ec:	e0812002 	add	r2, r1, r2
c00089f0:	e5d22000 	ldrb	r2, [r2]
c00089f4:	e5c32000 	strb	r2, [r3]
	while (i-- > 0)
c00089f8:	e51b3010 	ldr	r3, [fp, #-16]
c00089fc:	e2432001 	sub	r2, r3, #1
c0008a00:	e50b2010 	str	r2, [fp, #-16]
c0008a04:	e3530000 	cmp	r3, #0
c0008a08:	cafffff2 	bgt	c00089d8 <number+0x374>
	while (size-- > 0)
c0008a0c:	ea000004 	b	c0008a24 <number+0x3c0>
		*str++ = ' ';
c0008a10:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
c0008a14:	e2832001 	add	r2, r3, #1
c0008a18:	e50b2060 	str	r2, [fp, #-96]	; 0xffffffa0
c0008a1c:	e3a02020 	mov	r2, #32
c0008a20:	e5c32000 	strb	r2, [r3]
	while (size-- > 0)
c0008a24:	e51b306c 	ldr	r3, [fp, #-108]	; 0xffffff94
c0008a28:	e2432001 	sub	r2, r3, #1
c0008a2c:	e50b206c 	str	r2, [fp, #-108]	; 0xffffff94
c0008a30:	e3530000 	cmp	r3, #0
c0008a34:	cafffff5 	bgt	c0008a10 <number+0x3ac>
	return str;
c0008a38:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
}
c0008a3c:	e1a00003 	mov	r0, r3
c0008a40:	e24bd004 	sub	sp, fp, #4
c0008a44:	e8bd8800 	pop	{fp, pc}

c0008a48 <strnlen>:

/* Forward decl. needed for IP address printing stuff... */
int sprintf(char * buf, const char *fmt, ...);
size_t strnlen(const char * s, size_t count)
{
c0008a48:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c0008a4c:	e28db000 	add	fp, sp, #0
c0008a50:	e24dd00c 	sub	sp, sp, #12
c0008a54:	e50b0008 	str	r0, [fp, #-8]
c0008a58:	e50b100c 	str	r1, [fp, #-12]
	const char *sc;

	for (sc = s; count-- && *sc != '\0'; ++sc)
c0008a5c:	e51b3008 	ldr	r3, [fp, #-8]
c0008a60:	e50b3004 	str	r3, [fp, #-4]
c0008a64:	ea000002 	b	c0008a74 <strnlen+0x2c>
c0008a68:	e51b3004 	ldr	r3, [fp, #-4]
c0008a6c:	e2833001 	add	r3, r3, #1
c0008a70:	e50b3004 	str	r3, [fp, #-4]
c0008a74:	e51b300c 	ldr	r3, [fp, #-12]
c0008a78:	e2432001 	sub	r2, r3, #1
c0008a7c:	e50b200c 	str	r2, [fp, #-12]
c0008a80:	e3530000 	cmp	r3, #0
c0008a84:	0a000003 	beq	c0008a98 <strnlen+0x50>
c0008a88:	e51b3004 	ldr	r3, [fp, #-4]
c0008a8c:	e5d33000 	ldrb	r3, [r3]
c0008a90:	e3530000 	cmp	r3, #0
c0008a94:	1afffff3 	bne	c0008a68 <strnlen+0x20>
		/* nothing */;
	return sc - s;
c0008a98:	e51b2004 	ldr	r2, [fp, #-4]
c0008a9c:	e51b3008 	ldr	r3, [fp, #-8]
c0008aa0:	e0423003 	sub	r3, r2, r3
}
c0008aa4:	e1a00003 	mov	r0, r3
c0008aa8:	e28bd000 	add	sp, fp, #0
c0008aac:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c0008ab0:	e12fff1e 	bx	lr

c0008ab4 <vsprintf>:
int vsprintf(char *buf, const char *fmt, va_list args)
{
c0008ab4:	e92d4800 	push	{fp, lr}
c0008ab8:	e28db004 	add	fp, sp, #4
c0008abc:	e24dd044 	sub	sp, sp, #68	; 0x44
c0008ac0:	e50b0038 	str	r0, [fp, #-56]	; 0xffffffc8
c0008ac4:	e50b103c 	str	r1, [fp, #-60]	; 0xffffffc4
c0008ac8:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
	int field_width;	/* width of output field */
	int precision;		/* min. # of digits for integers; max
				   number of chars for from string */
	int qualifier;		/* 'h', 'l', or 'q' for integer fields */

	for (str=buf ; *fmt ; ++fmt) {
c0008acc:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
c0008ad0:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
c0008ad4:	ea00021b 	b	c0009348 <vsprintf+0x894>
		if (*fmt != '%') {
c0008ad8:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008adc:	e5d33000 	ldrb	r3, [r3]
c0008ae0:	e3530025 	cmp	r3, #37	; 0x25
c0008ae4:	0a000006 	beq	c0008b04 <vsprintf+0x50>
			*str++ = *fmt;
c0008ae8:	e51b203c 	ldr	r2, [fp, #-60]	; 0xffffffc4
c0008aec:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c0008af0:	e2831001 	add	r1, r3, #1
c0008af4:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
c0008af8:	e5d22000 	ldrb	r2, [r2]
c0008afc:	e5c32000 	strb	r2, [r3]
			continue;
c0008b00:	ea00020d 	b	c000933c <vsprintf+0x888>
		}

		/* process flags */
		flags = 0;
c0008b04:	e3a03000 	mov	r3, #0
c0008b08:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
		repeat:
			++fmt;		/* this also skips first '%' */
c0008b0c:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008b10:	e2833001 	add	r3, r3, #1
c0008b14:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
			switch (*fmt) {
c0008b18:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008b1c:	e5d33000 	ldrb	r3, [r3]
c0008b20:	e2433020 	sub	r3, r3, #32
c0008b24:	e3530010 	cmp	r3, #16
c0008b28:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
c0008b2c:	ea000024 	b	c0008bc4 <vsprintf+0x110>
c0008b30:	c0008b94 	mulgt	r0, r4, fp
c0008b34:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b38:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b3c:	c0008ba4 	andgt	r8, r0, r4, lsr #23
c0008b40:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b44:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b48:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b4c:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b50:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b54:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b58:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b5c:	c0008b84 	andgt	r8, r0, r4, lsl #23
c0008b60:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b64:	c0008b74 	andgt	r8, r0, r4, ror fp
c0008b68:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b6c:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b70:	c0008bb4 			; <UNDEFINED> instruction: 0xc0008bb4
				case '-': flags |= LEFT; goto repeat;
c0008b74:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c0008b78:	e3833010 	orr	r3, r3, #16
c0008b7c:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
c0008b80:	eaffffe1 	b	c0008b0c <vsprintf+0x58>
				case '+': flags |= PLUS; goto repeat;
c0008b84:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c0008b88:	e3833004 	orr	r3, r3, #4
c0008b8c:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
c0008b90:	eaffffdd 	b	c0008b0c <vsprintf+0x58>
				case ' ': flags |= SPACE; goto repeat;
c0008b94:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c0008b98:	e3833008 	orr	r3, r3, #8
c0008b9c:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
c0008ba0:	eaffffd9 	b	c0008b0c <vsprintf+0x58>
				case '#': flags |= SPECIAL; goto repeat;
c0008ba4:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c0008ba8:	e3833020 	orr	r3, r3, #32
c0008bac:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
c0008bb0:	eaffffd5 	b	c0008b0c <vsprintf+0x58>
				case '0': flags |= ZEROPAD; goto repeat;
c0008bb4:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c0008bb8:	e3833001 	orr	r3, r3, #1
c0008bbc:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
c0008bc0:	eaffffd1 	b	c0008b0c <vsprintf+0x58>
				}

		/* get field width */
		field_width = -1;
c0008bc4:	e3e03000 	mvn	r3, #0
c0008bc8:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
		if (is_digit(*fmt))
c0008bcc:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008bd0:	e5d33000 	ldrb	r3, [r3]
c0008bd4:	e353002f 	cmp	r3, #47	; 0x2f
c0008bd8:	9a000008 	bls	c0008c00 <vsprintf+0x14c>
c0008bdc:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008be0:	e5d33000 	ldrb	r3, [r3]
c0008be4:	e3530039 	cmp	r3, #57	; 0x39
c0008be8:	8a000004 	bhi	c0008c00 <vsprintf+0x14c>
			field_width = skip_atoi(&fmt);
c0008bec:	e24b303c 	sub	r3, fp, #60	; 0x3c
c0008bf0:	e1a00003 	mov	r0, r3
c0008bf4:	ebfffe75 	bl	c00085d0 <skip_atoi>
c0008bf8:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
c0008bfc:	ea000014 	b	c0008c54 <vsprintf+0x1a0>
		else if (*fmt == '*') {
c0008c00:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008c04:	e5d33000 	ldrb	r3, [r3]
c0008c08:	e353002a 	cmp	r3, #42	; 0x2a
c0008c0c:	1a000010 	bne	c0008c54 <vsprintf+0x1a0>
			++fmt;
c0008c10:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008c14:	e2833001 	add	r3, r3, #1
c0008c18:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
			/* it's the next argument */
			field_width = va_arg(args, int);
c0008c1c:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c0008c20:	e2832004 	add	r2, r3, #4
c0008c24:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c0008c28:	e5933000 	ldr	r3, [r3]
c0008c2c:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
			if (field_width < 0) {
c0008c30:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c0008c34:	e3530000 	cmp	r3, #0
c0008c38:	aa000005 	bge	c0008c54 <vsprintf+0x1a0>
				field_width = -field_width;
c0008c3c:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c0008c40:	e2633000 	rsb	r3, r3, #0
c0008c44:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
				flags |= LEFT;
c0008c48:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c0008c4c:	e3833010 	orr	r3, r3, #16
c0008c50:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
			}
		}

		/* get the precision */
		precision = -1;
c0008c54:	e3e03000 	mvn	r3, #0
c0008c58:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
		if (*fmt == '.') {
c0008c5c:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008c60:	e5d33000 	ldrb	r3, [r3]
c0008c64:	e353002e 	cmp	r3, #46	; 0x2e
c0008c68:	1a000020 	bne	c0008cf0 <vsprintf+0x23c>
			++fmt;
c0008c6c:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008c70:	e2833001 	add	r3, r3, #1
c0008c74:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
			if (is_digit(*fmt))
c0008c78:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008c7c:	e5d33000 	ldrb	r3, [r3]
c0008c80:	e353002f 	cmp	r3, #47	; 0x2f
c0008c84:	9a000008 	bls	c0008cac <vsprintf+0x1f8>
c0008c88:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008c8c:	e5d33000 	ldrb	r3, [r3]
c0008c90:	e3530039 	cmp	r3, #57	; 0x39
c0008c94:	8a000004 	bhi	c0008cac <vsprintf+0x1f8>
				precision = skip_atoi(&fmt);
c0008c98:	e24b303c 	sub	r3, fp, #60	; 0x3c
c0008c9c:	e1a00003 	mov	r0, r3
c0008ca0:	ebfffe4a 	bl	c00085d0 <skip_atoi>
c0008ca4:	e50b0024 	str	r0, [fp, #-36]	; 0xffffffdc
c0008ca8:	ea00000b 	b	c0008cdc <vsprintf+0x228>
			else if (*fmt == '*') {
c0008cac:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008cb0:	e5d33000 	ldrb	r3, [r3]
c0008cb4:	e353002a 	cmp	r3, #42	; 0x2a
c0008cb8:	1a000007 	bne	c0008cdc <vsprintf+0x228>
				++fmt;
c0008cbc:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008cc0:	e2833001 	add	r3, r3, #1
c0008cc4:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
				/* it's the next argument */
				precision = va_arg(args, int);
c0008cc8:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c0008ccc:	e2832004 	add	r2, r3, #4
c0008cd0:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c0008cd4:	e5933000 	ldr	r3, [r3]
c0008cd8:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
			}
			if (precision < 0)
c0008cdc:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
c0008ce0:	e3530000 	cmp	r3, #0
c0008ce4:	aa000001 	bge	c0008cf0 <vsprintf+0x23c>
				precision = 0;
c0008ce8:	e3a03000 	mov	r3, #0
c0008cec:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
		}

		/* get the conversion qualifier */
		qualifier = -1;
c0008cf0:	e3e03000 	mvn	r3, #0
c0008cf4:	e50b3028 	str	r3, [fp, #-40]	; 0xffffffd8
		if (*fmt == 'h' || *fmt == 'l' || *fmt == 'L' ||
c0008cf8:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008cfc:	e5d33000 	ldrb	r3, [r3]
c0008d00:	e3530068 	cmp	r3, #104	; 0x68
c0008d04:	0a000017 	beq	c0008d68 <vsprintf+0x2b4>
c0008d08:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008d0c:	e5d33000 	ldrb	r3, [r3]
c0008d10:	e353006c 	cmp	r3, #108	; 0x6c
c0008d14:	0a000013 	beq	c0008d68 <vsprintf+0x2b4>
c0008d18:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008d1c:	e5d33000 	ldrb	r3, [r3]
c0008d20:	e353004c 	cmp	r3, #76	; 0x4c
c0008d24:	0a00000f 	beq	c0008d68 <vsprintf+0x2b4>
		    *fmt == 'Z' || *fmt == 'z' || *fmt == 't' ||
c0008d28:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008d2c:	e5d33000 	ldrb	r3, [r3]
		if (*fmt == 'h' || *fmt == 'l' || *fmt == 'L' ||
c0008d30:	e353005a 	cmp	r3, #90	; 0x5a
c0008d34:	0a00000b 	beq	c0008d68 <vsprintf+0x2b4>
		    *fmt == 'Z' || *fmt == 'z' || *fmt == 't' ||
c0008d38:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008d3c:	e5d33000 	ldrb	r3, [r3]
c0008d40:	e353007a 	cmp	r3, #122	; 0x7a
c0008d44:	0a000007 	beq	c0008d68 <vsprintf+0x2b4>
c0008d48:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008d4c:	e5d33000 	ldrb	r3, [r3]
c0008d50:	e3530074 	cmp	r3, #116	; 0x74
c0008d54:	0a000003 	beq	c0008d68 <vsprintf+0x2b4>
		    *fmt == 'q' ) {
c0008d58:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008d5c:	e5d33000 	ldrb	r3, [r3]
		    *fmt == 'Z' || *fmt == 'z' || *fmt == 't' ||
c0008d60:	e3530071 	cmp	r3, #113	; 0x71
c0008d64:	1a000012 	bne	c0008db4 <vsprintf+0x300>
			qualifier = *fmt;
c0008d68:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008d6c:	e5d33000 	ldrb	r3, [r3]
c0008d70:	e50b3028 	str	r3, [fp, #-40]	; 0xffffffd8
			if (qualifier == 'l' && *(fmt+1) == 'l') {
c0008d74:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
c0008d78:	e353006c 	cmp	r3, #108	; 0x6c
c0008d7c:	1a000009 	bne	c0008da8 <vsprintf+0x2f4>
c0008d80:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008d84:	e2833001 	add	r3, r3, #1
c0008d88:	e5d33000 	ldrb	r3, [r3]
c0008d8c:	e353006c 	cmp	r3, #108	; 0x6c
c0008d90:	1a000004 	bne	c0008da8 <vsprintf+0x2f4>
				qualifier = 'q';
c0008d94:	e3a03071 	mov	r3, #113	; 0x71
c0008d98:	e50b3028 	str	r3, [fp, #-40]	; 0xffffffd8
				++fmt;
c0008d9c:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008da0:	e2833001 	add	r3, r3, #1
c0008da4:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
			}
			++fmt;
c0008da8:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008dac:	e2833001 	add	r3, r3, #1
c0008db0:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
		}

		/* default base */
		base = 10;
c0008db4:	e3a0300a 	mov	r3, #10
c0008db8:	e50b3010 	str	r3, [fp, #-16]

		switch (*fmt) {
c0008dbc:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008dc0:	e5d33000 	ldrb	r3, [r3]
c0008dc4:	e2433025 	sub	r3, r3, #37	; 0x25
c0008dc8:	e3530053 	cmp	r3, #83	; 0x53
c0008dcc:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
c0008dd0:	ea0000fc 	b	c00091c8 <vsprintf+0x714>
c0008dd4:	c000917c 	andgt	r9, r0, ip, ror r1
c0008dd8:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ddc:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008de0:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008de4:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008de8:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008dec:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008df0:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008df4:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008df8:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008dfc:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e00:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e04:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e08:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e0c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e10:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e14:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e18:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e1c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e20:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e24:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e28:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e2c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e30:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e34:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e38:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e3c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e40:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e44:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e48:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e4c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e50:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e54:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e58:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e5c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e60:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e64:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e68:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e6c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e70:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e74:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e78:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e7c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e80:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e84:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e88:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e8c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e90:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e94:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e98:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e9c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ea0:	c00091a0 	andgt	r9, r0, r0, lsr #3
c0008ea4:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ea8:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008eac:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008eb0:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008eb4:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008eb8:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ebc:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ec0:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ec4:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ec8:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ecc:	c0008f24 	andgt	r8, r0, r4, lsr #30
c0008ed0:	c00091b8 			; <UNDEFINED> instruction: 0xc00091b8
c0008ed4:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ed8:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008edc:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ee0:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ee4:	c00091b8 			; <UNDEFINED> instruction: 0xc00091b8
c0008ee8:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008eec:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ef0:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ef4:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ef8:	c0009118 	andgt	r9, r0, r8, lsl r1
c0008efc:	c0009194 	mulgt	r0, r4, r1
c0008f00:	c00090bc 	strhgt	r9, [r0], -ip
c0008f04:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008f08:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008f0c:	c0008fbc 			; <UNDEFINED> instruction: 0xc0008fbc
c0008f10:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008f14:	c0009218 	andgt	r9, r0, r8, lsl r2
c0008f18:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008f1c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008f20:	c00091ac 	andgt	r9, r0, ip, lsr #3
		case 'c':
			if (!(flags & LEFT))
c0008f24:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c0008f28:	e2033010 	and	r3, r3, #16
c0008f2c:	e3530000 	cmp	r3, #0
c0008f30:	1a00000b 	bne	c0008f64 <vsprintf+0x4b0>
				while (--field_width > 0)
c0008f34:	ea000004 	b	c0008f4c <vsprintf+0x498>
					*str++ = ' ';
c0008f38:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c0008f3c:	e2832001 	add	r2, r3, #1
c0008f40:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
c0008f44:	e3a02020 	mov	r2, #32
c0008f48:	e5c32000 	strb	r2, [r3]
				while (--field_width > 0)
c0008f4c:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c0008f50:	e2433001 	sub	r3, r3, #1
c0008f54:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
c0008f58:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c0008f5c:	e3530000 	cmp	r3, #0
c0008f60:	cafffff4 	bgt	c0008f38 <vsprintf+0x484>
			*str++ = (unsigned char) va_arg(args, int);
c0008f64:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c0008f68:	e2832004 	add	r2, r3, #4
c0008f6c:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c0008f70:	e5931000 	ldr	r1, [r3]
c0008f74:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c0008f78:	e2832001 	add	r2, r3, #1
c0008f7c:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
c0008f80:	e6ef2071 	uxtb	r2, r1
c0008f84:	e5c32000 	strb	r2, [r3]
			while (--field_width > 0)
c0008f88:	ea000004 	b	c0008fa0 <vsprintf+0x4ec>
				*str++ = ' ';
c0008f8c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c0008f90:	e2832001 	add	r2, r3, #1
c0008f94:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
c0008f98:	e3a02020 	mov	r2, #32
c0008f9c:	e5c32000 	strb	r2, [r3]
			while (--field_width > 0)
c0008fa0:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c0008fa4:	e2433001 	sub	r3, r3, #1
c0008fa8:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
c0008fac:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c0008fb0:	e3530000 	cmp	r3, #0
c0008fb4:	cafffff4 	bgt	c0008f8c <vsprintf+0x4d8>
			continue;
c0008fb8:	ea0000df 	b	c000933c <vsprintf+0x888>

		case 's':
			s = va_arg(args, char *);
c0008fbc:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c0008fc0:	e2832004 	add	r2, r3, #4
c0008fc4:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c0008fc8:	e5933000 	ldr	r3, [r3]
c0008fcc:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
			if (!s)
c0008fd0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
c0008fd4:	e3530000 	cmp	r3, #0
c0008fd8:	1a000002 	bne	c0008fe8 <vsprintf+0x534>
				s = "<NULL>";
c0008fdc:	e30a32d0 	movw	r3, #41680	; 0xa2d0
c0008fe0:	e34c3000 	movt	r3, #49152	; 0xc000
c0008fe4:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8

			len = strnlen(s, precision);
c0008fe8:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
c0008fec:	e1a01003 	mov	r1, r3
c0008ff0:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
c0008ff4:	ebfffe93 	bl	c0008a48 <strnlen>
c0008ff8:	e1a03000 	mov	r3, r0
c0008ffc:	e50b302c 	str	r3, [fp, #-44]	; 0xffffffd4

			if (!(flags & LEFT))
c0009000:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c0009004:	e2033010 	and	r3, r3, #16
c0009008:	e3530000 	cmp	r3, #0
c000900c:	1a00000b 	bne	c0009040 <vsprintf+0x58c>
				while (len < field_width--)
c0009010:	ea000004 	b	c0009028 <vsprintf+0x574>
					*str++ = ' ';
c0009014:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c0009018:	e2832001 	add	r2, r3, #1
c000901c:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
c0009020:	e3a02020 	mov	r2, #32
c0009024:	e5c32000 	strb	r2, [r3]
				while (len < field_width--)
c0009028:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c000902c:	e2432001 	sub	r2, r3, #1
c0009030:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
c0009034:	e51b202c 	ldr	r2, [fp, #-44]	; 0xffffffd4
c0009038:	e1520003 	cmp	r2, r3
c000903c:	bafffff4 	blt	c0009014 <vsprintf+0x560>
			for (i = 0; i < len; ++i)
c0009040:	e3a03000 	mov	r3, #0
c0009044:	e50b300c 	str	r3, [fp, #-12]
c0009048:	ea00000a 	b	c0009078 <vsprintf+0x5c4>
				*str++ = *s++;
c000904c:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
c0009050:	e2823001 	add	r3, r2, #1
c0009054:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
c0009058:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c000905c:	e2831001 	add	r1, r3, #1
c0009060:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
c0009064:	e5d22000 	ldrb	r2, [r2]
c0009068:	e5c32000 	strb	r2, [r3]
			for (i = 0; i < len; ++i)
c000906c:	e51b300c 	ldr	r3, [fp, #-12]
c0009070:	e2833001 	add	r3, r3, #1
c0009074:	e50b300c 	str	r3, [fp, #-12]
c0009078:	e51b200c 	ldr	r2, [fp, #-12]
c000907c:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
c0009080:	e1520003 	cmp	r2, r3
c0009084:	bafffff0 	blt	c000904c <vsprintf+0x598>
			while (len < field_width--)
c0009088:	ea000004 	b	c00090a0 <vsprintf+0x5ec>
				*str++ = ' ';
c000908c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c0009090:	e2832001 	add	r2, r3, #1
c0009094:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
c0009098:	e3a02020 	mov	r2, #32
c000909c:	e5c32000 	strb	r2, [r3]
			while (len < field_width--)
c00090a0:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c00090a4:	e2432001 	sub	r2, r3, #1
c00090a8:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
c00090ac:	e51b202c 	ldr	r2, [fp, #-44]	; 0xffffffd4
c00090b0:	e1520003 	cmp	r2, r3
c00090b4:	bafffff4 	blt	c000908c <vsprintf+0x5d8>
			continue;
c00090b8:	ea00009f 	b	c000933c <vsprintf+0x888>

		case 'p':
			if (field_width == -1) {
c00090bc:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c00090c0:	e3730001 	cmn	r3, #1
c00090c4:	1a000004 	bne	c00090dc <vsprintf+0x628>
				field_width = 2*sizeof(void *);
c00090c8:	e3a03008 	mov	r3, #8
c00090cc:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
				flags |= ZEROPAD;
c00090d0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c00090d4:	e3833001 	orr	r3, r3, #1
c00090d8:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
			}
			str = number(str,
				(unsigned long) va_arg(args, void *), 16,
c00090dc:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c00090e0:	e2832004 	add	r2, r3, #4
c00090e4:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c00090e8:	e5933000 	ldr	r3, [r3]
			str = number(str,
c00090ec:	e1a01003 	mov	r1, r3
c00090f0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c00090f4:	e58d3004 	str	r3, [sp, #4]
c00090f8:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
c00090fc:	e58d3000 	str	r3, [sp]
c0009100:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c0009104:	e3a02010 	mov	r2, #16
c0009108:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
c000910c:	ebfffd54 	bl	c0008664 <number>
c0009110:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
				field_width, precision, flags);
			continue;
c0009114:	ea000088 	b	c000933c <vsprintf+0x888>


		case 'n':
			if (qualifier == 'l') {
c0009118:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
c000911c:	e353006c 	cmp	r3, #108	; 0x6c
c0009120:	1a00000a 	bne	c0009150 <vsprintf+0x69c>
				long * ip = va_arg(args, long *);
c0009124:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c0009128:	e2832004 	add	r2, r3, #4
c000912c:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c0009130:	e5933000 	ldr	r3, [r3]
c0009134:	e50b3034 	str	r3, [fp, #-52]	; 0xffffffcc
				*ip = (str - buf);
c0009138:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
c000913c:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
c0009140:	e0422003 	sub	r2, r2, r3
c0009144:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
c0009148:	e5832000 	str	r2, [r3]
			} else {
				int * ip = va_arg(args, int *);
				*ip = (str - buf);
			}
			continue;
c000914c:	ea00007a 	b	c000933c <vsprintf+0x888>
				int * ip = va_arg(args, int *);
c0009150:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c0009154:	e2832004 	add	r2, r3, #4
c0009158:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c000915c:	e5933000 	ldr	r3, [r3]
c0009160:	e50b3030 	str	r3, [fp, #-48]	; 0xffffffd0
				*ip = (str - buf);
c0009164:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
c0009168:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
c000916c:	e0422003 	sub	r2, r2, r3
c0009170:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
c0009174:	e5832000 	str	r2, [r3]
			continue;
c0009178:	ea00006f 	b	c000933c <vsprintf+0x888>

		case '%':
			*str++ = '%';
c000917c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c0009180:	e2832001 	add	r2, r3, #1
c0009184:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
c0009188:	e3a02025 	mov	r2, #37	; 0x25
c000918c:	e5c32000 	strb	r2, [r3]
			continue;
c0009190:	ea000069 	b	c000933c <vsprintf+0x888>

		/* integer number formats - set up the flags and "break" */
		case 'o':
			base = 8;
c0009194:	e3a03008 	mov	r3, #8
c0009198:	e50b3010 	str	r3, [fp, #-16]
			break;
c000919c:	ea00001e 	b	c000921c <vsprintf+0x768>

		case 'X':
			flags |= LARGE;
c00091a0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c00091a4:	e3833040 	orr	r3, r3, #64	; 0x40
c00091a8:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
		case 'x':
			base = 16;
c00091ac:	e3a03010 	mov	r3, #16
c00091b0:	e50b3010 	str	r3, [fp, #-16]
			break;
c00091b4:	ea000018 	b	c000921c <vsprintf+0x768>

		case 'd':
		case 'i':
			flags |= SIGN;
c00091b8:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c00091bc:	e3833002 	orr	r3, r3, #2
c00091c0:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
		case 'u':
			break;
c00091c4:	ea000013 	b	c0009218 <vsprintf+0x764>

		default:
			*str++ = '%';
c00091c8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c00091cc:	e2832001 	add	r2, r3, #1
c00091d0:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
c00091d4:	e3a02025 	mov	r2, #37	; 0x25
c00091d8:	e5c32000 	strb	r2, [r3]
			if (*fmt)
c00091dc:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c00091e0:	e5d33000 	ldrb	r3, [r3]
c00091e4:	e3530000 	cmp	r3, #0
c00091e8:	0a000006 	beq	c0009208 <vsprintf+0x754>
				*str++ = *fmt;
c00091ec:	e51b203c 	ldr	r2, [fp, #-60]	; 0xffffffc4
c00091f0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c00091f4:	e2831001 	add	r1, r3, #1
c00091f8:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
c00091fc:	e5d22000 	ldrb	r2, [r2]
c0009200:	e5c32000 	strb	r2, [r3]
			else
				--fmt;
			continue;
c0009204:	ea00004c 	b	c000933c <vsprintf+0x888>
				--fmt;
c0009208:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c000920c:	e2433001 	sub	r3, r3, #1
c0009210:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
			continue;
c0009214:	ea000048 	b	c000933c <vsprintf+0x888>
			break;
c0009218:	e320f000 	nop	{0}
#ifdef CFG_64BIT_VSPRINTF
		if (qualifier == 'q')  /* "quad" for 64 bit variables */
			num = va_arg(args, unsigned long long);
		else
#endif
		if (qualifier == 'l') {
c000921c:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
c0009220:	e353006c 	cmp	r3, #108	; 0x6c
c0009224:	1a000005 	bne	c0009240 <vsprintf+0x78c>
			num = va_arg(args, unsigned long);
c0009228:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c000922c:	e2832004 	add	r2, r3, #4
c0009230:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c0009234:	e5933000 	ldr	r3, [r3]
c0009238:	e50b3008 	str	r3, [fp, #-8]
c000923c:	ea000034 	b	c0009314 <vsprintf+0x860>
		} else if (qualifier == 'Z' || qualifier == 'z') {
c0009240:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
c0009244:	e353005a 	cmp	r3, #90	; 0x5a
c0009248:	0a000002 	beq	c0009258 <vsprintf+0x7a4>
c000924c:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
c0009250:	e353007a 	cmp	r3, #122	; 0x7a
c0009254:	1a000005 	bne	c0009270 <vsprintf+0x7bc>
			num = va_arg(args, size_t);
c0009258:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c000925c:	e2832004 	add	r2, r3, #4
c0009260:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c0009264:	e5933000 	ldr	r3, [r3]
c0009268:	e50b3008 	str	r3, [fp, #-8]
c000926c:	ea000028 	b	c0009314 <vsprintf+0x860>
		} else if (qualifier == 't') {
c0009270:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
c0009274:	e3530074 	cmp	r3, #116	; 0x74
c0009278:	1a000005 	bne	c0009294 <vsprintf+0x7e0>
			num = va_arg(args, long);
c000927c:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c0009280:	e2832004 	add	r2, r3, #4
c0009284:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c0009288:	e5933000 	ldr	r3, [r3]
c000928c:	e50b3008 	str	r3, [fp, #-8]
c0009290:	ea00001f 	b	c0009314 <vsprintf+0x860>
		} else if (qualifier == 'h') {
c0009294:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
c0009298:	e3530068 	cmp	r3, #104	; 0x68
c000929c:	1a00000d 	bne	c00092d8 <vsprintf+0x824>
			num = (unsigned short) va_arg(args, int);
c00092a0:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c00092a4:	e2832004 	add	r2, r3, #4
c00092a8:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c00092ac:	e5933000 	ldr	r3, [r3]
c00092b0:	e6ff3073 	uxth	r3, r3
c00092b4:	e50b3008 	str	r3, [fp, #-8]
			if (flags & SIGN)
c00092b8:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c00092bc:	e2033002 	and	r3, r3, #2
c00092c0:	e3530000 	cmp	r3, #0
c00092c4:	0a000012 	beq	c0009314 <vsprintf+0x860>
				num = (short) num;
c00092c8:	e51b3008 	ldr	r3, [fp, #-8]
c00092cc:	e6bf3073 	sxth	r3, r3
c00092d0:	e50b3008 	str	r3, [fp, #-8]
c00092d4:	ea00000e 	b	c0009314 <vsprintf+0x860>
		} else if (flags & SIGN)
c00092d8:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c00092dc:	e2033002 	and	r3, r3, #2
c00092e0:	e3530000 	cmp	r3, #0
c00092e4:	0a000005 	beq	c0009300 <vsprintf+0x84c>
			num = va_arg(args, int);
c00092e8:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c00092ec:	e2832004 	add	r2, r3, #4
c00092f0:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c00092f4:	e5933000 	ldr	r3, [r3]
c00092f8:	e50b3008 	str	r3, [fp, #-8]
c00092fc:	ea000004 	b	c0009314 <vsprintf+0x860>
		else
			num = va_arg(args, unsigned int);
c0009300:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c0009304:	e2832004 	add	r2, r3, #4
c0009308:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c000930c:	e5933000 	ldr	r3, [r3]
c0009310:	e50b3008 	str	r3, [fp, #-8]
		str = number(str, num, base, field_width, precision, flags);
c0009314:	e51b1008 	ldr	r1, [fp, #-8]
c0009318:	e51b2010 	ldr	r2, [fp, #-16]
c000931c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c0009320:	e58d3004 	str	r3, [sp, #4]
c0009324:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
c0009328:	e58d3000 	str	r3, [sp]
c000932c:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c0009330:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
c0009334:	ebfffcca 	bl	c0008664 <number>
c0009338:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
	for (str=buf ; *fmt ; ++fmt) {
c000933c:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0009340:	e2833001 	add	r3, r3, #1
c0009344:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
c0009348:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c000934c:	e5d33000 	ldrb	r3, [r3]
c0009350:	e3530000 	cmp	r3, #0
c0009354:	1afffddf 	bne	c0008ad8 <vsprintf+0x24>
	}
	*str = '\0';
c0009358:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c000935c:	e3a02000 	mov	r2, #0
c0009360:	e5c32000 	strb	r2, [r3]
	return str-buf;
c0009364:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
c0009368:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
c000936c:	e0423003 	sub	r3, r2, r3
}
c0009370:	e1a00003 	mov	r0, r3
c0009374:	e24bd004 	sub	sp, fp, #4
c0009378:	e8bd8800 	pop	{fp, pc}

c000937c <sprintf>:

int sprintf(char * buf, const char *fmt, ...)
{
c000937c:	e92d000e 	push	{r1, r2, r3}
c0009380:	e92d4800 	push	{fp, lr}
c0009384:	e28db004 	add	fp, sp, #4
c0009388:	e24dd00c 	sub	sp, sp, #12
c000938c:	e50b0010 	str	r0, [fp, #-16]
	va_list args;
	int i;

	va_start(args, fmt);
c0009390:	e28b3008 	add	r3, fp, #8
c0009394:	e50b300c 	str	r3, [fp, #-12]
	i=vsprintf(buf,fmt,args);
c0009398:	e51b300c 	ldr	r3, [fp, #-12]
c000939c:	e1a02003 	mov	r2, r3
c00093a0:	e59b1004 	ldr	r1, [fp, #4]
c00093a4:	e51b0010 	ldr	r0, [fp, #-16]
c00093a8:	ebfffdc1 	bl	c0008ab4 <vsprintf>
c00093ac:	e50b0008 	str	r0, [fp, #-8]
	va_end(args);
	return i;
c00093b0:	e51b3008 	ldr	r3, [fp, #-8]
}
c00093b4:	e1a00003 	mov	r0, r3
c00093b8:	e24bd004 	sub	sp, fp, #4
c00093bc:	e8bd4800 	pop	{fp, lr}
c00093c0:	e28dd00c 	add	sp, sp, #12
c00093c4:	e12fff1e 	bx	lr

c00093c8 <printf>:

void printf (const char *fmt, ...)
{
c00093c8:	e92d000f 	push	{r0, r1, r2, r3}
c00093cc:	e92d4800 	push	{fp, lr}
c00093d0:	e28db004 	add	fp, sp, #4
c00093d4:	e24dd068 	sub	sp, sp, #104	; 0x68
	va_list args;
	char printbuffer[100];
	va_start (args, fmt);
c00093d8:	e28b3008 	add	r3, fp, #8
c00093dc:	e50b3008 	str	r3, [fp, #-8]

	/* For this to work, printbuffer must be larger than
	 * anything we ever want to print.
	 */
	vsprintf (printbuffer, fmt, args);
c00093e0:	e51b2008 	ldr	r2, [fp, #-8]
c00093e4:	e24b306c 	sub	r3, fp, #108	; 0x6c
c00093e8:	e59b1004 	ldr	r1, [fp, #4]
c00093ec:	e1a00003 	mov	r0, r3
c00093f0:	ebfffdaf 	bl	c0008ab4 <vsprintf>
	va_end (args);
	__uart_puts (printbuffer);
c00093f4:	e24b306c 	sub	r3, fp, #108	; 0x6c
c00093f8:	e1a00003 	mov	r0, r3
c00093fc:	eb000096 	bl	c000965c <__uart_puts>
}
c0009400:	e320f000 	nop	{0}
c0009404:	e24bd004 	sub	sp, fp, #4
c0009408:	e8bd4800 	pop	{fp, lr}
c000940c:	e28dd010 	add	sp, sp, #16
c0009410:	e12fff1e 	bx	lr

c0009414 <__uart_init>:
#include "stm32mp1xx_gpio.h"
#include "stm32mp1xx_uart.h"
// UART4_TX : PG11  AF6
// UART4_RX : PB2   AF8
void __uart_init()
{
c0009414:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c0009418:	e28db000 	add	fp, sp, #0
   	// GPIOB2 设置为复用功能
   	GPIOB->MODER &= (~(0x3 << 4));
c000941c:	e3a03a03 	mov	r3, #12288	; 0x3000
c0009420:	e3453000 	movt	r3, #20480	; 0x5000
c0009424:	e5932000 	ldr	r2, [r3]
c0009428:	e3a03a03 	mov	r3, #12288	; 0x3000
c000942c:	e3453000 	movt	r3, #20480	; 0x5000
c0009430:	e3c22030 	bic	r2, r2, #48	; 0x30
c0009434:	e5832000 	str	r2, [r3]
   	GPIOB->MODER |= (0x2 << 4);
c0009438:	e3a03a03 	mov	r3, #12288	; 0x3000
c000943c:	e3453000 	movt	r3, #20480	; 0x5000
c0009440:	e5932000 	ldr	r2, [r3]
c0009444:	e3a03a03 	mov	r3, #12288	; 0x3000
c0009448:	e3453000 	movt	r3, #20480	; 0x5000
c000944c:	e3822020 	orr	r2, r2, #32
c0009450:	e5832000 	str	r2, [r3]
	GPIOB->AFRL &= (~(0xF << 8));
c0009454:	e3a03a03 	mov	r3, #12288	; 0x3000
c0009458:	e3453000 	movt	r3, #20480	; 0x5000
c000945c:	e5932020 	ldr	r2, [r3, #32]
c0009460:	e3a03a03 	mov	r3, #12288	; 0x3000
c0009464:	e3453000 	movt	r3, #20480	; 0x5000
c0009468:	e3c22c0f 	bic	r2, r2, #3840	; 0xf00
c000946c:	e5832020 	str	r2, [r3, #32]
	GPIOB->AFRL |= (0x8 << 8);
c0009470:	e3a03a03 	mov	r3, #12288	; 0x3000
c0009474:	e3453000 	movt	r3, #20480	; 0x5000
c0009478:	e5932020 	ldr	r2, [r3, #32]
c000947c:	e3a03a03 	mov	r3, #12288	; 0x3000
c0009480:	e3453000 	movt	r3, #20480	; 0x5000
c0009484:	e3822b02 	orr	r2, r2, #2048	; 0x800
c0009488:	e5832020 	str	r2, [r3, #32]
	// GPIOG11 设置为复用功能 
	GPIOG->MODER &= (~(0x3 << 22));
c000948c:	e3a03902 	mov	r3, #32768	; 0x8000
c0009490:	e3453000 	movt	r3, #20480	; 0x5000
c0009494:	e5932000 	ldr	r2, [r3]
c0009498:	e3a03902 	mov	r3, #32768	; 0x8000
c000949c:	e3453000 	movt	r3, #20480	; 0x5000
c00094a0:	e3c22503 	bic	r2, r2, #12582912	; 0xc00000
c00094a4:	e5832000 	str	r2, [r3]
	GPIOG->MODER |= (0x2 << 4);
c00094a8:	e3a03902 	mov	r3, #32768	; 0x8000
c00094ac:	e3453000 	movt	r3, #20480	; 0x5000
c00094b0:	e5932000 	ldr	r2, [r3]
c00094b4:	e3a03902 	mov	r3, #32768	; 0x8000
c00094b8:	e3453000 	movt	r3, #20480	; 0x5000
c00094bc:	e3822020 	orr	r2, r2, #32
c00094c0:	e5832000 	str	r2, [r3]
	GPIOG->AFRH &= (~(0xF << 12));
c00094c4:	e3a03902 	mov	r3, #32768	; 0x8000
c00094c8:	e3453000 	movt	r3, #20480	; 0x5000
c00094cc:	e5932024 	ldr	r2, [r3, #36]	; 0x24
c00094d0:	e3a03902 	mov	r3, #32768	; 0x8000
c00094d4:	e3453000 	movt	r3, #20480	; 0x5000
c00094d8:	e3c22a0f 	bic	r2, r2, #61440	; 0xf000
c00094dc:	e5832024 	str	r2, [r3, #36]	; 0x24
	GPIOG->AFRH |= (0x6 << 12);
c00094e0:	e3a03902 	mov	r3, #32768	; 0x8000
c00094e4:	e3453000 	movt	r3, #20480	; 0x5000
c00094e8:	e5932024 	ldr	r2, [r3, #36]	; 0x24
c00094ec:	e3a03902 	mov	r3, #32768	; 0x8000
c00094f0:	e3453000 	movt	r3, #20480	; 0x5000
c00094f4:	e3822a06 	orr	r2, r2, #24576	; 0x6000
c00094f8:	e5832024 	str	r2, [r3, #36]	; 0x24
	// 设置数据长度为8位   USART_CR1  
	USART4->CR1 &= (~(0x1 << 28));
c00094fc:	e3a03000 	mov	r3, #0
c0009500:	e3443001 	movt	r3, #16385	; 0x4001
c0009504:	e5932000 	ldr	r2, [r3]
c0009508:	e3a03000 	mov	r3, #0
c000950c:	e3443001 	movt	r3, #16385	; 0x4001
c0009510:	e3c22201 	bic	r2, r2, #268435456	; 0x10000000
c0009514:	e5832000 	str	r2, [r3]
	USART4->CR1 &= (~(0x1 << 12));
c0009518:	e3a03000 	mov	r3, #0
c000951c:	e3443001 	movt	r3, #16385	; 0x4001
c0009520:	e5932000 	ldr	r2, [r3]
c0009524:	e3a03000 	mov	r3, #0
c0009528:	e3443001 	movt	r3, #16385	; 0x4001
c000952c:	e3c22a01 	bic	r2, r2, #4096	; 0x1000
c0009530:	e5832000 	str	r2, [r3]
	// 采样率为16位 
	USART4->CR1 &= (~(0x1 << 15));
c0009534:	e3a03000 	mov	r3, #0
c0009538:	e3443001 	movt	r3, #16385	; 0x4001
c000953c:	e5932000 	ldr	r2, [r3]
c0009540:	e3a03000 	mov	r3, #0
c0009544:	e3443001 	movt	r3, #16385	; 0x4001
c0009548:	e3c22902 	bic	r2, r2, #32768	; 0x8000
c000954c:	e5832000 	str	r2, [r3]
	// 设置波特率为115200bps 
	USART4->PRESC &= (~(0xF << 0));
c0009550:	e3a03000 	mov	r3, #0
c0009554:	e3443001 	movt	r3, #16385	; 0x4001
c0009558:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
c000955c:	e3a03000 	mov	r3, #0
c0009560:	e3443001 	movt	r3, #16385	; 0x4001
c0009564:	e3c2200f 	bic	r2, r2, #15
c0009568:	e583202c 	str	r2, [r3, #44]	; 0x2c
	USART4->BRR = 0xD0;
c000956c:	e3a03000 	mov	r3, #0
c0009570:	e3443001 	movt	r3, #16385	; 0x4001
c0009574:	e3a020d0 	mov	r2, #208	; 0xd0
c0009578:	e583200c 	str	r2, [r3, #12]
	// 停止位1位
	USART4->CR2 &= (~(0x3 << 12));
c000957c:	e3a03000 	mov	r3, #0
c0009580:	e3443001 	movt	r3, #16385	; 0x4001
c0009584:	e5932004 	ldr	r2, [r3, #4]
c0009588:	e3a03000 	mov	r3, #0
c000958c:	e3443001 	movt	r3, #16385	; 0x4001
c0009590:	e3c22a03 	bic	r2, r2, #12288	; 0x3000
c0009594:	e5832004 	str	r2, [r3, #4]
	// 使能USART串口 
	USART4->CR1 |= (0x1 << 0);
c0009598:	e3a03000 	mov	r3, #0
c000959c:	e3443001 	movt	r3, #16385	; 0x4001
c00095a0:	e5932000 	ldr	r2, [r3]
c00095a4:	e3a03000 	mov	r3, #0
c00095a8:	e3443001 	movt	r3, #16385	; 0x4001
c00095ac:	e3822001 	orr	r2, r2, #1
c00095b0:	e5832000 	str	r2, [r3]
	// 使能USART的发送或者接收功能 
	USART4->CR1 |= (0x1 << 3);
c00095b4:	e3a03000 	mov	r3, #0
c00095b8:	e3443001 	movt	r3, #16385	; 0x4001
c00095bc:	e5932000 	ldr	r2, [r3]
c00095c0:	e3a03000 	mov	r3, #0
c00095c4:	e3443001 	movt	r3, #16385	; 0x4001
c00095c8:	e3822008 	orr	r2, r2, #8
c00095cc:	e5832000 	str	r2, [r3]
	USART4->CR1 |= (0x1 << 2);
c00095d0:	e3a03000 	mov	r3, #0
c00095d4:	e3443001 	movt	r3, #16385	; 0x4001
c00095d8:	e5932000 	ldr	r2, [r3]
c00095dc:	e3a03000 	mov	r3, #0
c00095e0:	e3443001 	movt	r3, #16385	; 0x4001
c00095e4:	e3822004 	orr	r2, r2, #4
c00095e8:	e5832000 	str	r2, [r3]

}
c00095ec:	e320f000 	nop	{0}
c00095f0:	e28bd000 	add	sp, fp, #0
c00095f4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c00095f8:	e12fff1e 	bx	lr

c00095fc <__uart_putc>:

void __uart_putc(const char data)
{
c00095fc:	e92d4800 	push	{fp, lr}
c0009600:	e28db004 	add	fp, sp, #4
c0009604:	e24dd004 	sub	sp, sp, #4
c0009608:	e1a03000 	mov	r3, r0
c000960c:	e54b3008 	strb	r3, [fp, #-8]
	while (!(USART4->ISR & (0x1 << 7)));
c0009610:	e320f000 	nop	{0}
c0009614:	e3a03000 	mov	r3, #0
c0009618:	e3443001 	movt	r3, #16385	; 0x4001
c000961c:	e593301c 	ldr	r3, [r3, #28]
c0009620:	e2033080 	and	r3, r3, #128	; 0x80
c0009624:	e3530000 	cmp	r3, #0
c0009628:	0afffff9 	beq	c0009614 <__uart_putc+0x18>
	USART4->TDR = data;
c000962c:	e3a03000 	mov	r3, #0
c0009630:	e3443001 	movt	r3, #16385	; 0x4001
c0009634:	e55b2008 	ldrb	r2, [fp, #-8]
c0009638:	e5832028 	str	r2, [r3, #40]	; 0x28
	if (data == '\n')
c000963c:	e55b3008 	ldrb	r3, [fp, #-8]
c0009640:	e353000a 	cmp	r3, #10
c0009644:	1a000001 	bne	c0009650 <__uart_putc+0x54>
		__uart_putc('\r');
c0009648:	e3a0000d 	mov	r0, #13
c000964c:	ebffffea 	bl	c00095fc <__uart_putc>
}
c0009650:	e320f000 	nop	{0}
c0009654:	e24bd004 	sub	sp, fp, #4
c0009658:	e8bd8800 	pop	{fp, pc}

c000965c <__uart_puts>:
void __uart_puts(const  char  *pstr)
{
c000965c:	e92d4800 	push	{fp, lr}
c0009660:	e28db004 	add	fp, sp, #4
c0009664:	e24dd004 	sub	sp, sp, #4
c0009668:	e50b0008 	str	r0, [fp, #-8]
	while(*pstr != '\0')
c000966c:	ea000005 	b	c0009688 <__uart_puts+0x2c>
		__uart_putc(*pstr++);
c0009670:	e51b3008 	ldr	r3, [fp, #-8]
c0009674:	e2832001 	add	r2, r3, #1
c0009678:	e50b2008 	str	r2, [fp, #-8]
c000967c:	e5d33000 	ldrb	r3, [r3]
c0009680:	e1a00003 	mov	r0, r3
c0009684:	ebffffdc 	bl	c00095fc <__uart_putc>
	while(*pstr != '\0')
c0009688:	e51b3008 	ldr	r3, [fp, #-8]
c000968c:	e5d33000 	ldrb	r3, [r3]
c0009690:	e3530000 	cmp	r3, #0
c0009694:	1afffff5 	bne	c0009670 <__uart_puts+0x14>
}
c0009698:	e320f000 	nop	{0}
c000969c:	e24bd004 	sub	sp, fp, #4
c00096a0:	e8bd8800 	pop	{fp, pc}

c00096a4 <__uart_getc>:

char __uart_getc(void)
{
c00096a4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c00096a8:	e28db000 	add	fp, sp, #0
c00096ac:	e24dd004 	sub	sp, sp, #4
	char ch;
	while(!(USART4->ISR & (0x1 << 5)));
c00096b0:	e320f000 	nop	{0}
c00096b4:	e3a03000 	mov	r3, #0
c00096b8:	e3443001 	movt	r3, #16385	; 0x4001
c00096bc:	e593301c 	ldr	r3, [r3, #28]
c00096c0:	e2033020 	and	r3, r3, #32
c00096c4:	e3530000 	cmp	r3, #0
c00096c8:	0afffff9 	beq	c00096b4 <__uart_getc+0x10>
	ch = (char)USART4->RDR;
c00096cc:	e3a03000 	mov	r3, #0
c00096d0:	e3443001 	movt	r3, #16385	; 0x4001
c00096d4:	e5933024 	ldr	r3, [r3, #36]	; 0x24
c00096d8:	e54b3001 	strb	r3, [fp, #-1]
	return ch;
c00096dc:	e55b3001 	ldrb	r3, [fp, #-1]
}
c00096e0:	e1a00003 	mov	r0, r3
c00096e4:	e28bd000 	add	sp, fp, #0
c00096e8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c00096ec:	e12fff1e 	bx	lr

c00096f0 <do_irq>:
#include "key.h"
extern void printf(const char *fmt, ...);
unsigned int i = 0;
void do_irq(void) 
{
c00096f0:	e92d4800 	push	{fp, lr}
c00096f4:	e28db004 	add	fp, sp, #4
c00096f8:	e24dd004 	sub	sp, sp, #4
    //获取中断号
    int interrupt_no = (GICC->IAR & 0x1ff);
c00096fc:	e3a03a02 	mov	r3, #8192	; 0x2000
c0009700:	e34a3002 	movt	r3, #40962	; 0xa002
c0009704:	e593300c 	ldr	r3, [r3, #12]
c0009708:	e7e83053 	ubfx	r3, r3, #0, #9
c000970c:	e50b3008 	str	r3, [fp, #-8]
    printf("interrupt_no = %d\n\r",interrupt_no);
c0009710:	e51b1008 	ldr	r1, [fp, #-8]
c0009714:	e30a02d8 	movw	r0, #41688	; 0xa2d8
c0009718:	e34c0000 	movt	r0, #49152	; 0xc000
c000971c:	ebffff29 	bl	c00093c8 <printf>
    //判断中断号
    switch (interrupt_no)
c0009720:	e51b3008 	ldr	r3, [fp, #-8]
c0009724:	e3530062 	cmp	r3, #98	; 0x62
c0009728:	0a00003a 	beq	c0009818 <do_irq+0x128>
c000972c:	e3530063 	cmp	r3, #99	; 0x63
c0009730:	0a000002 	beq	c0009740 <do_irq+0x50>
c0009734:	e3530061 	cmp	r3, #97	; 0x61
c0009738:	0a00001b 	beq	c00097ac <do_irq+0xbc>
        GICC->EOIR &= (~(0x1ff<<0));
        GICC->EOIR |= (interrupt_no<<0);
        break;
    
    default:
        break;
c000973c:	ea000050 	b	c0009884 <do_irq+0x194>
        printf("key1###############\r\n");
c0009740:	e30a02ec 	movw	r0, #41708	; 0xa2ec
c0009744:	e34c0000 	movt	r0, #49152	; 0xc000
c0009748:	ebffff1e 	bl	c00093c8 <printf>
        EXTI->FPR1 |= (0x1<<9); 
c000974c:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009750:	e3453000 	movt	r3, #20480	; 0x5000
c0009754:	e5932010 	ldr	r2, [r3, #16]
c0009758:	e3a03a0d 	mov	r3, #53248	; 0xd000
c000975c:	e3453000 	movt	r3, #20480	; 0x5000
c0009760:	e3822c02 	orr	r2, r2, #512	; 0x200
c0009764:	e5832010 	str	r2, [r3, #16]
        GICC->EOIR &= (~(0x1ff<<0));
c0009768:	e3a03a02 	mov	r3, #8192	; 0x2000
c000976c:	e34a3002 	movt	r3, #40962	; 0xa002
c0009770:	e5933010 	ldr	r3, [r3, #16]
c0009774:	e3a02a02 	mov	r2, #8192	; 0x2000
c0009778:	e34a2002 	movt	r2, #40962	; 0xa002
c000977c:	e3c33f7f 	bic	r3, r3, #508	; 0x1fc
c0009780:	e3c33003 	bic	r3, r3, #3
c0009784:	e5823010 	str	r3, [r2, #16]
        GICC->EOIR |= (interrupt_no<<0);
c0009788:	e3a03a02 	mov	r3, #8192	; 0x2000
c000978c:	e34a3002 	movt	r3, #40962	; 0xa002
c0009790:	e5931010 	ldr	r1, [r3, #16]
c0009794:	e51b2008 	ldr	r2, [fp, #-8]
c0009798:	e3a03a02 	mov	r3, #8192	; 0x2000
c000979c:	e34a3002 	movt	r3, #40962	; 0xa002
c00097a0:	e1812002 	orr	r2, r1, r2
c00097a4:	e5832010 	str	r2, [r3, #16]
        break;
c00097a8:	ea000035 	b	c0009884 <do_irq+0x194>
        printf("key2###############\r\n");
c00097ac:	e30a0304 	movw	r0, #41732	; 0xa304
c00097b0:	e34c0000 	movt	r0, #49152	; 0xc000
c00097b4:	ebffff03 	bl	c00093c8 <printf>
        EXTI->FPR1 |= (0x1<<7);
c00097b8:	e3a03a0d 	mov	r3, #53248	; 0xd000
c00097bc:	e3453000 	movt	r3, #20480	; 0x5000
c00097c0:	e5932010 	ldr	r2, [r3, #16]
c00097c4:	e3a03a0d 	mov	r3, #53248	; 0xd000
c00097c8:	e3453000 	movt	r3, #20480	; 0x5000
c00097cc:	e3822080 	orr	r2, r2, #128	; 0x80
c00097d0:	e5832010 	str	r2, [r3, #16]
        GICC->EOIR &= (~(0x1ff<<0));
c00097d4:	e3a03a02 	mov	r3, #8192	; 0x2000
c00097d8:	e34a3002 	movt	r3, #40962	; 0xa002
c00097dc:	e5933010 	ldr	r3, [r3, #16]
c00097e0:	e3a02a02 	mov	r2, #8192	; 0x2000
c00097e4:	e34a2002 	movt	r2, #40962	; 0xa002
c00097e8:	e3c33f7f 	bic	r3, r3, #508	; 0x1fc
c00097ec:	e3c33003 	bic	r3, r3, #3
c00097f0:	e5823010 	str	r3, [r2, #16]
        GICC->EOIR |= (interrupt_no<<0);
c00097f4:	e3a03a02 	mov	r3, #8192	; 0x2000
c00097f8:	e34a3002 	movt	r3, #40962	; 0xa002
c00097fc:	e5931010 	ldr	r1, [r3, #16]
c0009800:	e51b2008 	ldr	r2, [fp, #-8]
c0009804:	e3a03a02 	mov	r3, #8192	; 0x2000
c0009808:	e34a3002 	movt	r3, #40962	; 0xa002
c000980c:	e1812002 	orr	r2, r1, r2
c0009810:	e5832010 	str	r2, [r3, #16]
        break;
c0009814:	ea00001a 	b	c0009884 <do_irq+0x194>
        printf("key3###############\r\n");
c0009818:	e30a031c 	movw	r0, #41756	; 0xa31c
c000981c:	e34c0000 	movt	r0, #49152	; 0xc000
c0009820:	ebfffee8 	bl	c00093c8 <printf>
        EXTI->FPR1 |= (0x1<<8);
c0009824:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009828:	e3453000 	movt	r3, #20480	; 0x5000
c000982c:	e5932010 	ldr	r2, [r3, #16]
c0009830:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009834:	e3453000 	movt	r3, #20480	; 0x5000
c0009838:	e3822c01 	orr	r2, r2, #256	; 0x100
c000983c:	e5832010 	str	r2, [r3, #16]
        GICC->EOIR &= (~(0x1ff<<0));
c0009840:	e3a03a02 	mov	r3, #8192	; 0x2000
c0009844:	e34a3002 	movt	r3, #40962	; 0xa002
c0009848:	e5933010 	ldr	r3, [r3, #16]
c000984c:	e3a02a02 	mov	r2, #8192	; 0x2000
c0009850:	e34a2002 	movt	r2, #40962	; 0xa002
c0009854:	e3c33f7f 	bic	r3, r3, #508	; 0x1fc
c0009858:	e3c33003 	bic	r3, r3, #3
c000985c:	e5823010 	str	r3, [r2, #16]
        GICC->EOIR |= (interrupt_no<<0);
c0009860:	e3a03a02 	mov	r3, #8192	; 0x2000
c0009864:	e34a3002 	movt	r3, #40962	; 0xa002
c0009868:	e5931010 	ldr	r1, [r3, #16]
c000986c:	e51b2008 	ldr	r2, [fp, #-8]
c0009870:	e3a03a02 	mov	r3, #8192	; 0x2000
c0009874:	e34a3002 	movt	r3, #40962	; 0xa002
c0009878:	e1812002 	orr	r2, r1, r2
c000987c:	e5832010 	str	r2, [r3, #16]
        break;
c0009880:	e320f000 	nop	{0}
    }
    

}
c0009884:	e320f000 	nop	{0}
c0009888:	e24bd004 	sub	sp, fp, #4
c000988c:	e8bd8800 	pop	{fp, pc}

c0009890 <hal_gpio_init>:
#include "gpio.h"

void hal_gpio_init(gpio_t * gpiox,unsigned int pin,gpio_init_t* init)
{
c0009890:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c0009894:	e28db000 	add	fp, sp, #0
c0009898:	e24dd00c 	sub	sp, sp, #12
c000989c:	e50b0004 	str	r0, [fp, #-4]
c00098a0:	e50b1008 	str	r1, [fp, #-8]
c00098a4:	e50b200c 	str	r2, [fp, #-12]
	//1.mode 
    gpiox->MODER &=(~(0x3 << 2*pin));
c00098a8:	e51b3004 	ldr	r3, [fp, #-4]
c00098ac:	e5933000 	ldr	r3, [r3]
c00098b0:	e51b2008 	ldr	r2, [fp, #-8]
c00098b4:	e1a02082 	lsl	r2, r2, #1
c00098b8:	e3a01003 	mov	r1, #3
c00098bc:	e1a02211 	lsl	r2, r1, r2
c00098c0:	e1e02002 	mvn	r2, r2
c00098c4:	e0022003 	and	r2, r2, r3
c00098c8:	e51b3004 	ldr	r3, [fp, #-4]
c00098cc:	e5832000 	str	r2, [r3]
	gpiox->MODER |= (init->moder << 2*pin);
c00098d0:	e51b3004 	ldr	r3, [fp, #-4]
c00098d4:	e5932000 	ldr	r2, [r3]
c00098d8:	e51b300c 	ldr	r3, [fp, #-12]
c00098dc:	e5931000 	ldr	r1, [r3]
c00098e0:	e51b3008 	ldr	r3, [fp, #-8]
c00098e4:	e1a03083 	lsl	r3, r3, #1
c00098e8:	e1a03311 	lsl	r3, r1, r3
c00098ec:	e1822003 	orr	r2, r2, r3
c00098f0:	e51b3004 	ldr	r3, [fp, #-4]
c00098f4:	e5832000 	str	r2, [r3]

	//2.type
	gpiox->OTYPER &= (0x1<<pin);
c00098f8:	e51b3004 	ldr	r3, [fp, #-4]
c00098fc:	e5933004 	ldr	r3, [r3, #4]
c0009900:	e3a01001 	mov	r1, #1
c0009904:	e51b2008 	ldr	r2, [fp, #-8]
c0009908:	e1a02211 	lsl	r2, r1, r2
c000990c:	e0022003 	and	r2, r2, r3
c0009910:	e51b3004 	ldr	r3, [fp, #-4]
c0009914:	e5832004 	str	r2, [r3, #4]
	gpiox->OTYPER |= (init->otyper << pin);
c0009918:	e51b3004 	ldr	r3, [fp, #-4]
c000991c:	e5932004 	ldr	r2, [r3, #4]
c0009920:	e51b300c 	ldr	r3, [fp, #-12]
c0009924:	e5931004 	ldr	r1, [r3, #4]
c0009928:	e51b3008 	ldr	r3, [fp, #-8]
c000992c:	e1a03311 	lsl	r3, r1, r3
c0009930:	e1822003 	orr	r2, r2, r3
c0009934:	e51b3004 	ldr	r3, [fp, #-4]
c0009938:	e5832004 	str	r2, [r3, #4]

	//3.speed 
	gpiox->OSPEEDR &= (~(0x3 << 2*pin));
c000993c:	e51b3004 	ldr	r3, [fp, #-4]
c0009940:	e5933008 	ldr	r3, [r3, #8]
c0009944:	e51b2008 	ldr	r2, [fp, #-8]
c0009948:	e1a02082 	lsl	r2, r2, #1
c000994c:	e3a01003 	mov	r1, #3
c0009950:	e1a02211 	lsl	r2, r1, r2
c0009954:	e1e02002 	mvn	r2, r2
c0009958:	e0022003 	and	r2, r2, r3
c000995c:	e51b3004 	ldr	r3, [fp, #-4]
c0009960:	e5832008 	str	r2, [r3, #8]
	gpiox->OSPEEDR |= (init->ospeedr <<2*pin);
c0009964:	e51b3004 	ldr	r3, [fp, #-4]
c0009968:	e5932008 	ldr	r2, [r3, #8]
c000996c:	e51b300c 	ldr	r3, [fp, #-12]
c0009970:	e5931008 	ldr	r1, [r3, #8]
c0009974:	e51b3008 	ldr	r3, [fp, #-8]
c0009978:	e1a03083 	lsl	r3, r3, #1
c000997c:	e1a03311 	lsl	r3, r1, r3
c0009980:	e1822003 	orr	r2, r2, r3
c0009984:	e51b3004 	ldr	r3, [fp, #-4]
c0009988:	e5832008 	str	r2, [r3, #8]

	//4.push pull 
	gpiox->PUPDR &= (~(0x3<<2*pin));
c000998c:	e51b3004 	ldr	r3, [fp, #-4]
c0009990:	e593300c 	ldr	r3, [r3, #12]
c0009994:	e51b2008 	ldr	r2, [fp, #-8]
c0009998:	e1a02082 	lsl	r2, r2, #1
c000999c:	e3a01003 	mov	r1, #3
c00099a0:	e1a02211 	lsl	r2, r1, r2
c00099a4:	e1e02002 	mvn	r2, r2
c00099a8:	e0022003 	and	r2, r2, r3
c00099ac:	e51b3004 	ldr	r3, [fp, #-4]
c00099b0:	e583200c 	str	r2, [r3, #12]
	gpiox->PUPDR |= (init->pupdr << 2*pin);
c00099b4:	e51b3004 	ldr	r3, [fp, #-4]
c00099b8:	e593200c 	ldr	r2, [r3, #12]
c00099bc:	e51b300c 	ldr	r3, [fp, #-12]
c00099c0:	e593100c 	ldr	r1, [r3, #12]
c00099c4:	e51b3008 	ldr	r3, [fp, #-8]
c00099c8:	e1a03083 	lsl	r3, r3, #1
c00099cc:	e1a03311 	lsl	r3, r1, r3
c00099d0:	e1822003 	orr	r2, r2, r3
c00099d4:	e51b3004 	ldr	r3, [fp, #-4]
c00099d8:	e583200c 	str	r2, [r3, #12]

}
c00099dc:	e320f000 	nop	{0}
c00099e0:	e28bd000 	add	sp, fp, #0
c00099e4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c00099e8:	e12fff1e 	bx	lr

c00099ec <hal_gpio_write>:




void hal_gpio_write(gpio_t * gpiox,unsigned int pin,gpio_odr_t status)
{
c00099ec:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c00099f0:	e28db000 	add	fp, sp, #0
c00099f4:	e24dd00c 	sub	sp, sp, #12
c00099f8:	e50b0004 	str	r0, [fp, #-4]
c00099fc:	e50b1008 	str	r1, [fp, #-8]
c0009a00:	e50b200c 	str	r2, [fp, #-12]

	if(status == GPIO_SET_T)
c0009a04:	e51b300c 	ldr	r3, [fp, #-12]
c0009a08:	e3530001 	cmp	r3, #1
c0009a0c:	1a000008 	bne	c0009a34 <hal_gpio_write+0x48>
	{
		gpiox->ODR |= (0x1<<pin);
c0009a10:	e51b3004 	ldr	r3, [fp, #-4]
c0009a14:	e5933014 	ldr	r3, [r3, #20]
c0009a18:	e3a01001 	mov	r1, #1
c0009a1c:	e51b2008 	ldr	r2, [fp, #-8]
c0009a20:	e1a02211 	lsl	r2, r1, r2
c0009a24:	e1832002 	orr	r2, r3, r2
c0009a28:	e51b3004 	ldr	r3, [fp, #-4]
c0009a2c:	e5832014 	str	r2, [r3, #20]
	} else if(status == GPIO_RESET_T)
	{
		gpiox->ODR &= (~(0x1<<pin));
	}
}
c0009a30:	ea00000b 	b	c0009a64 <hal_gpio_write+0x78>
	} else if(status == GPIO_RESET_T)
c0009a34:	e51b300c 	ldr	r3, [fp, #-12]
c0009a38:	e3530000 	cmp	r3, #0
c0009a3c:	1a000008 	bne	c0009a64 <hal_gpio_write+0x78>
		gpiox->ODR &= (~(0x1<<pin));
c0009a40:	e51b3004 	ldr	r3, [fp, #-4]
c0009a44:	e5933014 	ldr	r3, [r3, #20]
c0009a48:	e3a01001 	mov	r1, #1
c0009a4c:	e51b2008 	ldr	r2, [fp, #-8]
c0009a50:	e1a02211 	lsl	r2, r1, r2
c0009a54:	e1e02002 	mvn	r2, r2
c0009a58:	e0022003 	and	r2, r2, r3
c0009a5c:	e51b3004 	ldr	r3, [fp, #-4]
c0009a60:	e5832014 	str	r2, [r3, #20]
}
c0009a64:	e320f000 	nop	{0}
c0009a68:	e28bd000 	add	sp, fp, #0
c0009a6c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c0009a70:	e12fff1e 	bx	lr

c0009a74 <hal_exti_init>:
#include "key.h"

//key1 ===> GPIOF9
void hal_exti_init()
{
c0009a74:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c0009a78:	e28db000 	add	fp, sp, #0
    /*********RCC init************/
    //GPIOF enable
    RCC->MP_AHB4ENSETR |= (0x1<<5);
c0009a7c:	e3a03205 	mov	r3, #1342177280	; 0x50000000
c0009a80:	e5933a28 	ldr	r3, [r3, #2600]	; 0xa28
c0009a84:	e3a02205 	mov	r2, #1342177280	; 0x50000000
c0009a88:	e3833020 	orr	r3, r3, #32
c0009a8c:	e5823a28 	str	r3, [r2, #2600]	; 0xa28
    /*********GPIO init*********/
    GPIOF->MODER &= (~(0x3<<18)); //key1 PF9
c0009a90:	e3a03a07 	mov	r3, #28672	; 0x7000
c0009a94:	e3453000 	movt	r3, #20480	; 0x5000
c0009a98:	e5932000 	ldr	r2, [r3]
c0009a9c:	e3a03a07 	mov	r3, #28672	; 0x7000
c0009aa0:	e3453000 	movt	r3, #20480	; 0x5000
c0009aa4:	e3c22703 	bic	r2, r2, #786432	; 0xc0000
c0009aa8:	e5832000 	str	r2, [r3]
    GPIOF->MODER &= (~(0x3<<14)); //key2 PF7
c0009aac:	e3a03a07 	mov	r3, #28672	; 0x7000
c0009ab0:	e3453000 	movt	r3, #20480	; 0x5000
c0009ab4:	e5932000 	ldr	r2, [r3]
c0009ab8:	e3a03a07 	mov	r3, #28672	; 0x7000
c0009abc:	e3453000 	movt	r3, #20480	; 0x5000
c0009ac0:	e3c22903 	bic	r2, r2, #49152	; 0xc000
c0009ac4:	e5832000 	str	r2, [r3]
    GPIOF->MODER &= (~(0x3<<16)); //key3 PF8
c0009ac8:	e3a03a07 	mov	r3, #28672	; 0x7000
c0009acc:	e3453000 	movt	r3, #20480	; 0x5000
c0009ad0:	e5932000 	ldr	r2, [r3]
c0009ad4:	e3a03a07 	mov	r3, #28672	; 0x7000
c0009ad8:	e3453000 	movt	r3, #20480	; 0x5000
c0009adc:	e3c22803 	bic	r2, r2, #196608	; 0x30000
c0009ae0:	e5832000 	str	r2, [r3]

    /*********EXTI init*********/
    //1.外部中断选择寄存器  EXTI_EXTICRx
    //key1 PF9 ==> EXTI9(EXTI_EXTICR3寄存器中)
    EXTI->EXTICR3 &= (~(0xff<<8));
c0009ae4:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009ae8:	e3453000 	movt	r3, #20480	; 0x5000
c0009aec:	e5932068 	ldr	r2, [r3, #104]	; 0x68
c0009af0:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009af4:	e3453000 	movt	r3, #20480	; 0x5000
c0009af8:	e3c22cff 	bic	r2, r2, #65280	; 0xff00
c0009afc:	e5832068 	str	r2, [r3, #104]	; 0x68
    EXTI->EXTICR3 |= (0x05<<8);
c0009b00:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009b04:	e3453000 	movt	r3, #20480	; 0x5000
c0009b08:	e5932068 	ldr	r2, [r3, #104]	; 0x68
c0009b0c:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009b10:	e3453000 	movt	r3, #20480	; 0x5000
c0009b14:	e3822c05 	orr	r2, r2, #1280	; 0x500
c0009b18:	e5832068 	str	r2, [r3, #104]	; 0x68

    //key2 PF7 ==> EXTI7(EXTI_EXTICR2寄存器中)
    EXTI->EXTICR2 &= (~(0xff<<24));
c0009b1c:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009b20:	e3453000 	movt	r3, #20480	; 0x5000
c0009b24:	e5932064 	ldr	r2, [r3, #100]	; 0x64
c0009b28:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009b2c:	e3453000 	movt	r3, #20480	; 0x5000
c0009b30:	e3c224ff 	bic	r2, r2, #-16777216	; 0xff000000
c0009b34:	e5832064 	str	r2, [r3, #100]	; 0x64
    EXTI->EXTICR2 |= (0x05<<24);
c0009b38:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009b3c:	e3453000 	movt	r3, #20480	; 0x5000
c0009b40:	e5932064 	ldr	r2, [r3, #100]	; 0x64
c0009b44:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009b48:	e3453000 	movt	r3, #20480	; 0x5000
c0009b4c:	e3822405 	orr	r2, r2, #83886080	; 0x5000000
c0009b50:	e5832064 	str	r2, [r3, #100]	; 0x64

    //key3 PF8 ==> EXTI8(EXTI_EXTICR3寄存器中)
    EXTI->EXTICR3 &= (~(0xff<<0));
c0009b54:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009b58:	e3453000 	movt	r3, #20480	; 0x5000
c0009b5c:	e5932068 	ldr	r2, [r3, #104]	; 0x68
c0009b60:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009b64:	e3453000 	movt	r3, #20480	; 0x5000
c0009b68:	e3c220ff 	bic	r2, r2, #255	; 0xff
c0009b6c:	e5832068 	str	r2, [r3, #104]	; 0x68
    EXTI->EXTICR3 |= (0x05<<0);
c0009b70:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009b74:	e3453000 	movt	r3, #20480	; 0x5000
c0009b78:	e5932068 	ldr	r2, [r3, #104]	; 0x68
c0009b7c:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009b80:	e3453000 	movt	r3, #20480	; 0x5000
c0009b84:	e3822005 	orr	r2, r2, #5
c0009b88:	e5832068 	str	r2, [r3, #104]	; 0x68

    //2.外部中断下降沿触发选择寄存器
    //key1 PF9 ==> EXTI9 ----> 事件9
    EXTI->FTSR1 |= (0x1<<9);
c0009b8c:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009b90:	e3453000 	movt	r3, #20480	; 0x5000
c0009b94:	e5932004 	ldr	r2, [r3, #4]
c0009b98:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009b9c:	e3453000 	movt	r3, #20480	; 0x5000
c0009ba0:	e3822c02 	orr	r2, r2, #512	; 0x200
c0009ba4:	e5832004 	str	r2, [r3, #4]
    //key2 PF7 ==> EXTI7 ----> 事件7
    EXTI->FTSR1 |= (0x1<<7);
c0009ba8:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009bac:	e3453000 	movt	r3, #20480	; 0x5000
c0009bb0:	e5932004 	ldr	r2, [r3, #4]
c0009bb4:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009bb8:	e3453000 	movt	r3, #20480	; 0x5000
c0009bbc:	e3822080 	orr	r2, r2, #128	; 0x80
c0009bc0:	e5832004 	str	r2, [r3, #4]
    //key3 PF8 ==> EXTI8 ----> 事件8
    EXTI->FTSR1 |= (0x1<<8);
c0009bc4:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009bc8:	e3453000 	movt	r3, #20480	; 0x5000
c0009bcc:	e5932004 	ldr	r2, [r3, #4]
c0009bd0:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009bd4:	e3453000 	movt	r3, #20480	; 0x5000
c0009bd8:	e3822c01 	orr	r2, r2, #256	; 0x100
c0009bdc:	e5832004 	str	r2, [r3, #4]


    //3.外部中断屏蔽寄存器
    //key1 PF9 ==> EXTI9 ----> 事件9
    EXTI->C1IMR1 |= (0x1<<9);   //置1取消屏蔽
c0009be0:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009be4:	e3453000 	movt	r3, #20480	; 0x5000
c0009be8:	e5932080 	ldr	r2, [r3, #128]	; 0x80
c0009bec:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009bf0:	e3453000 	movt	r3, #20480	; 0x5000
c0009bf4:	e3822c02 	orr	r2, r2, #512	; 0x200
c0009bf8:	e5832080 	str	r2, [r3, #128]	; 0x80
    //key2 PF7 ==> EXTI7 ----> 事件7
    EXTI->C1IMR1 |= (0x1<<7);
c0009bfc:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009c00:	e3453000 	movt	r3, #20480	; 0x5000
c0009c04:	e5932080 	ldr	r2, [r3, #128]	; 0x80
c0009c08:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009c0c:	e3453000 	movt	r3, #20480	; 0x5000
c0009c10:	e3822080 	orr	r2, r2, #128	; 0x80
c0009c14:	e5832080 	str	r2, [r3, #128]	; 0x80
    //key3 PF8 ==> EXTI8 ----> 事件8
    EXTI->C1IMR1 |= (0x1<<8);
c0009c18:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009c1c:	e3453000 	movt	r3, #20480	; 0x5000
c0009c20:	e5932080 	ldr	r2, [r3, #128]	; 0x80
c0009c24:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009c28:	e3453000 	movt	r3, #20480	; 0x5000
c0009c2c:	e3822c01 	orr	r2, r2, #256	; 0x100
c0009c30:	e5832080 	str	r2, [r3, #128]	; 0x80

    //4.外部中断下降沿挂起寄存器==>可读可写 
    //读0:无中断产生 1:有中断产生   写0:不清除中断挂起标志位 写1:清除中断挂起标志位
    //key1 PF9 ==> EXTI9 ----> 事件9
    EXTI->FPR1 |= (0x1<<9);   //置1清除中断挂起标志位
c0009c34:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009c38:	e3453000 	movt	r3, #20480	; 0x5000
c0009c3c:	e5932010 	ldr	r2, [r3, #16]
c0009c40:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009c44:	e3453000 	movt	r3, #20480	; 0x5000
c0009c48:	e3822c02 	orr	r2, r2, #512	; 0x200
c0009c4c:	e5832010 	str	r2, [r3, #16]
    //key2 PF7 ==> EXTI7 ----> 事件7
    EXTI->FPR1 |= (0x1<<7);
c0009c50:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009c54:	e3453000 	movt	r3, #20480	; 0x5000
c0009c58:	e5932010 	ldr	r2, [r3, #16]
c0009c5c:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009c60:	e3453000 	movt	r3, #20480	; 0x5000
c0009c64:	e3822080 	orr	r2, r2, #128	; 0x80
c0009c68:	e5832010 	str	r2, [r3, #16]
    //key3 PF8 ==> EXTI8 ----> 事件8
    EXTI->FPR1 |= (0x1<<8);
c0009c6c:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009c70:	e3453000 	movt	r3, #20480	; 0x5000
c0009c74:	e5932010 	ldr	r2, [r3, #16]
c0009c78:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009c7c:	e3453000 	movt	r3, #20480	; 0x5000
c0009c80:	e3822c01 	orr	r2, r2, #256	; 0x100
c0009c84:	e5832010 	str	r2, [r3, #16]
}
c0009c88:	e320f000 	nop	{0}
c0009c8c:	e28bd000 	add	sp, fp, #0
c0009c90:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c0009c94:	e12fff1e 	bx	lr

c0009c98 <hal_gicd_init>:


void hal_gicd_init()
{
c0009c98:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c0009c9c:	e28db000 	add	fp, sp, #0
    //1 GICD control register (GICD_CTLR)
    GICD->CTRL|= (0x1<<0); //使能组0
c0009ca0:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009ca4:	e34a3002 	movt	r3, #40962	; 0xa002
c0009ca8:	e5932000 	ldr	r2, [r3]
c0009cac:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009cb0:	e34a3002 	movt	r3, #40962	; 0xa002
c0009cb4:	e3822001 	orr	r2, r2, #1
c0009cb8:	e5832000 	str	r2, [r3]

    //2. GICD_ISENABLERx
    //key1 PF9 ==> EXTI9 ----> 事件9 --->中断号 99
    GICD->ISENABLER[3] |= (0x1<<3);
c0009cbc:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009cc0:	e34a3002 	movt	r3, #40962	; 0xa002
c0009cc4:	e593210c 	ldr	r2, [r3, #268]	; 0x10c
c0009cc8:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009ccc:	e34a3002 	movt	r3, #40962	; 0xa002
c0009cd0:	e3822008 	orr	r2, r2, #8
c0009cd4:	e583210c 	str	r2, [r3, #268]	; 0x10c
    //key2 PF7 ==> EXTI7 ----> 事件7 --->中断号 97
    GICD->ISENABLER[3] |= (0x1<<1);
c0009cd8:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009cdc:	e34a3002 	movt	r3, #40962	; 0xa002
c0009ce0:	e593210c 	ldr	r2, [r3, #268]	; 0x10c
c0009ce4:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009ce8:	e34a3002 	movt	r3, #40962	; 0xa002
c0009cec:	e3822002 	orr	r2, r2, #2
c0009cf0:	e583210c 	str	r2, [r3, #268]	; 0x10c
    //key3 PF8 ==> EXTI8 ----> 事件8 --->中断号 98
    GICD->ISENABLER[3] |= (0x1<<2);
c0009cf4:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009cf8:	e34a3002 	movt	r3, #40962	; 0xa002
c0009cfc:	e593210c 	ldr	r2, [r3, #268]	; 0x10c
c0009d00:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009d04:	e34a3002 	movt	r3, #40962	; 0xa002
c0009d08:	e3822004 	orr	r2, r2, #4
c0009d0c:	e583210c 	str	r2, [r3, #268]	; 0x10c

    //2. GICD_IPRIORITYR  
    //key1 PF9 ==> EXTI9 ----> 事件9 --->中断号 99
    GICD->IPRIORITYR[24] |= (0x1<<27);  //中断优先级设置相同
c0009d10:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009d14:	e34a3002 	movt	r3, #40962	; 0xa002
c0009d18:	e5932460 	ldr	r2, [r3, #1120]	; 0x460
c0009d1c:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009d20:	e34a3002 	movt	r3, #40962	; 0xa002
c0009d24:	e3822302 	orr	r2, r2, #134217728	; 0x8000000
c0009d28:	e5832460 	str	r2, [r3, #1120]	; 0x460
    
    //key2 PF7 ==> EXTI7 ----> 事件7 --->中断号 97
    GICD->IPRIORITYR[24] |= (0x1<<11);  //中断优先级设置相同
c0009d2c:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009d30:	e34a3002 	movt	r3, #40962	; 0xa002
c0009d34:	e5932460 	ldr	r2, [r3, #1120]	; 0x460
c0009d38:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009d3c:	e34a3002 	movt	r3, #40962	; 0xa002
c0009d40:	e3822b02 	orr	r2, r2, #2048	; 0x800
c0009d44:	e5832460 	str	r2, [r3, #1120]	; 0x460

    //key3 PF8 ==> EXTI8 ----> 事件8 --->中断号 98
    GICD->IPRIORITYR[24] |= (0x1<<19);  //中断优先级设置相同
c0009d48:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009d4c:	e34a3002 	movt	r3, #40962	; 0xa002
c0009d50:	e5932460 	ldr	r2, [r3, #1120]	; 0x460
c0009d54:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009d58:	e34a3002 	movt	r3, #40962	; 0xa002
c0009d5c:	e3822702 	orr	r2, r2, #524288	; 0x80000
c0009d60:	e5832460 	str	r2, [r3, #1120]	; 0x460

    //2. GICD_ITARGETSRx
    //key1 PF9 ==> EXTI9 ----> 事件9 --->中断号 99
    GICD->ITARGETSR[24] |= (0x3<<24); //分配给cpu0
c0009d64:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009d68:	e34a3002 	movt	r3, #40962	; 0xa002
c0009d6c:	e5932860 	ldr	r2, [r3, #2144]	; 0x860
c0009d70:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009d74:	e34a3002 	movt	r3, #40962	; 0xa002
c0009d78:	e3822403 	orr	r2, r2, #50331648	; 0x3000000
c0009d7c:	e5832860 	str	r2, [r3, #2144]	; 0x860
    
    //key2 PF7 ==> EXTI7 ----> 事件7 --->中断号 97
    GICD->ITARGETSR[24] |= (0x3<<8); //分配给cpu0
c0009d80:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009d84:	e34a3002 	movt	r3, #40962	; 0xa002
c0009d88:	e5932860 	ldr	r2, [r3, #2144]	; 0x860
c0009d8c:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009d90:	e34a3002 	movt	r3, #40962	; 0xa002
c0009d94:	e3822c03 	orr	r2, r2, #768	; 0x300
c0009d98:	e5832860 	str	r2, [r3, #2144]	; 0x860
  

    //key3 PF8 ==> EXTI8 ----> 事件8 --->中断号 98
    GICD->ITARGETSR[24] |= (0x3<<16); //分配给cpu0
c0009d9c:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009da0:	e34a3002 	movt	r3, #40962	; 0xa002
c0009da4:	e5932860 	ldr	r2, [r3, #2144]	; 0x860
c0009da8:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009dac:	e34a3002 	movt	r3, #40962	; 0xa002
c0009db0:	e3822803 	orr	r2, r2, #196608	; 0x30000
c0009db4:	e5832860 	str	r2, [r3, #2144]	; 0x860


    //3. GICD_ICPENDRx 
    //key1 PF9 ==> EXTI9 ----> 事件9 --->中断号 99
    GICD->ICPENDR[3] |= (0x1<<3);
c0009db8:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009dbc:	e34a3002 	movt	r3, #40962	; 0xa002
c0009dc0:	e593228c 	ldr	r2, [r3, #652]	; 0x28c
c0009dc4:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009dc8:	e34a3002 	movt	r3, #40962	; 0xa002
c0009dcc:	e3822008 	orr	r2, r2, #8
c0009dd0:	e583228c 	str	r2, [r3, #652]	; 0x28c
    //key2 PF7 ==> EXTI7 ----> 事件7 --->中断号 97
    GICD->ICPENDR[3] |= (0x1<<1);
c0009dd4:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009dd8:	e34a3002 	movt	r3, #40962	; 0xa002
c0009ddc:	e593228c 	ldr	r2, [r3, #652]	; 0x28c
c0009de0:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009de4:	e34a3002 	movt	r3, #40962	; 0xa002
c0009de8:	e3822002 	orr	r2, r2, #2
c0009dec:	e583228c 	str	r2, [r3, #652]	; 0x28c
    //key3 PF8 ==> EXTI8 ----> 事件8 --->中断号 98
    GICD->ICPENDR[3] |= (0x1<<2);
c0009df0:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009df4:	e34a3002 	movt	r3, #40962	; 0xa002
c0009df8:	e593228c 	ldr	r2, [r3, #652]	; 0x28c
c0009dfc:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009e00:	e34a3002 	movt	r3, #40962	; 0xa002
c0009e04:	e3822004 	orr	r2, r2, #4
c0009e08:	e583228c 	str	r2, [r3, #652]	; 0x28c
    

}
c0009e0c:	e320f000 	nop	{0}
c0009e10:	e28bd000 	add	sp, fp, #0
c0009e14:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c0009e18:	e12fff1e 	bx	lr

c0009e1c <hal_gicc_init>:


void hal_gicc_init()
{
c0009e1c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c0009e20:	e28db000 	add	fp, sp, #0
    //GICC_CTLR寄存器
    GICC->CTRL |= (0x1<<0);
c0009e24:	e3a03a02 	mov	r3, #8192	; 0x2000
c0009e28:	e34a3002 	movt	r3, #40962	; 0xa002
c0009e2c:	e5932000 	ldr	r2, [r3]
c0009e30:	e3a03a02 	mov	r3, #8192	; 0x2000
c0009e34:	e34a3002 	movt	r3, #40962	; 0xa002
c0009e38:	e3822001 	orr	r2, r2, #1
c0009e3c:	e5832000 	str	r2, [r3]

    //GICC_PMR寄存器
    GICC->PMR |= (0x2<<4);
c0009e40:	e3a03a02 	mov	r3, #8192	; 0x2000
c0009e44:	e34a3002 	movt	r3, #40962	; 0xa002
c0009e48:	e5932004 	ldr	r2, [r3, #4]
c0009e4c:	e3a03a02 	mov	r3, #8192	; 0x2000
c0009e50:	e34a3002 	movt	r3, #40962	; 0xa002
c0009e54:	e3822020 	orr	r2, r2, #32
c0009e58:	e5832004 	str	r2, [r3, #4]
c0009e5c:	e320f000 	nop	{0}
c0009e60:	e28bd000 	add	sp, fp, #0
c0009e64:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c0009e68:	e12fff1e 	bx	lr

c0009e6c <hal_uart4_init>:
#include "uart4.h"
//init uart 
extern char buff[10];
void delay_ms(int ms);
void hal_uart4_init()
{
c0009e6c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c0009e70:	e28db000 	add	fp, sp, #0
	/******RCC init**************/
	//GPIOB GPIOG
	RCC->MP_AHB4ENSETR |= (0x1<<1 | 0x1<<6);
c0009e74:	e3a03205 	mov	r3, #1342177280	; 0x50000000
c0009e78:	e5933a28 	ldr	r3, [r3, #2600]	; 0xa28
c0009e7c:	e3a02205 	mov	r2, #1342177280	; 0x50000000
c0009e80:	e3833042 	orr	r3, r3, #66	; 0x42
c0009e84:	e5823a28 	str	r3, [r2, #2600]	; 0xa28
	//UART
	RCC->MP_APB1ENSETR |= (0x1<<16);
c0009e88:	e3a03205 	mov	r3, #1342177280	; 0x50000000
c0009e8c:	e5933a00 	ldr	r3, [r3, #2560]	; 0xa00
c0009e90:	e3a02205 	mov	r2, #1342177280	; 0x50000000
c0009e94:	e3833801 	orr	r3, r3, #65536	; 0x10000
c0009e98:	e5823a00 	str	r3, [r2, #2560]	; 0xa00
	/********GPIO init***********/
	//PB2----> UART4_RX
	GPIOB->MODER &= (~(0b11<<4));
c0009e9c:	e3a03a03 	mov	r3, #12288	; 0x3000
c0009ea0:	e3453000 	movt	r3, #20480	; 0x5000
c0009ea4:	e5932000 	ldr	r2, [r3]
c0009ea8:	e3a03a03 	mov	r3, #12288	; 0x3000
c0009eac:	e3453000 	movt	r3, #20480	; 0x5000
c0009eb0:	e3c22030 	bic	r2, r2, #48	; 0x30
c0009eb4:	e5832000 	str	r2, [r3]
	GPIOB->MODER |= (0b10<<4);
c0009eb8:	e3a03a03 	mov	r3, #12288	; 0x3000
c0009ebc:	e3453000 	movt	r3, #20480	; 0x5000
c0009ec0:	e5932000 	ldr	r2, [r3]
c0009ec4:	e3a03a03 	mov	r3, #12288	; 0x3000
c0009ec8:	e3453000 	movt	r3, #20480	; 0x5000
c0009ecc:	e3822020 	orr	r2, r2, #32
c0009ed0:	e5832000 	str	r2, [r3]
	GPIOB->AFRL &= (~(0b1111<<8));
c0009ed4:	e3a03a03 	mov	r3, #12288	; 0x3000
c0009ed8:	e3453000 	movt	r3, #20480	; 0x5000
c0009edc:	e5932020 	ldr	r2, [r3, #32]
c0009ee0:	e3a03a03 	mov	r3, #12288	; 0x3000
c0009ee4:	e3453000 	movt	r3, #20480	; 0x5000
c0009ee8:	e3c22c0f 	bic	r2, r2, #3840	; 0xf00
c0009eec:	e5832020 	str	r2, [r3, #32]
	GPIOB->AFRL |= (0b1000<<8);
c0009ef0:	e3a03a03 	mov	r3, #12288	; 0x3000
c0009ef4:	e3453000 	movt	r3, #20480	; 0x5000
c0009ef8:	e5932020 	ldr	r2, [r3, #32]
c0009efc:	e3a03a03 	mov	r3, #12288	; 0x3000
c0009f00:	e3453000 	movt	r3, #20480	; 0x5000
c0009f04:	e3822b02 	orr	r2, r2, #2048	; 0x800
c0009f08:	e5832020 	str	r2, [r3, #32]
	//PG11---->UART4_TX
	GPIOG->MODER &= (~(0b11<<22));
c0009f0c:	e3a03902 	mov	r3, #32768	; 0x8000
c0009f10:	e3453000 	movt	r3, #20480	; 0x5000
c0009f14:	e5932000 	ldr	r2, [r3]
c0009f18:	e3a03902 	mov	r3, #32768	; 0x8000
c0009f1c:	e3453000 	movt	r3, #20480	; 0x5000
c0009f20:	e3c22503 	bic	r2, r2, #12582912	; 0xc00000
c0009f24:	e5832000 	str	r2, [r3]
	GPIOG->MODER |= (0b10<<22);
c0009f28:	e3a03902 	mov	r3, #32768	; 0x8000
c0009f2c:	e3453000 	movt	r3, #20480	; 0x5000
c0009f30:	e5932000 	ldr	r2, [r3]
c0009f34:	e3a03902 	mov	r3, #32768	; 0x8000
c0009f38:	e3453000 	movt	r3, #20480	; 0x5000
c0009f3c:	e3822502 	orr	r2, r2, #8388608	; 0x800000
c0009f40:	e5832000 	str	r2, [r3]
	GPIOG->AFRH &= (~(0b1111<<12));
c0009f44:	e3a03902 	mov	r3, #32768	; 0x8000
c0009f48:	e3453000 	movt	r3, #20480	; 0x5000
c0009f4c:	e5932024 	ldr	r2, [r3, #36]	; 0x24
c0009f50:	e3a03902 	mov	r3, #32768	; 0x8000
c0009f54:	e3453000 	movt	r3, #20480	; 0x5000
c0009f58:	e3c22a0f 	bic	r2, r2, #61440	; 0xf000
c0009f5c:	e5832024 	str	r2, [r3, #36]	; 0x24
	GPIOG->AFRH |= (0b0110<<12);
c0009f60:	e3a03902 	mov	r3, #32768	; 0x8000
c0009f64:	e3453000 	movt	r3, #20480	; 0x5000
c0009f68:	e5932024 	ldr	r2, [r3, #36]	; 0x24
c0009f6c:	e3a03902 	mov	r3, #32768	; 0x8000
c0009f70:	e3453000 	movt	r3, #20480	; 0x5000
c0009f74:	e3822a06 	orr	r2, r2, #24576	; 0x6000
c0009f78:	e5832024 	str	r2, [r3, #36]	; 0x24
	/********UART init***********/
	//加上条件判断

	//M bit init(M1 M0) , sampling 16(OVER8), no even odd parity(PCE)
	USART4->CR1 &= (~(0x1<<28 | 0x1<<12 | 0x1<<15 | 0x1<<10));
c0009f7c:	e3a03000 	mov	r3, #0
c0009f80:	e3443001 	movt	r3, #16385	; 0x4001
c0009f84:	e5933000 	ldr	r3, [r3]
c0009f88:	e3a02000 	mov	r2, #0
c0009f8c:	e3442001 	movt	r2, #16385	; 0x4001
c0009f90:	e3c33201 	bic	r3, r3, #268435456	; 0x10000000
c0009f94:	e3c33b25 	bic	r3, r3, #37888	; 0x9400
c0009f98:	e5823000 	str	r3, [r2]
	//TE RE UE
	USART4->CR1 |= (0x1<<3 | 0x1<<2 | 0x1<<0);
c0009f9c:	e3a03000 	mov	r3, #0
c0009fa0:	e3443001 	movt	r3, #16385	; 0x4001
c0009fa4:	e5932000 	ldr	r2, [r3]
c0009fa8:	e3a03000 	mov	r3, #0
c0009fac:	e3443001 	movt	r3, #16385	; 0x4001
c0009fb0:	e382200d 	orr	r2, r2, #13
c0009fb4:	e5832000 	str	r2, [r3]
	//1 stop bit
	USART4->CR2 &= (~(0b11<<12));
c0009fb8:	e3a03000 	mov	r3, #0
c0009fbc:	e3443001 	movt	r3, #16385	; 0x4001
c0009fc0:	e5932004 	ldr	r2, [r3, #4]
c0009fc4:	e3a03000 	mov	r3, #0
c0009fc8:	e3443001 	movt	r3, #16385	; 0x4001
c0009fcc:	e3c22a03 	bic	r2, r2, #12288	; 0x3000
c0009fd0:	e5832004 	str	r2, [r3, #4]
	//BRR= 64MHz/115200 = 0x22B
	USART4->BRR |=  0x22B;
c0009fd4:	e3a03000 	mov	r3, #0
c0009fd8:	e3443001 	movt	r3, #16385	; 0x4001
c0009fdc:	e593300c 	ldr	r3, [r3, #12]
c0009fe0:	e3a02000 	mov	r2, #0
c0009fe4:	e3442001 	movt	r2, #16385	; 0x4001
c0009fe8:	e3833f8a 	orr	r3, r3, #552	; 0x228
c0009fec:	e3833003 	orr	r3, r3, #3
c0009ff0:	e582300c 	str	r3, [r2, #12]
	//no prescaling
	USART4->PRESC &= 0b0000;
c0009ff4:	e3a03000 	mov	r3, #0
c0009ff8:	e3443001 	movt	r3, #16385	; 0x4001
c0009ffc:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
c000a000:	e3a03000 	mov	r3, #0
c000a004:	e3443001 	movt	r3, #16385	; 0x4001
c000a008:	e3a02000 	mov	r2, #0
c000a00c:	e583202c 	str	r2, [r3, #44]	; 0x2c
}
c000a010:	e320f000 	nop	{0}
c000a014:	e28bd000 	add	sp, fp, #0
c000a018:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c000a01c:	e12fff1e 	bx	lr

c000a020 <put_char>:

//send a char
void put_char(const char str)
{
c000a020:	e92d4800 	push	{fp, lr}
c000a024:	e28db004 	add	fp, sp, #4
c000a028:	e24dd004 	sub	sp, sp, #4
c000a02c:	e1a03000 	mov	r3, r0
c000a030:	e54b3008 	strb	r3, [fp, #-8]
	//judge if the TXE==>UART_ISR[7]   is 1,if it's 1,then the next byte could be sent
	//1:empty  0:not empty
	while(!(USART4->ISR & (0x1<<7)));
c000a034:	e320f000 	nop	{0}
c000a038:	e3a03000 	mov	r3, #0
c000a03c:	e3443001 	movt	r3, #16385	; 0x4001
c000a040:	e593301c 	ldr	r3, [r3, #28]
c000a044:	e2033080 	and	r3, r3, #128	; 0x80
c000a048:	e3530000 	cmp	r3, #0
c000a04c:	0afffff9 	beq	c000a038 <put_char+0x18>
	USART4->TDR = str;
c000a050:	e3a03000 	mov	r3, #0
c000a054:	e3443001 	movt	r3, #16385	; 0x4001
c000a058:	e55b2008 	ldrb	r2, [fp, #-8]
c000a05c:	e5832028 	str	r2, [r3, #40]	; 0x28
	//judge if sending is finished     0 not finshed 1 finshed
	while (!(USART4->ISR & (0x1<<6)));
c000a060:	e320f000 	nop	{0}
c000a064:	e3a03000 	mov	r3, #0
c000a068:	e3443001 	movt	r3, #16385	; 0x4001
c000a06c:	e593301c 	ldr	r3, [r3, #28]
c000a070:	e2033040 	and	r3, r3, #64	; 0x40
c000a074:	e3530000 	cmp	r3, #0
c000a078:	0afffff9 	beq	c000a064 <put_char+0x44>
	if ('\r'==str)
c000a07c:	e55b3008 	ldrb	r3, [fp, #-8]
c000a080:	e353000d 	cmp	r3, #13
c000a084:	1a000001 	bne	c000a090 <put_char+0x70>
	{
		put_char('\n');
c000a088:	e3a0000a 	mov	r0, #10
c000a08c:	ebffffe3 	bl	c000a020 <put_char>
	}
	
	
	
}
c000a090:	e320f000 	nop	{0}
c000a094:	e24bd004 	sub	sp, fp, #4
c000a098:	e8bd8800 	pop	{fp, pc}

c000a09c <put_string>:


//send a string 
void put_string(const char* string)
{
c000a09c:	e92d4800 	push	{fp, lr}
c000a0a0:	e28db004 	add	fp, sp, #4
c000a0a4:	e24dd004 	sub	sp, sp, #4
c000a0a8:	e50b0008 	str	r0, [fp, #-8]
	{
		put_char(*p);
		p++;
	}
	*/
	while (*string)
c000a0ac:	ea000005 	b	c000a0c8 <put_string+0x2c>
	{
		put_char(*string++);
c000a0b0:	e51b3008 	ldr	r3, [fp, #-8]
c000a0b4:	e2832001 	add	r2, r3, #1
c000a0b8:	e50b2008 	str	r2, [fp, #-8]
c000a0bc:	e5d33000 	ldrb	r3, [r3]
c000a0c0:	e1a00003 	mov	r0, r3
c000a0c4:	ebffffd5 	bl	c000a020 <put_char>
	while (*string)
c000a0c8:	e51b3008 	ldr	r3, [fp, #-8]
c000a0cc:	e5d33000 	ldrb	r3, [r3]
c000a0d0:	e3530000 	cmp	r3, #0
c000a0d4:	1afffff5 	bne	c000a0b0 <put_string+0x14>
	}
	
}
c000a0d8:	e320f000 	nop	{0}
c000a0dc:	e24bd004 	sub	sp, fp, #4
c000a0e0:	e8bd8800 	pop	{fp, pc}

c000a0e4 <get_char>:


//recv a char 
char get_char()
{
c000a0e4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c000a0e8:	e28db000 	add	fp, sp, #0
c000a0ec:	e24dd004 	sub	sp, sp, #4
	char ret;
	//1. judge if RXNE is 1,data received,0 data not received
	while (!(USART4->ISR & (0x1<<5)));
c000a0f0:	e320f000 	nop	{0}
c000a0f4:	e3a03000 	mov	r3, #0
c000a0f8:	e3443001 	movt	r3, #16385	; 0x4001
c000a0fc:	e593301c 	ldr	r3, [r3, #28]
c000a100:	e2033020 	and	r3, r3, #32
c000a104:	e3530000 	cmp	r3, #0
c000a108:	0afffff9 	beq	c000a0f4 <get_char+0x10>
	//call put_char
	ret = USART4->RDR;
c000a10c:	e3a03000 	mov	r3, #0
c000a110:	e3443001 	movt	r3, #16385	; 0x4001
c000a114:	e5933024 	ldr	r3, [r3, #36]	; 0x24
c000a118:	e54b3001 	strb	r3, [fp, #-1]
	return ret;
c000a11c:	e55b3001 	ldrb	r3, [fp, #-1]
}
c000a120:	e1a00003 	mov	r0, r3
c000a124:	e28bd000 	add	sp, fp, #0
c000a128:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c000a12c:	e12fff1e 	bx	lr

c000a130 <get_string>:


//recv a string 
char* get_string()
{
c000a130:	e92d4800 	push	{fp, lr}
c000a134:	e28db004 	add	fp, sp, #4
c000a138:	e24dd004 	sub	sp, sp, #4
	//loop: recv a char,then display

	//enter===> '\r'

	int i;
	for(i = 0; i < sizeof(buff)-1;i++)
c000a13c:	e3a03000 	mov	r3, #0
c000a140:	e50b3008 	str	r3, [fp, #-8]
c000a144:	ea000019 	b	c000a1b0 <get_string+0x80>
	{
		// receive a char
		buff[i] = get_char();
c000a148:	ebffffe5 	bl	c000a0e4 <get_char>
c000a14c:	e1a03000 	mov	r3, r0
c000a150:	e1a01003 	mov	r1, r3
c000a154:	e30a3c38 	movw	r3, #44088	; 0xac38
c000a158:	e34c3000 	movt	r3, #49152	; 0xc000
c000a15c:	e51b2008 	ldr	r2, [fp, #-8]
c000a160:	e0833002 	add	r3, r3, r2
c000a164:	e1a02001 	mov	r2, r1
c000a168:	e5c32000 	strb	r2, [r3]
		// display the char 
		put_char(buff[i]);
c000a16c:	e30a3c38 	movw	r3, #44088	; 0xac38
c000a170:	e34c3000 	movt	r3, #49152	; 0xc000
c000a174:	e51b2008 	ldr	r2, [fp, #-8]
c000a178:	e0833002 	add	r3, r3, r2
c000a17c:	e5d33000 	ldrb	r3, [r3]
c000a180:	e1a00003 	mov	r0, r3
c000a184:	ebffffa5 	bl	c000a020 <put_char>
		if ('\r'==buff[i])
c000a188:	e30a3c38 	movw	r3, #44088	; 0xac38
c000a18c:	e34c3000 	movt	r3, #49152	; 0xc000
c000a190:	e51b2008 	ldr	r2, [fp, #-8]
c000a194:	e0833002 	add	r3, r3, r2
c000a198:	e5d33000 	ldrb	r3, [r3]
c000a19c:	e353000d 	cmp	r3, #13
c000a1a0:	0a000006 	beq	c000a1c0 <get_string+0x90>
	for(i = 0; i < sizeof(buff)-1;i++)
c000a1a4:	e51b3008 	ldr	r3, [fp, #-8]
c000a1a8:	e2833001 	add	r3, r3, #1
c000a1ac:	e50b3008 	str	r3, [fp, #-8]
c000a1b0:	e51b3008 	ldr	r3, [fp, #-8]
c000a1b4:	e3530008 	cmp	r3, #8
c000a1b8:	9affffe2 	bls	c000a148 <get_string+0x18>
c000a1bc:	ea000000 	b	c000a1c4 <get_string+0x94>
		{
			break;
c000a1c0:	e320f000 	nop	{0}
		}
	}
	buff[i] = '\0';
c000a1c4:	e30a3c38 	movw	r3, #44088	; 0xac38
c000a1c8:	e34c3000 	movt	r3, #49152	; 0xc000
c000a1cc:	e51b2008 	ldr	r2, [fp, #-8]
c000a1d0:	e0833002 	add	r3, r3, r2
c000a1d4:	e3a02000 	mov	r2, #0
c000a1d8:	e5c32000 	strb	r2, [r3]
	put_char('\n');
c000a1dc:	e3a0000a 	mov	r0, #10
c000a1e0:	ebffff8e 	bl	c000a020 <put_char>
	return buff;
c000a1e4:	e30a3c38 	movw	r3, #44088	; 0xac38
c000a1e8:	e34c3000 	movt	r3, #49152	; 0xc000
}
c000a1ec:	e1a00003 	mov	r0, r3
c000a1f0:	e24bd004 	sub	sp, fp, #4
c000a1f4:	e8bd8800 	pop	{fp, pc}

c000a1f8 <delay_ms>:
#include "uart4.h"
#include "key.h"
extern void printf(const char *fmt, ...);
char buff[10]={0};
void delay_ms(int ms)
{
c000a1f8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c000a1fc:	e28db000 	add	fp, sp, #0
c000a200:	e24dd00c 	sub	sp, sp, #12
c000a204:	e50b000c 	str	r0, [fp, #-12]
	int i,j;
	for(i = 0; i < ms;i++)
c000a208:	e3a03000 	mov	r3, #0
c000a20c:	e50b3004 	str	r3, [fp, #-4]
c000a210:	ea00000c 	b	c000a248 <delay_ms+0x50>
		for (j = 0; j < 1800; j++);
c000a214:	e3a03000 	mov	r3, #0
c000a218:	e50b3008 	str	r3, [fp, #-8]
c000a21c:	ea000002 	b	c000a22c <delay_ms+0x34>
c000a220:	e51b3008 	ldr	r3, [fp, #-8]
c000a224:	e2833001 	add	r3, r3, #1
c000a228:	e50b3008 	str	r3, [fp, #-8]
c000a22c:	e51b3008 	ldr	r3, [fp, #-8]
c000a230:	e3002707 	movw	r2, #1799	; 0x707
c000a234:	e1530002 	cmp	r3, r2
c000a238:	dafffff8 	ble	c000a220 <delay_ms+0x28>
	for(i = 0; i < ms;i++)
c000a23c:	e51b3004 	ldr	r3, [fp, #-4]
c000a240:	e2833001 	add	r3, r3, #1
c000a244:	e50b3004 	str	r3, [fp, #-4]
c000a248:	e51b2004 	ldr	r2, [fp, #-4]
c000a24c:	e51b300c 	ldr	r3, [fp, #-12]
c000a250:	e1520003 	cmp	r2, r3
c000a254:	baffffee 	blt	c000a214 <delay_ms+0x1c>
}
c000a258:	e320f000 	nop	{0}
c000a25c:	e28bd000 	add	sp, fp, #0
c000a260:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c000a264:	e12fff1e 	bx	lr

c000a268 <main>:


int main()
{
c000a268:	e92d4800 	push	{fp, lr}
c000a26c:	e28db004 	add	fp, sp, #4
	hal_exti_init();
c000a270:	ebfffdff 	bl	c0009a74 <hal_exti_init>
	hal_gicd_init();
c000a274:	ebfffe87 	bl	c0009c98 <hal_gicd_init>
    hal_gicc_init();
c000a278:	ebfffee7 	bl	c0009e1c <hal_gicc_init>
	while (1)
c000a27c:	eafffffe 	b	c000a27c <main+0x14>

Disassembly of section .rodata:

c000a280 <.LC0>:
c000a280:	33323130 	teqcc	r2, #48, 2
c000a284:	37363534 			; <UNDEFINED> instruction: 0x37363534
c000a288:	62613938 	rsbvs	r3, r1, #56, 18	; 0xe0000
c000a28c:	66656463 	strbtvs	r6, [r5], -r3, ror #8
c000a290:	6a696867 	bvs	c1a64434 <__bss_end__+0x1a597f2>
c000a294:	6e6d6c6b 	cdpvs	12, 6, cr6, cr13, cr11, {3}
c000a298:	7271706f 	rsbsvc	r7, r1, #111	; 0x6f
c000a29c:	76757473 			; <UNDEFINED> instruction: 0x76757473
c000a2a0:	7a797877 	bvc	c1e68484 <__bss_end__+0x1e5d842>
c000a2a4:	00000000 	andeq	r0, r0, r0

c000a2a8 <.LC1>:
c000a2a8:	33323130 	teqcc	r2, #48, 2
c000a2ac:	37363534 			; <UNDEFINED> instruction: 0x37363534
c000a2b0:	42413938 	submi	r3, r1, #56, 18	; 0xe0000
c000a2b4:	46454443 	strbmi	r4, [r5], -r3, asr #8
c000a2b8:	4a494847 	bmi	c125c3dc <__bss_end__+0x125179a>
c000a2bc:	4e4d4c4b 	cdpmi	12, 4, cr4, cr13, cr11, {2}
c000a2c0:	5251504f 	subspl	r5, r1, #79	; 0x4f
c000a2c4:	56555453 			; <UNDEFINED> instruction: 0x56555453
c000a2c8:	5a595857 	bpl	c166042c <__bss_end__+0x16557ea>
c000a2cc:	00000000 	andeq	r0, r0, r0

c000a2d0 <.LC2>:
c000a2d0:	4c554e3c 	mrrcmi	14, 3, r4, r5, cr12
c000a2d4:	00003e4c 	andeq	r3, r0, ip, asr #28

c000a2d8 <.LC0>:
c000a2d8:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
c000a2dc:	70757272 	rsbsvc	r7, r5, r2, ror r2
c000a2e0:	6f6e5f74 	svcvs	0x006e5f74
c000a2e4:	25203d20 	strcs	r3, [r0, #-3360]!	; 0xfffff2e0
c000a2e8:	000d0a64 	andeq	r0, sp, r4, ror #20

c000a2ec <.LC1>:
c000a2ec:	3179656b 	cmncc	r9, fp, ror #10
c000a2f0:	23232323 			; <UNDEFINED> instruction: 0x23232323
c000a2f4:	23232323 			; <UNDEFINED> instruction: 0x23232323
c000a2f8:	23232323 			; <UNDEFINED> instruction: 0x23232323
c000a2fc:	0d232323 	stceq	3, cr2, [r3, #-140]!	; 0xffffff74
c000a300:	0000000a 	andeq	r0, r0, sl

c000a304 <.LC2>:
c000a304:	3279656b 	rsbscc	r6, r9, #448790528	; 0x1ac00000
c000a308:	23232323 			; <UNDEFINED> instruction: 0x23232323
c000a30c:	23232323 			; <UNDEFINED> instruction: 0x23232323
c000a310:	23232323 			; <UNDEFINED> instruction: 0x23232323
c000a314:	0d232323 	stceq	3, cr2, [r3, #-140]!	; 0xffffff74
c000a318:	0000000a 	andeq	r0, r0, sl

c000a31c <.LC3>:
c000a31c:	3379656b 	cmncc	r9, #448790528	; 0x1ac00000
c000a320:	23232323 			; <UNDEFINED> instruction: 0x23232323
c000a324:	23232323 			; <UNDEFINED> instruction: 0x23232323
c000a328:	23232323 			; <UNDEFINED> instruction: 0x23232323
c000a32c:	0d232323 	stceq	3, cr2, [r3, #-140]!	; 0xffffff74
c000a330:	Address 0xc000a330 is out of bounds.


Disassembly of section .data:

c000a334 <stack>:
	...

c000ab34 <_ctype>:
c000ab34:	08080808 	stmdaeq	r8, {r3, fp}
c000ab38:	08080808 	stmdaeq	r8, {r3, fp}
c000ab3c:	28282808 	stmdacs	r8!, {r3, fp, sp}
c000ab40:	08082828 	stmdaeq	r8, {r3, r5, fp, sp}
c000ab44:	08080808 	stmdaeq	r8, {r3, fp}
c000ab48:	08080808 	stmdaeq	r8, {r3, fp}
c000ab4c:	08080808 	stmdaeq	r8, {r3, fp}
c000ab50:	08080808 	stmdaeq	r8, {r3, fp}
c000ab54:	101010a0 	andsne	r1, r0, r0, lsr #1
c000ab58:	10101010 	andsne	r1, r0, r0, lsl r0
c000ab5c:	10101010 	andsne	r1, r0, r0, lsl r0
c000ab60:	10101010 	andsne	r1, r0, r0, lsl r0
c000ab64:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
c000ab68:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
c000ab6c:	10100404 	andsne	r0, r0, r4, lsl #8
c000ab70:	10101010 	andsne	r1, r0, r0, lsl r0
c000ab74:	41414110 	cmpmi	r1, r0, lsl r1
c000ab78:	01414141 	cmpeq	r1, r1, asr #2
c000ab7c:	01010101 	tsteq	r1, r1, lsl #2
c000ab80:	01010101 	tsteq	r1, r1, lsl #2
c000ab84:	01010101 	tsteq	r1, r1, lsl #2
c000ab88:	01010101 	tsteq	r1, r1, lsl #2
c000ab8c:	10010101 	andne	r0, r1, r1, lsl #2
c000ab90:	10101010 	andsne	r1, r0, r0, lsl r0
c000ab94:	42424210 	submi	r4, r2, #16, 4
c000ab98:	02424242 	subeq	r4, r2, #536870916	; 0x20000004
c000ab9c:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
c000aba0:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
c000aba4:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
c000aba8:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
c000abac:	10020202 	andne	r0, r2, r2, lsl #4
c000abb0:	08101010 	ldmdaeq	r0, {r4, ip}
	...
c000abd4:	101010a0 	andsne	r1, r0, r0, lsr #1
c000abd8:	10101010 	andsne	r1, r0, r0, lsl r0
c000abdc:	10101010 	andsne	r1, r0, r0, lsl r0
c000abe0:	10101010 	andsne	r1, r0, r0, lsl r0
c000abe4:	10101010 	andsne	r1, r0, r0, lsl r0
c000abe8:	10101010 	andsne	r1, r0, r0, lsl r0
c000abec:	10101010 	andsne	r1, r0, r0, lsl r0
c000abf0:	10101010 	andsne	r1, r0, r0, lsl r0
c000abf4:	01010101 	tsteq	r1, r1, lsl #2
c000abf8:	01010101 	tsteq	r1, r1, lsl #2
c000abfc:	01010101 	tsteq	r1, r1, lsl #2
c000ac00:	01010101 	tsteq	r1, r1, lsl #2
c000ac04:	01010101 	tsteq	r1, r1, lsl #2
c000ac08:	10010101 	andne	r0, r1, r1, lsl #2
c000ac0c:	01010101 	tsteq	r1, r1, lsl #2
c000ac10:	02010101 	andeq	r0, r1, #1073741824	; 0x40000000
c000ac14:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
c000ac18:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
c000ac1c:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
c000ac20:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
c000ac24:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
c000ac28:	10020202 	andne	r0, r2, r2, lsl #4
c000ac2c:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
c000ac30:	02020202 	andeq	r0, r2, #536870912	; 0x20000000

Disassembly of section .bss:

c000ac34 <i>:
c000ac34:	00000000 	andeq	r0, r0, r0

c000ac38 <buff>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002041 	andeq	r2, r0, r1, asr #32
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000016 	andeq	r0, r0, r6, lsl r0
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	0c030a02 			; <UNDEFINED> instruction: 0x0c030a02
  20:	Address 0x00000020 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <_start-0xbef372dc>
   4:	694c2820 	stmdbvs	ip, {r5, fp, sp}^
   8:	6f72616e 	svcvs	0x0072616e
   c:	43434720 	movtmi	r4, #14112	; 0x3720
  10:	352e3720 	strcc	r3, [lr, #-1824]!	; 0xfffff8e0
  14:	3130322d 	teqcc	r0, sp, lsr #4
  18:	32312e39 	eorscc	r2, r1, #912	; 0x390
  1c:	2e372029 	cdpcs	0, 3, cr2, cr7, cr9, {1}
  20:	00302e35 	eorseq	r2, r0, r5, lsr lr

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	00000093 	muleq	r0, r3, r0
   4:	00240002 	eoreq	r0, r4, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	73010000 	movwvc	r0, #4096	; 0x1000
  1c:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
  20:	74730000 	ldrbtvc	r0, [r3], #-0
  24:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
  28:	00010053 	andeq	r0, r1, r3, asr r0
  2c:	05000000 	streq	r0, [r0, #-0]
  30:	00800002 	addeq	r0, r0, r2
  34:	011b03c0 	tsteq	fp, r0, asr #7
  38:	2f2f2f2f 	svccs	0x002f2f2f
  3c:	032f2f2f 			; <UNDEFINED> instruction: 0x032f2f2f
  40:	2f2ff215 	svccs	0x002ff215
  44:	2f312f2f 	svccs	0x00312f2f
  48:	2f312f2f 	svccs	0x00312f2f
  4c:	2f2f2f2f 	svccs	0x002f2f2f
  50:	2f2f312f 	svccs	0x002f312f
  54:	2f2f2f2f 	svccs	0x002f2f2f
  58:	2f2f312f 	svccs	0x002f312f
  5c:	2f2f2f31 	svccs	0x002f2f31
  60:	332f2f2f 			; <UNDEFINED> instruction: 0x332f2f2f
  64:	2f302f31 	svccs	0x00302f31
  68:	2f2f302f 	svccs	0x002f302f
  6c:	302f2f30 	eorcc	r2, pc, r0, lsr pc	; <UNPREDICTABLE>
  70:	2f302f2f 	svccs	0x00302f2f
  74:	302f2f32 	eorcc	r2, pc, r2, lsr pc	; <UNPREDICTABLE>
  78:	312f2f2f 			; <UNDEFINED> instruction: 0x312f2f2f
  7c:	f6f6f6de 			; <UNDEFINED> instruction: 0xf6f6f6de
  80:	2f2ff7f6 	svccs	0x002ff7f6
  84:	8903a32f 	stmdbhi	r3, {r0, r1, r2, r3, r5, r8, r9, sp, pc}
  88:	c8034a7f 	stmdagt	r3, {r0, r1, r2, r3, r4, r5, r6, r9, fp, lr}
  8c:	032f2e00 			; <UNDEFINED> instruction: 0x032f2e00
  90:	02022e09 	andeq	r2, r2, #9, 28	; 0x90
  94:	6c010100 	stfvss	f0, [r1], {-0}
  98:	02000000 	andeq	r0, r0, #0
  9c:	00002c00 	andeq	r2, r0, r0, lsl #24
  a0:	fb010200 	blx	408aa <_start-0xbffc7756>
  a4:	01000d0e 	tsteq	r0, lr, lsl #26
  a8:	00010101 	andeq	r0, r1, r1, lsl #2
  ac:	00010000 	andeq	r0, r1, r0
  b0:	6f630100 	svcvs	0x00630100
  b4:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
  b8:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
  bc:	755f0000 	ldrbvc	r0, [pc, #-0]	; c4 <_start-0xc0007f3c>
  c0:	73646f6d 	cmnvc	r4, #436	; 0x1b4
  c4:	532e3369 			; <UNDEFINED> instruction: 0x532e3369
  c8:	00000100 	andeq	r0, r0, r0, lsl #2
  cc:	02050000 	andeq	r0, r5, #0
  d0:	c0008218 	andgt	r8, r0, r8, lsl r2
  d4:	2f011203 	svccs	0x00011203
  d8:	342f2f2f 	strtcc	r2, [pc], #-3887	; e0 <_start-0xc0007f20>
  dc:	2f2f2f2f 	svccs	0x002f2f2f
  e0:	2f2f2f32 	svccs	0x002f2f32
  e4:	2f2f332f 	svccs	0x002f332f
  e8:	2f2f2f2f 	svccs	0x002f2f2f
  ec:	2f2f2f2f 	svccs	0x002f2f2f
  f0:	2f2f2f2f 	svccs	0x002f2f2f
  f4:	2f352f2f 	svccs	0x00352f2f
  f8:	2f2f2f2f 	svccs	0x002f2f2f
  fc:	302f2f2f 	eorcc	r2, pc, pc, lsr #30
 100:	02022f30 	andeq	r2, r2, #48, 30	; 0xc0
 104:	65010100 	strvs	r0, [r1, #-256]	; 0xffffff00
 108:	02000000 	andeq	r0, r0, #0
 10c:	00002c00 	andeq	r2, r0, r0, lsl #24
 110:	fb010200 	blx	4091a <_start-0xbffc76e6>
 114:	01000d0e 	tsteq	r0, lr, lsl #26
 118:	00010101 	andeq	r0, r1, r1, lsl #2
 11c:	00010000 	andeq	r0, r1, r0
 120:	6f630100 	svcvs	0x00630100
 124:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
 128:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
 12c:	755f0000 	ldrbvc	r0, [pc, #-0]	; 134 <_start-0xc0007ecc>
 130:	73766964 	cmnvc	r6, #100, 18	; 0x190000
 134:	532e3369 			; <UNDEFINED> instruction: 0x532e3369
 138:	00000100 	andeq	r0, r0, r0, lsl #2
 13c:	02050000 	andeq	r0, r5, #0
 140:	c00082c8 	andgt	r8, r0, r8, asr #5
 144:	2f011103 	svccs	0x00011103
 148:	2f2f2f2f 	svccs	0x002f2f2f
 14c:	2f2f2f34 	svccs	0x002f2f34
 150:	2f2f322f 	svccs	0x002f322f
 154:	2f342f2f 	svccs	0x00342f2f
 158:	2f2f2f2f 	svccs	0x002f2f2f
 15c:	2f2f2f2f 	svccs	0x002f2f2f
 160:	2f2f2f2f 	svccs	0x002f2f2f
 164:	2f302f2f 	svccs	0x00302f2f
 168:	022f3030 	eoreq	r3, pc, #48	; 0x30
 16c:	01010002 	tsteq	r1, r2
 170:	0000022e 	andeq	r0, r0, lr, lsr #4
 174:	00520002 	subseq	r0, r2, r2
 178:	01020000 	mrseq	r0, (UNDEF: 2)
 17c:	000d0efb 	strdeq	r0, [sp], -fp
 180:	01010101 	tsteq	r1, r1, lsl #2
 184:	01000000 	mrseq	r0, (UNDEF: 0)
 188:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
 18c:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; d8 <_start-0xc0007f28>
 190:	2f6e6f6d 	svccs	0x006e6f6d
 194:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
 198:	00656475 	rsbeq	r6, r5, r5, ror r4
 19c:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
 1a0:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
 1a4:	00006372 	andeq	r6, r0, r2, ror r3
 1a8:	70797463 	rsbsvc	r7, r9, r3, ror #8
 1ac:	00682e65 	rsbeq	r2, r8, r5, ror #28
 1b0:	70000001 	andvc	r0, r0, r1
 1b4:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
 1b8:	00632e66 	rsbeq	r2, r3, r6, ror #28
 1bc:	73000002 	movwvc	r0, #2
 1c0:	72616474 	rsbvc	r6, r1, #116, 8	; 0x74000000
 1c4:	00682e67 	rsbeq	r2, r8, r7, ror #28
 1c8:	00000001 	andeq	r0, r0, r1
 1cc:	5c020500 	cfstr32pl	mvfx0, [r2], {-0}
 1d0:	03c00083 	biceq	r0, r0, #131	; 0x83
 1d4:	9f0100c4 	svcls	0x000100c4
 1d8:	042f67d7 	strteq	r6, [pc], #-2007	; 1e0 <_start-0xc0007e20>
 1dc:	7fbe0302 	svcvc	0x00be0302
 1e0:	834cbb82 	movthi	fp, #52098	; 0xcb82
 1e4:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
 1e8:	06820601 	streq	r0, [r2], r1, lsl #12
 1ec:	684b3d08 	stmdavs	fp, {r3, r8, sl, fp, ip, sp}^
 1f0:	4c674d67 	stclmi	13, cr4, [r7], #-412	; 0xfffffe64
 1f4:	0063bb30 	rsbeq	fp, r3, r0, lsr fp
 1f8:	06010402 	streq	r0, [r1], -r2, lsl #8
 1fc:	02002008 	andeq	r2, r0, #8
 200:	20080204 	andcs	r0, r8, r4, lsl #4
 204:	03040200 	movweq	r0, #16896	; 0x4200
 208:	04020082 	streq	r0, [r2], #-130	; 0xffffff7e
 20c:	21080605 	tstcs	r8, r5, lsl #12
 210:	06040200 	streq	r0, [r4], -r0, lsl #4
 214:	0200d606 	andeq	sp, r0, #6291456	; 0x600000
 218:	65060904 	strvs	r0, [r6, #-2308]	; 0xfffff6fc
 21c:	2f6767a3 	svccs	0x006767a3
 220:	0883bb69 	stmeq	r3, {r0, r3, r5, r6, r8, r9, fp, ip, sp, pc}
 224:	24039f21 	strcs	r9, [r3], #-3873	; 0xfffff0df
 228:	2f4c8366 	svccs	0x004c8366
 22c:	0200c708 	andeq	ip, r0, #8, 14	; 0x200000
 230:	9e060104 	adflss	f0, f6, f4
 234:	032fa006 			; <UNDEFINED> instruction: 0x032fa006
 238:	69d88220 	ldmibvs	r8, {r5, r9, pc}^
 23c:	67836783 	strvs	r6, [r3, r3, lsl #15]
 240:	01040200 	mrseq	r0, R12_usr
 244:	67066606 	strvs	r6, [r6, -r6, lsl #12]
 248:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
 24c:	00820601 	addeq	r0, r2, r1, lsl #12
 250:	4a020402 	bmi	81260 <_start-0xbff86da0>
 254:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
 258:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
 25c:	002f0604 	eoreq	r0, pc, r4, lsl #12
 260:	4b040402 	blmi	101270 <_start-0xbff06d90>
 264:	674b6783 	strbvs	r6, [fp, -r3, lsl #15]
 268:	834b8383 	movthi	r8, #45955	; 0xb383
 26c:	83694b83 	cmnhi	r9, #134144	; 0x20c00
 270:	68678367 	stmdavs	r7!, {r0, r1, r2, r5, r6, r8, r9, pc}^
 274:	83f4674b 	mvnshi	r6, #19660800	; 0x12c0000
 278:	69102e02 	ldmdbvs	r0, {r1, r9, sl, fp, sp}
 27c:	2f83834b 	svccs	0x0083834b
 280:	9f67a09d 	svcls	0x0067a09d
 284:	67bb6783 	ldrvs	r6, [fp, r3, lsl #15]!
 288:	2f83bd9f 	svccs	0x0083bd9f
 28c:	9d2fa09d 	stcls	0, cr10, [pc, #-628]!	; 20 <_start-0xc0007fe0>
 290:	a0f12fbc 	ldrhtge	r2, [r1], #252	; 0xfc
 294:	00a09d2f 	adceq	r9, r0, pc, lsr #26
 298:	2f010402 	svccs	0x00010402
 29c:	0200a16b 	andeq	sl, r0, #-1073741798	; 0xc000001a
 2a0:	66060404 	strvs	r0, [r6], -r4, lsl #8
 2a4:	01040200 	mrseq	r0, R12_usr
 2a8:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
 2ac:	84069e03 	strhi	r9, [r6], #-3587	; 0xfffff1fd
 2b0:	12038467 	andne	r8, r3, #1728053248	; 0x67000000
 2b4:	bb8367ba 	bllt	fe0da1a4 <__bss_end__+0x3e0cf562>
 2b8:	02674c32 	rsbeq	r4, r7, #12800	; 0x3200
 2bc:	8383132e 	orrhi	r1, r3, #-1207959552	; 0xb8000000
 2c0:	4b868383 	blmi	fe1a10d4 <__bss_end__+0x3e196492>
 2c4:	01040200 	mrseq	r0, R12_usr
 2c8:	83068206 	movwhi	r8, #25094	; 0x6206
 2cc:	9f68839f 	svcls	0x0068839f
 2d0:	4b6b6767 	blmi	1ada074 <_start-0xbe52df8c>
 2d4:	02006783 	andeq	r6, r0, #34340864	; 0x20c0000
 2d8:	82060104 	andhi	r0, r6, #4, 2
 2dc:	839f8306 	orrshi	r8, pc, #402653184	; 0x18000000
 2e0:	4e67a068 	cdpmi	0, 6, cr10, cr7, cr8, {3}
 2e4:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
 2e8:	00820601 	addeq	r0, r2, r1, lsl #12
 2ec:	82020402 	andhi	r0, r2, #33554432	; 0x2000000
 2f0:	03040200 	movweq	r0, #16896	; 0x4200
 2f4:	02008306 	andeq	r8, r0, #402653184	; 0x18000000
 2f8:	4b490304 	blmi	1240f10 <_start-0xbedc70f0>
 2fc:	01040200 	mrseq	r0, R12_usr
 300:	02008206 	andeq	r8, r0, #1610612736	; 0x60000000
 304:	83060204 	movwhi	r0, #25092	; 0x6204
 308:	02040200 	andeq	r0, r4, #0, 4
 30c:	00674c49 	rsbeq	r4, r7, r9, asr #24
 310:	06010402 	streq	r0, [r1], -r2, lsl #8
 314:	4b9f0666 	blmi	fe7c1cb4 <__bss_end__+0x3e7b7072>
 318:	024c6a68 	subeq	r6, ip, #104, 20	; 0x68000
 31c:	831401b4 	tsthi	r4, #180, 2	; 0x2d
 320:	08bc9d2f 	ldmeq	ip!, {r0, r1, r2, r3, r5, r8, sl, fp, ip, pc}
 324:	bc9d2f21 	ldclt	15, cr2, [sp], {33}	; 0x21
 328:	68679f31 	stmdavs	r7!, {r0, r4, r5, r8, r9, sl, fp, ip, pc}^
 32c:	9d2f83bc 	stcls	3, cr8, [pc, #-752]!	; 44 <_start-0xc0007fbc>
 330:	040200bc 	streq	r0, [r2], #-188	; 0xffffff44
 334:	02006703 	andeq	r6, r0, #786432	; 0xc0000
 338:	00f10304 	rscseq	r0, r1, r4, lsl #6
 33c:	06010402 	streq	r0, [r1], -r2, lsl #8
 340:	2f840666 	svccs	0x00840666
 344:	6731bc9d 			; <UNDEFINED> instruction: 0x6731bc9d
 348:	0881694b 	stmeq	r1, {r0, r1, r3, r6, r8, fp, sp, lr}
 34c:	9f67323f 	svcls	0x0067323f
 350:	a09f2ba3 	addsge	r2, pc, r3, lsr #23
 354:	4b329f31 	blmi	ca8020 <_start-0xbf35ffe0>
 358:	324b6831 	subcc	r6, fp, #3211264	; 0x310000
 35c:	839f3168 	orrshi	r3, pc, #104, 2
 360:	03672dbd 	cmneq	r7, #12096	; 0x2f40
 364:	0f032e78 	svceq	0x00032e78
 368:	00bb672e 	adcseq	r6, fp, lr, lsr #14
 36c:	06010402 	streq	r0, [r1], -r2, lsl #8
 370:	bb670666 	bllt	19c1d10 <_start-0xbe6462f0>
 374:	bb67bb67 	bllt	19ef118 <_start-0xbe618ee8>
 378:	bc838383 	stclt	3, cr8, [r3], {131}	; 0x83
 37c:	0402009f 	streq	r0, [r2], #-159	; 0xffffff61
 380:	7ee20302 	cdpvc	3, 14, cr0, cr2, cr2, {0}
 384:	02003c08 	andeq	r3, r0, #8, 24	; 0x800
 388:	66060104 	strvs	r0, [r6], -r4, lsl #2
 38c:	01a00306 	lsleq	r0, r6, #6
 390:	69676782 	stmdbvs	r7!, {r1, r7, r8, r9, sl, sp, lr}^
 394:	2fbc4ba2 	svccs	0x00bc4ba2
 398:	a04f85a1 	subge	r8, pc, r1, lsr #11
 39c:	000a0267 	andeq	r0, sl, r7, ror #4
 3a0:	00a60101 	adceq	r0, r6, r1, lsl #2
 3a4:	00020000 	andeq	r0, r2, r0
 3a8:	00000063 	andeq	r0, r0, r3, rrx
 3ac:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
 3b0:	0101000d 	tsteq	r1, sp
 3b4:	00000101 	andeq	r0, r0, r1, lsl #2
 3b8:	00000100 	andeq	r0, r0, r0, lsl #2
 3bc:	6d6f6301 	stclvs	3, cr6, [pc, #-4]!	; 3c0 <_start-0xc0007c40>
 3c0:	2f6e6f6d 	svccs	0x006e6f6d
 3c4:	00637273 	rsbeq	r7, r3, r3, ror r2
 3c8:	6f632f2e 	svcvs	0x00632f2e
 3cc:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
 3d0:	636e692f 	cmnvs	lr, #770048	; 0xbc000
 3d4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
 3d8:	61750000 	cmnvs	r5, r0
 3dc:	632e7472 			; <UNDEFINED> instruction: 0x632e7472
 3e0:	00000100 	andeq	r0, r0, r0, lsl #2
 3e4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 3e8:	31706d32 	cmncc	r0, r2, lsr sp
 3ec:	675f7878 			; <UNDEFINED> instruction: 0x675f7878
 3f0:	2e6f6970 			; <UNDEFINED> instruction: 0x2e6f6970
 3f4:	00020068 	andeq	r0, r2, r8, rrx
 3f8:	6d747300 	ldclvs	3, cr7, [r4, #-0]
 3fc:	706d3233 	rsbvc	r3, sp, r3, lsr r2
 400:	5f787831 	svcpl	0x00787831
 404:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
 408:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 40c:	00000000 	andeq	r0, r0, r0
 410:	94140205 	ldrls	r0, [r4], #-517	; 0xfffffdfb
 414:	4c17c000 	ldcmi	0, cr12, [r7], {-0}
 418:	d8d7d7d7 	ldmle	r7, {r0, r1, r2, r4, r6, r7, r8, r9, sl, ip, lr, pc}^
 41c:	d8d7d7d7 	ldmle	r7, {r0, r1, r2, r4, r6, r7, r8, r9, sl, ip, lr, pc}^
 420:	d7d8d8d7 			; <UNDEFINED> instruction: 0xd7d8d8d7
 424:	d7d8d884 	ldrble	sp, [r8, r4, lsl #17]
 428:	009f85d8 			; <UNDEFINED> instruction: 0x009f85d8
 42c:	06010402 	streq	r0, [r1], -r2, lsl #8
 430:	83bb062e 			; <UNDEFINED> instruction: 0x83bb062e
 434:	83684b67 	cmnhi	r8, #105472	; 0x19c00
 438:	6984b92f 	stmibvs	r4, {r0, r1, r2, r3, r5, r8, fp, ip, sp, pc}
 43c:	04020068 	streq	r0, [r2], #-104	; 0xffffff98
 440:	062e0601 	strteq	r0, [lr], -r1, lsl #12
 444:	022f83bb 	eoreq	r8, pc, #-335544318	; 0xec000002
 448:	01010008 	tsteq	r1, r8
 44c:	00000088 	andeq	r0, r0, r8, lsl #1
 450:	005d0002 	subseq	r0, sp, r2
 454:	01020000 	mrseq	r0, (UNDEF: 2)
 458:	000d0efb 	strdeq	r0, [sp], -fp
 45c:	01010101 	tsteq	r1, r1, lsl #2
 460:	01000000 	mrseq	r0, (UNDEF: 0)
 464:	73010000 	movwvc	r0, #4096	; 0x1000
 468:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
 46c:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 3b8 <_start-0xc0007c48>
 470:	2f6e6f6d 	svccs	0x006e6f6d
 474:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
 478:	00656475 	rsbeq	r6, r5, r5, ror r4
 47c:	5f6f6400 	svcpl	0x006f6400
 480:	2e717269 	cdpcs	2, 7, cr7, cr1, cr9, {3}
 484:	00010063 	andeq	r0, r1, r3, rrx
 488:	6d747300 	ldclvs	3, cr7, [r4, #-0]
 48c:	706d3233 	rsbvc	r3, sp, r3, lsr r2
 490:	5f787831 	svcpl	0x00787831
 494:	69747865 	ldmdbvs	r4!, {r0, r2, r5, r6, fp, ip, sp, lr}^
 498:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 49c:	74730000 	ldrbtvc	r0, [r3], #-0
 4a0:	6d32336d 	ldcvs	3, cr3, [r2, #-436]!	; 0xfffffe4c
 4a4:	78783170 	ldmdavc	r8!, {r4, r5, r6, r8, ip, sp}^
 4a8:	6369675f 	cmnvs	r9, #24903680	; 0x17c0000
 4ac:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 4b0:	00000000 	andeq	r0, r0, r0
 4b4:	96f00205 	ldrbtls	r0, [r0], r5, lsl #4
 4b8:	6816c000 	ldmdavs	r6, {lr, pc}
 4bc:	1c03849f 	cfstrsne	mvf8, [r3], {159}	; 0x9f
 4c0:	2e6703d6 	mcrcs	3, 3, r0, cr7, cr6, {6}
 4c4:	f3f3d868 	vtbx.8	d29, {d3}, d24
 4c8:	f3d86830 	vqshrun.s32	d22, q8, #8
 4cc:	d86830f3 	stmdale	r8!, {r0, r1, r4, r5, r6, r7, ip, sp}^
 4d0:	0235f3f3 	eorseq	pc, r5, #-872415229	; 0xcc000003
 4d4:	01010006 	tsteq	r1, r6
 4d8:	00000060 	andeq	r0, r0, r0, rrx
 4dc:	00350002 	eorseq	r0, r5, r2
 4e0:	01020000 	mrseq	r0, (UNDEF: 2)
 4e4:	000d0efb 	strdeq	r0, [sp], -fp
 4e8:	01010101 	tsteq	r1, r1, lsl #2
 4ec:	01000000 	mrseq	r0, (UNDEF: 0)
 4f0:	73010000 	movwvc	r0, #4096	; 0x1000
 4f4:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
 4f8:	636e692f 	cmnvs	lr, #770048	; 0xbc000
 4fc:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
 500:	70670000 	rsbvc	r0, r7, r0
 504:	632e6f69 			; <UNDEFINED> instruction: 0x632e6f69
 508:	00000100 	andeq	r0, r0, r0, lsl #2
 50c:	6f697067 	svcvs	0x00697067
 510:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 514:	00000000 	andeq	r0, r0, r0
 518:	98900205 	ldmls	r0, {r0, r2, r9}
 51c:	bc15c000 	ldclt	0, cr12, [r5], {-0}
 520:	3f083d08 	svccc	0x00083d08
 524:	082308f3 	stmdaeq	r3!, {r0, r1, r4, r5, r6, r7, fp}
 528:	083f083d 	ldmdaeq	pc!, {r0, r2, r3, r4, r5, fp}	; <UNPREDICTABLE>
 52c:	883e083d 	ldmdahi	lr!, {r0, r2, r3, r4, r5, fp}
 530:	2af768bc 	bcs	ffdda828 <__bss_end__+0x3fdcfbe6>
 534:	02220868 	eoreq	r0, r2, #104, 16	; 0x680000
 538:	01010008 	tsteq	r1, r8
 53c:	000000bd 	strheq	r0, [r0], -sp
 540:	00830002 	addeq	r0, r3, r2
 544:	01020000 	mrseq	r0, (UNDEF: 2)
 548:	000d0efb 	strdeq	r0, [sp], -fp
 54c:	01010101 	tsteq	r1, r1, lsl #2
 550:	01000000 	mrseq	r0, (UNDEF: 0)
 554:	73010000 	movwvc	r0, #4096	; 0x1000
 558:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
 55c:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 4a8 <_start-0xc0007b58>
 560:	2f6e6f6d 	svccs	0x006e6f6d
 564:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
 568:	00656475 	rsbeq	r6, r5, r5, ror r4
 56c:	79656b00 	stmdbvc	r5!, {r8, r9, fp, sp, lr}^
 570:	0100632e 	tsteq	r0, lr, lsr #6
 574:	74730000 	ldrbtvc	r0, [r3], #-0
 578:	6d32336d 	ldcvs	3, cr3, [r2, #-436]!	; 0xfffffe4c
 57c:	78783170 	ldmdavc	r8!, {r4, r5, r6, r8, ip, sp}^
 580:	7478655f 	ldrbtvc	r6, [r8], #-1375	; 0xfffffaa1
 584:	00682e69 	rsbeq	r2, r8, r9, ror #28
 588:	73000002 	movwvc	r0, #2
 58c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
 590:	7831706d 	ldmdavc	r1!, {r0, r2, r3, r5, r6, ip, sp, lr}
 594:	69675f78 	stmdbvs	r7!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 598:	00682e63 	rsbeq	r2, r8, r3, ror #28
 59c:	73000002 	movwvc	r0, #2
 5a0:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
 5a4:	7831706d 	ldmdavc	r1!, {r0, r2, r3, r5, r6, ip, sp, lr}
 5a8:	63725f78 	cmnvs	r2, #120, 30	; 0x1e0
 5ac:	00682e63 	rsbeq	r2, r8, r3, ror #28
 5b0:	73000002 	movwvc	r0, #2
 5b4:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
 5b8:	7831706d 	ldmdavc	r1!, {r0, r2, r3, r5, r6, ip, sp, lr}
 5bc:	70675f78 	rsbvc	r5, r7, r8, ror pc
 5c0:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
 5c4:	00000200 	andeq	r0, r0, r0, lsl #4
 5c8:	02050000 	andeq	r0, r5, #0
 5cc:	c0009a74 	andgt	r9, r0, r4, ror sl
 5d0:	d7a04d16 			; <UNDEFINED> instruction: 0xd7a04d16
 5d4:	d9d7dbd7 	ldmible	r7, {r0, r1, r2, r4, r6, r7, r8, r9, fp, ip, lr, pc}^
 5d8:	dad7d9d7 	ble	ff5f6d3c <__bss_end__+0x3f5ec0fa>
 5dc:	d8dbd8d8 	ldmle	fp, {r3, r4, r6, r7, fp, ip, lr, pc}^
 5e0:	d8d8dbd8 	ldmle	r8, {r3, r4, r6, r7, r8, r9, fp, ip, lr, pc}^
 5e4:	da4c86d7 	ble	1322148 <_start-0xbece5eb8>
 5e8:	d9dad8d8 	ldmible	sl, {r3, r4, r6, r7, fp, ip, lr, pc}^
 5ec:	dad9dad9 	ble	ff677158 <__bss_end__+0x3f66c516>
 5f0:	d9d8d8db 	ldmible	r8, {r0, r1, r3, r4, r6, r7, fp, ip, lr, pc}^
 5f4:	d7d94c86 	ldrble	r4, [r9, r6, lsl #25]
 5f8:	01000802 	tsteq	r0, r2, lsl #16
 5fc:	0000d501 	andeq	sp, r0, r1, lsl #10
 600:	71000200 	mrsvc	r0, R8_usr
 604:	02000000 	andeq	r0, r0, #0
 608:	0d0efb01 	vstreq	d15, [lr, #-4]
 60c:	01010100 	mrseq	r0, (UNDEF: 17)
 610:	00000001 	andeq	r0, r0, r1
 614:	01000001 	tsteq	r0, r1
 618:	00637273 	rsbeq	r7, r3, r3, ror r2
 61c:	6f632f2e 	svcvs	0x00632f2e
 620:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
 624:	636e692f 	cmnvs	lr, #770048	; 0xbc000
 628:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
 62c:	61750000 	cmnvs	r5, r0
 630:	2e347472 	mrccs	4, 1, r7, cr4, cr2, {3}
 634:	00010063 	andeq	r0, r1, r3, rrx
 638:	6d747300 	ldclvs	3, cr7, [r4, #-0]
 63c:	706d3233 	rsbvc	r3, sp, r3, lsr r2
 640:	5f787831 	svcpl	0x00787831
 644:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
 648:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 64c:	74730000 	ldrbtvc	r0, [r3], #-0
 650:	6d32336d 	ldcvs	3, cr3, [r2, #-436]!	; 0xfffffe4c
 654:	78783170 	ldmdavc	r8!, {r4, r5, r6, r8, ip, sp}^
 658:	6970675f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, sp, lr}^
 65c:	00682e6f 	rsbeq	r2, r8, pc, ror #28
 660:	73000002 	movwvc	r0, #2
 664:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
 668:	7831706d 	ldmdavc	r1!, {r0, r2, r3, r5, r6, ip, sp, lr}
 66c:	63725f78 	cmnvs	r2, #120, 30	; 0x1e0
 670:	00682e63 	rsbeq	r2, r8, r3, ror #28
 674:	00000002 	andeq	r0, r0, r2
 678:	6c020500 	cfstr32vs	mvfx0, [r2], {-0}
 67c:	17c0009e 	bfine	r0, lr, (invalid: 1:0)
 680:	d7a1a04d 	strle	sl, [r1, sp, asr #32]!
 684:	d7d8d7d7 			; <UNDEFINED> instruction: 0xd7d8d7d7
 688:	f4dbd7d7 			; <UNDEFINED> instruction: 0xf4dbd7d7
 68c:	d7f4d8d8 	ubfxle	sp, r8, #17, #21
 690:	0200a186 	andeq	sl, r0, #-2147483615	; 0x80000021
 694:	2e060104 	adfcss	f0, f6, f4
 698:	0084bb06 	addeq	fp, r4, r6, lsl #22
 69c:	06010402 	streq	r0, [r1], -r2, lsl #8
 6a0:	68bb062e 	ldmvs	fp!, {r1, r2, r3, r5, r9, sl}
 6a4:	0a036b4f 	beq	db3e8 <_start-0xbff2cc18>
 6a8:	87b83082 	ldrhi	r3, [r8, r2, lsl #1]!
 6ac:	0200696b 	andeq	r6, r0, #1753088	; 0x1ac000
 6b0:	2e060104 	adfcss	f0, f6, f4
 6b4:	2f83bc06 	svccs	0x0083bc06
 6b8:	08696e87 	stmdaeq	r9!, {r0, r1, r2, r7, r9, sl, fp, sp, lr}^
 6bc:	0200d722 	andeq	sp, r0, #8912896	; 0x880000
 6c0:	7a030204 	bvc	c0ed8 <_start-0xbff47128>
 6c4:	040200d6 	streq	r0, [r2], #-214	; 0xffffff2a
 6c8:	06660601 	strbteq	r0, [r6], -r1, lsl #12
 6cc:	4bbb318a 	blmi	feecccfc <__bss_end__+0x3eec20ba>
 6d0:	0006024b 	andeq	r0, r6, fp, asr #4
 6d4:	00540101 	subseq	r0, r4, r1, lsl #2
 6d8:	00020000 	andeq	r0, r2, r0
 6dc:	0000001d 	andeq	r0, r0, sp, lsl r0
 6e0:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
 6e4:	0101000d 	tsteq	r1, sp
 6e8:	00000101 	andeq	r0, r0, r1, lsl #2
 6ec:	00000100 	andeq	r0, r0, r0, lsl #2
 6f0:	616d0001 	cmnvs	sp, r1
 6f4:	632e6e69 			; <UNDEFINED> instruction: 0x632e6e69
 6f8:	00000000 	andeq	r0, r0, r0
 6fc:	02050000 	andeq	r0, r5, #0
 700:	c000a1f8 	strdgt	sl, [r0], -r8
 704:	00678417 	rsbeq	r8, r7, r7, lsl r4
 708:	06030402 	streq	r0, [r3], -r2, lsl #8
 70c:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
 710:	02006601 	andeq	r6, r0, #1048576	; 0x100000
 714:	81060204 	tsthi	r6, r4, lsl #4
 718:	01040200 	mrseq	r0, R12_usr
 71c:	84066606 	strhi	r6, [r6], #-1542	; 0xfffff9fa
 720:	2f2f4b86 	svccs	0x002f4b86
 724:	01040200 	mrseq	r0, R12_usr
 728:	0002022f 	andeq	r0, r2, pc, lsr #4
 72c:	Address 0x0000072c is out of bounds.


Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	00000068 	andeq	r0, r0, r8, rrx
       4:	00000002 	andeq	r0, r0, r2
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	00000000 	andeq	r0, r0, r0
      10:	c0008000 	andgt	r8, r0, r0
      14:	c0008218 	andgt	r8, r0, r8, lsl r2
      18:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
      1c:	74732f74 	ldrbtvc	r2, [r3], #-3956	; 0xfffff08c
      20:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
      24:	682f0053 	stmdavs	pc!, {r0, r1, r4, r6}	; <UNPREDICTABLE>
      28:	2f656d6f 	svccs	0x00656d6f
      2c:	756e696c 	strbvc	r6, [lr, #-2412]!	; 0xfffff694
      30:	61662f78 	smcvs	25336	; 0x62f8
      34:	67697372 			; <UNDEFINED> instruction: 0x67697372
      38:	412f7468 			; <UNDEFINED> instruction: 0x412f7468
      3c:	442f4d52 	strtmi	r4, [pc], #-3410	; 44 <_start-0xc0007fbc>
      40:	31323243 	teqcc	r2, r3, asr #4
      44:	642f3131 	strtvs	r3, [pc], #-305	; 4c <_start-0xc0007fb4>
      48:	37307961 	ldrcc	r7, [r0, -r1, ror #18]!
      4c:	2d34302f 	ldccs	0, cr3, [r4, #-188]!	; 0xffffff44
      50:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
      54:	70757272 	rsbsvc	r7, r5, r2, ror r2
      58:	00632d74 	rsbeq	r2, r3, r4, ror sp
      5c:	20554e47 	subscs	r4, r5, r7, asr #28
      60:	32205341 	eorcc	r5, r0, #67108865	; 0x4000001
      64:	2e38322e 	cdpcs	2, 3, cr3, cr8, cr14, {1}
      68:	80010032 	andhi	r0, r1, r2, lsr r0
      6c:	00000070 	andeq	r0, r0, r0, ror r0
      70:	00140002 	andseq	r0, r4, r2
      74:	01040000 	mrseq	r0, (UNDEF: 4)
      78:	00000097 	muleq	r0, r7, r0
      7c:	c0008218 	andgt	r8, r0, r8, lsl r2
      80:	c00082c8 	andgt	r8, r0, r8, asr #5
      84:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
      88:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
      8c:	5f2f6372 	svcpl	0x002f6372
      90:	646f6d75 	strbtvs	r6, [pc], #-3445	; 98 <_start-0xc0007f68>
      94:	2e336973 			; <UNDEFINED> instruction: 0x2e336973
      98:	682f0053 	stmdavs	pc!, {r0, r1, r4, r6}	; <UNPREDICTABLE>
      9c:	2f656d6f 	svccs	0x00656d6f
      a0:	756e696c 	strbvc	r6, [lr, #-2412]!	; 0xfffff694
      a4:	61662f78 	smcvs	25336	; 0x62f8
      a8:	67697372 			; <UNDEFINED> instruction: 0x67697372
      ac:	412f7468 			; <UNDEFINED> instruction: 0x412f7468
      b0:	442f4d52 	strtmi	r4, [pc], #-3410	; b8 <_start-0xc0007f48>
      b4:	31323243 	teqcc	r2, r3, asr #4
      b8:	642f3131 	strtvs	r3, [pc], #-305	; c0 <_start-0xc0007f40>
      bc:	37307961 	ldrcc	r7, [r0, -r1, ror #18]!
      c0:	2d34302f 	ldccs	0, cr3, [r4, #-188]!	; 0xffffff44
      c4:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
      c8:	70757272 	rsbsvc	r7, r5, r2, ror r2
      cc:	00632d74 	rsbeq	r2, r3, r4, ror sp
      d0:	20554e47 	subscs	r4, r5, r7, asr #28
      d4:	32205341 	eorcc	r5, r0, #67108865	; 0x4000001
      d8:	2e38322e 	cdpcs	2, 3, cr3, cr8, cr14, {1}
      dc:	80010032 	andhi	r0, r1, r2, lsr r0
      e0:	00000070 	andeq	r0, r0, r0, ror r0
      e4:	00280002 	eoreq	r0, r8, r2
      e8:	01040000 	mrseq	r0, (UNDEF: 4)
      ec:	00000107 	andeq	r0, r0, r7, lsl #2
      f0:	c00082c8 	andgt	r8, r0, r8, asr #5
      f4:	c000835c 	andgt	r8, r0, ip, asr r3
      f8:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
      fc:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
     100:	5f2f6372 	svcpl	0x002f6372
     104:	76696475 			; <UNDEFINED> instruction: 0x76696475
     108:	2e336973 			; <UNDEFINED> instruction: 0x2e336973
     10c:	682f0053 	stmdavs	pc!, {r0, r1, r4, r6}	; <UNPREDICTABLE>
     110:	2f656d6f 	svccs	0x00656d6f
     114:	756e696c 	strbvc	r6, [lr, #-2412]!	; 0xfffff694
     118:	61662f78 	smcvs	25336	; 0x62f8
     11c:	67697372 			; <UNDEFINED> instruction: 0x67697372
     120:	412f7468 			; <UNDEFINED> instruction: 0x412f7468
     124:	442f4d52 	strtmi	r4, [pc], #-3410	; 12c <_start-0xc0007ed4>
     128:	31323243 	teqcc	r2, r3, asr #4
     12c:	642f3131 	strtvs	r3, [pc], #-305	; 134 <_start-0xc0007ecc>
     130:	37307961 	ldrcc	r7, [r0, -r1, ror #18]!
     134:	2d34302f 	ldccs	0, cr3, [r4, #-188]!	; 0xffffff44
     138:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     13c:	70757272 	rsbsvc	r7, r5, r2, ror r2
     140:	00632d74 	rsbeq	r2, r3, r4, ror sp
     144:	20554e47 	subscs	r4, r5, r7, asr #28
     148:	32205341 	eorcc	r5, r0, #67108865	; 0x4000001
     14c:	2e38322e 	cdpcs	2, 3, cr3, cr8, cr14, {1}
     150:	80010032 	andhi	r0, r1, r2, lsr r0
     154:	0000047e 	andeq	r0, r0, lr, ror r4
     158:	003c0004 	eorseq	r0, ip, r4
     15c:	01040000 	mrseq	r0, (UNDEF: 4)
     160:	00000052 	andeq	r0, r0, r2, asr r0
     164:	0001030c 	andeq	r0, r1, ip, lsl #6
     168:	00019800 	andeq	r9, r1, r0, lsl #16
     16c:	00835c00 	addeq	r5, r3, r0, lsl #24
     170:	0010b8c0 	andseq	fp, r0, r0, asr #17
     174:	00017000 	andeq	r7, r1, r0
     178:	00390200 	eorseq	r0, r9, r0, lsl #4
     17c:	28030000 	stmdacs	r3, {}	; <UNPREDICTABLE>
     180:	00000030 	andeq	r0, r0, r0, lsr r0
     184:	00070403 	andeq	r0, r7, r3, lsl #8
     188:	40020000 	andmi	r0, r2, r0
     18c:	03000000 	movweq	r0, #0
     190:	00002566 	andeq	r2, r0, r6, ror #10
     194:	00580400 	subseq	r0, r8, r0, lsl #8
     198:	00510000 	subseq	r0, r1, r0
     19c:	51050000 	mrspl	r0, (UNDEF: 5)
     1a0:	ff000000 			; <UNDEFINED> instruction: 0xff000000
     1a4:	07040600 	streq	r0, [r4, -r0, lsl #12]
     1a8:	000000f1 	strdeq	r0, [r0], -r1
     1ac:	de080106 	adflee	f0, f0, f6
     1b0:	07000000 	streq	r0, [r0, -r0]
     1b4:	00000166 	andeq	r0, r0, r6, ror #2
     1b8:	00411101 	subeq	r1, r1, r1, lsl #2
     1bc:	03050000 	movweq	r0, #20480	; 0x5000
     1c0:	c000ab34 	andgt	sl, r0, r4, lsr fp
     1c4:	0001d608 	andeq	sp, r1, r8, lsl #12
     1c8:	017d0200 	cmneq	sp, r0, lsl #4
     1cc:	c00093c8 	andgt	r9, r0, r8, asr #7
     1d0:	0000004c 	andeq	r0, r0, ip, asr #32
     1d4:	00b69c01 	adcseq	r9, r6, r1, lsl #24
     1d8:	66090000 	strvs	r0, [r9], -r0
     1dc:	0200746d 	andeq	r7, r0, #1828716544	; 0x6d000000
     1e0:	00b6017d 	adcseq	r0, r6, sp, ror r1
     1e4:	91020000 	mrsls	r0, (UNDEF: 2)
     1e8:	850b0a70 	strhi	r0, [fp, #-2672]	; 0xfffff590
     1ec:	02000001 	andeq	r0, r0, #1
     1f0:	0036017f 	eorseq	r0, r6, pc, ror r1
     1f4:	91020000 	mrsls	r0, (UNDEF: 2)
     1f8:	016d0b64 	cmneq	sp, r4, ror #22
     1fc:	80020000 	andhi	r0, r2, r0
     200:	0000c801 	andeq	ip, r0, r1, lsl #16
     204:	80910300 	addshi	r0, r1, r0, lsl #6
     208:	040c007f 	streq	r0, [ip], #-127	; 0xffffff81
     20c:	000000c3 	andeq	r0, r0, r3, asr #1
     210:	e7080106 	str	r0, [r8, -r6, lsl #2]
     214:	0d000000 	stceq	0, cr0, [r0, #-0]
     218:	000000bc 	strheq	r0, [r0], -ip
     21c:	0000bc04 	andeq	fp, r0, r4, lsl #24
     220:	0000d800 	andeq	sp, r0, r0, lsl #16
     224:	00510500 	subseq	r0, r1, r0, lsl #10
     228:	00630000 	rsbeq	r0, r3, r0
     22c:	0001d50e 	andeq	sp, r1, lr, lsl #10
     230:	01720200 	cmneq	r2, r0, lsl #4
     234:	0000012e 	andeq	r0, r0, lr, lsr #2
     238:	c000937c 	andgt	r9, r0, ip, ror r3
     23c:	0000004c 	andeq	r0, r0, ip, asr #32
     240:	012e9c01 			; <UNDEFINED> instruction: 0x012e9c01
     244:	62090000 	andvs	r0, r9, #0
     248:	02006675 	andeq	r6, r0, #122683392	; 0x7500000
     24c:	01350172 	teqeq	r5, r2, ror r1
     250:	91020000 	mrsls	r0, (UNDEF: 2)
     254:	6d660960 			; <UNDEFINED> instruction: 0x6d660960
     258:	72020074 	andvc	r0, r2, #116	; 0x74
     25c:	0000b601 	andeq	fp, r0, r1, lsl #12
     260:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     264:	01850b0a 	orreq	r0, r5, sl, lsl #22
     268:	74020000 	strvc	r0, [r2], #-0
     26c:	00003601 	andeq	r3, r0, r1, lsl #12
     270:	64910200 	ldrvs	r0, [r1], #512	; 0x200
     274:	0200690f 	andeq	r6, r0, #245760	; 0x3c000
     278:	012e0175 			; <UNDEFINED> instruction: 0x012e0175
     27c:	91020000 	mrsls	r0, (UNDEF: 2)
     280:	04100068 	ldreq	r0, [r0], #-104	; 0xffffff98
     284:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
     288:	bc040c00 	stclt	12, cr0, [r4], {-0}
     28c:	11000000 	mrsne	r0, (UNDEF: 0)
     290:	000001d4 	ldrdeq	r0, [r0], -r4
     294:	012ebb02 			; <UNDEFINED> instruction: 0x012ebb02
     298:	8ab40000 	bhi	fed002a0 <__bss_end__+0x3ecf565e>
     29c:	08c8c000 	stmiaeq	r8, {lr, pc}^
     2a0:	9c010000 	stcls	0, cr0, [r1], {-0}
     2a4:	00000247 	andeq	r0, r0, r7, asr #4
     2a8:	66756212 			; <UNDEFINED> instruction: 0x66756212
     2ac:	35bb0200 	ldrcc	r0, [fp, #512]!	; 0x200
     2b0:	02000001 	andeq	r0, r0, #1
     2b4:	66124491 			; <UNDEFINED> instruction: 0x66124491
     2b8:	0200746d 	andeq	r7, r0, #1828716544	; 0x6d000000
     2bc:	0000b6bb 			; <UNDEFINED> instruction: 0x0000b6bb
     2c0:	40910200 	addsmi	r0, r1, r0, lsl #4
     2c4:	00018513 	andeq	r8, r1, r3, lsl r5
     2c8:	36bb0200 	ldrtcc	r0, [fp], r0, lsl #4
     2cc:	03000000 	movweq	r0, #0
     2d0:	147fbc91 	ldrbtne	fp, [pc], #-3217	; 2d8 <_start-0xc0007d28>
     2d4:	006e656c 	rsbeq	r6, lr, ip, ror #10
     2d8:	012ebd02 			; <UNDEFINED> instruction: 0x012ebd02
     2dc:	91020000 	mrsls	r0, (UNDEF: 2)
     2e0:	756e1450 	strbvc	r1, [lr, #-1104]!	; 0xfffffbb0
     2e4:	c102006d 	tstgt	r2, sp, rrx
     2e8:	00000247 	andeq	r0, r0, r7, asr #4
     2ec:	14749102 	ldrbtne	r9, [r4], #-258	; 0xfffffefe
     2f0:	c3020069 	movwgt	r0, #8297	; 0x2069
     2f4:	0000012e 	andeq	r0, r0, lr, lsr #2
     2f8:	15709102 	ldrbne	r9, [r0, #-258]!	; 0xfffffefe
     2fc:	000000d9 	ldrdeq	r0, [r0], -r9
     300:	012ec302 			; <UNDEFINED> instruction: 0x012ec302
     304:	91020000 	mrsls	r0, (UNDEF: 2)
     308:	7473146c 	ldrbtvc	r1, [r3], #-1132	; 0xfffffb94
     30c:	c4020072 	strgt	r0, [r2], #-114	; 0xffffff8e
     310:	00000135 	andeq	r0, r0, r5, lsr r1
     314:	14689102 	strbtne	r9, [r8], #-258	; 0xfffffefe
     318:	c5020073 	strgt	r0, [r2, #-115]	; 0xffffff8d
     31c:	000000b6 	strheq	r0, [r0], -r6
     320:	15649102 	strbne	r9, [r4, #-258]!	; 0xfffffefe
     324:	00000117 	andeq	r0, r0, r7, lsl r1
     328:	012ec702 			; <UNDEFINED> instruction: 0x012ec702
     32c:	91020000 	mrsls	r0, (UNDEF: 2)
     330:	01791560 	cmneq	r9, r0, ror #10
     334:	c9020000 	stmdbgt	r2, {}	; <UNPREDICTABLE>
     338:	0000012e 	andeq	r0, r0, lr, lsr #2
     33c:	155c9102 	ldrbne	r9, [ip, #-258]	; 0xfffffefe
     340:	00000048 	andeq	r0, r0, r8, asr #32
     344:	012eca02 			; <UNDEFINED> instruction: 0x012eca02
     348:	91020000 	mrsls	r0, (UNDEF: 2)
     34c:	01221558 			; <UNDEFINED> instruction: 0x01221558
     350:	cc020000 	stcgt	0, cr0, [r2], {-0}
     354:	0000012e 	andeq	r0, r0, lr, lsr #2
     358:	16549102 	ldrbne	r9, [r4], -r2, lsl #2
     35c:	00000142 	andeq	r0, r0, r2, asr #2
     360:	8b0cd602 	blhi	335b70 <_start-0xbfcd2490>
     364:	2417c000 	ldrcs	ip, [r7], #-0
     368:	28c00091 	stmiacs	r0, {r0, r4, r7}^
     36c:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
     370:	0f000002 	svceq	0x00000002
     374:	02007069 	andeq	r7, r0, #105	; 0x69
     378:	024e0134 	subeq	r0, lr, #52, 2
     37c:	91020000 	mrsls	r0, (UNDEF: 2)
     380:	50180048 	andspl	r0, r8, r8, asr #32
     384:	28c00091 	stmiacs	r0, {r0, r4, r7}^
     388:	0f000000 	svceq	0x00000000
     38c:	02007069 	andeq	r7, r0, #105	; 0x69
     390:	025b0137 	subseq	r0, fp, #-1073741811	; 0xc000000d
     394:	91020000 	mrsls	r0, (UNDEF: 2)
     398:	0600004c 	streq	r0, [r0], -ip, asr #32
     39c:	00ec0704 	rsceq	r0, ip, r4, lsl #14
     3a0:	040c0000 	streq	r0, [ip], #-0
     3a4:	00000254 	andeq	r0, r0, r4, asr r2
     3a8:	8a050406 	bhi	1413c8 <_start-0xbfec6c38>
     3ac:	0c000001 	stceq	0, cr0, [r0], {1}
     3b0:	00012e04 	andeq	r2, r1, r4, lsl #28
     3b4:	01491900 	cmpeq	r9, r0, lsl #18
     3b8:	b3020000 	movwlt	r0, #8192	; 0x2000
     3bc:	00000051 	andeq	r0, r0, r1, asr r0
     3c0:	c0008a48 	andgt	r8, r0, r8, asr #20
     3c4:	0000006c 	andeq	r0, r0, ip, rrx
     3c8:	02a29c01 	adceq	r9, r2, #256	; 0x100
     3cc:	73120000 	tstvc	r2, #0
     3d0:	b6b30200 	ldrtlt	r0, [r3], r0, lsl #4
     3d4:	02000000 	andeq	r0, r0, #0
     3d8:	29137491 	ldmdbcs	r3, {r0, r4, r7, sl, ip, sp, lr}
     3dc:	02000000 	andeq	r0, r0, #0
     3e0:	000051b3 			; <UNDEFINED> instruction: 0x000051b3
     3e4:	70910200 	addsvc	r0, r1, r0, lsl #4
     3e8:	00637314 	rsbeq	r7, r3, r4, lsl r3
     3ec:	00b6b502 	adcseq	fp, r6, r2, lsl #10
     3f0:	91020000 	mrsls	r0, (UNDEF: 2)
     3f4:	511a0078 	tstpl	sl, r8, ror r0
     3f8:	02000001 	andeq	r0, r0, #1
     3fc:	0001356e 	andeq	r3, r1, lr, ror #10
     400:	00866400 	addeq	r6, r6, r0, lsl #8
     404:	0003e4c0 	andeq	lr, r3, r0, asr #9
     408:	6f9c0100 	svcvs	0x009c0100
     40c:	12000003 	andne	r0, r0, #3
     410:	00727473 	rsbseq	r7, r2, r3, ror r4
     414:	01356e02 	teqeq	r5, r2, lsl #28
     418:	91030000 	mrsls	r0, (UNDEF: 3)
     41c:	6e127f9c 	mrcvs	15, 0, r7, cr2, cr12, {4}
     420:	02006d75 	andeq	r6, r0, #7488	; 0x1d40
     424:	0002546e 	andeq	r5, r2, lr, ror #8
     428:	98910300 	ldmls	r1, {r8, r9}
     42c:	00d9137f 	sbcseq	r1, r9, pc, ror r3
     430:	6e020000 	cdpvs	0, 0, cr0, cr2, cr0, {0}
     434:	00000051 	andeq	r0, r0, r1, asr r0
     438:	7f949103 	svcvc	0x00949103
     43c:	00011d13 	andeq	r1, r1, r3, lsl sp
     440:	2e6e0200 	cdpcs	2, 6, cr0, cr14, cr0, {0}
     444:	03000001 	movweq	r0, #1
     448:	137f9091 	cmnne	pc, #145	; 0x91
     44c:	00000048 	andeq	r0, r0, r8, asr #32
     450:	012e6e02 			; <UNDEFINED> instruction: 0x012e6e02
     454:	91020000 	mrsls	r0, (UNDEF: 2)
     458:	01681300 	cmneq	r8, r0, lsl #6
     45c:	6e020000 	cdpvs	0, 0, cr0, cr2, cr0, {0}
     460:	0000012e 	andeq	r0, r0, lr, lsr #2
     464:	14049102 	strne	r9, [r4], #-258	; 0xfffffefe
     468:	71020063 	tstvc	r2, r3, rrx
     46c:	000000bc 	strheq	r0, [r0], -ip
     470:	156b9102 	strbne	r9, [fp, #-258]!	; 0xfffffefe
     474:	00000193 	muleq	r0, r3, r1
     478:	00bc7102 	adcseq	r7, ip, r2, lsl #2
     47c:	91020000 	mrsls	r0, (UNDEF: 2)
     480:	6d741477 	cfldrdvs	mvd1, [r4, #-476]!	; 0xfffffe24
     484:	71020070 	tstvc	r2, r0, ror r0
     488:	0000036f 	andeq	r0, r0, pc, ror #6
     48c:	7fa09103 	svcvc	0x00a09103
     490:	00000015 	andeq	r0, r0, r5, lsl r0
     494:	b6720200 	ldrbtlt	r0, [r2], -r0, lsl #4
     498:	02000000 	andeq	r0, r0, #0
     49c:	69147091 	ldmdbvs	r4, {r0, r4, r7, ip, sp, lr}
     4a0:	2e730200 	cdpcs	2, 7, cr0, cr3, cr0, {0}
     4a4:	02000001 	andeq	r0, r0, #1
     4a8:	20186c91 	mulscs	r8, r1, ip
     4ac:	34c00088 	strbcc	r0, [r0], #136	; 0x88
     4b0:	15000000 	strne	r0, [r0, #-0]
     4b4:	000001ce 	andeq	r0, r0, lr, asr #3
     4b8:	012e9502 			; <UNDEFINED> instruction: 0x012e9502
     4bc:	91020000 	mrsls	r0, (UNDEF: 2)
     4c0:	04000064 	streq	r0, [r0], #-100	; 0xffffff9c
     4c4:	000000bc 	strheq	r0, [r0], -ip
     4c8:	0000037f 	andeq	r0, r0, pc, ror r3
     4cc:	00005105 	andeq	r5, r0, r5, lsl #2
     4d0:	1b004100 	blne	108d8 <_start-0xbfff7728>
     4d4:	00000019 	andeq	r0, r0, r9, lsl r0
     4d8:	012e4902 			; <UNDEFINED> instruction: 0x012e4902
     4dc:	85d00000 	ldrbhi	r0, [r0]
     4e0:	0094c000 	addseq	ip, r4, r0
     4e4:	9c010000 	stcls	0, cr0, [r1], {-0}
     4e8:	000003b1 			; <UNDEFINED> instruction: 0x000003b1
     4ec:	02007312 	andeq	r7, r0, #1207959552	; 0x48000000
     4f0:	0003b149 	andeq	fp, r3, r9, asr #2
     4f4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     4f8:	02006914 	andeq	r6, r0, #20, 18	; 0x50000
     4fc:	00012e4b 	andeq	r2, r1, fp, asr #28
     500:	78910200 	ldmvc	r1, {r9}
     504:	b6040c00 	strlt	r0, [r4], -r0, lsl #24
     508:	11000000 	mrsne	r0, (UNDEF: 0)
     50c:	00000158 	andeq	r0, r0, r8, asr r1
     510:	02542102 	subseq	r2, r4, #-2147483648	; 0x80000000
     514:	85640000 	strbhi	r0, [r4, #-0]!
     518:	006cc000 	rsbeq	ip, ip, r0
     51c:	9c010000 	stcls	0, cr0, [r1], {-0}
     520:	000003fa 	strdeq	r0, [r0], -sl
     524:	00706312 	rsbseq	r6, r0, r2, lsl r3
     528:	00b62102 	adcseq	r2, r6, r2, lsl #2
     52c:	91020000 	mrsls	r0, (UNDEF: 2)
     530:	00fe1374 	rscseq	r1, lr, r4, ror r3
     534:	21020000 	mrscs	r0, (UNDEF: 2)
     538:	000003fa 	strdeq	r0, [r0], -sl
     53c:	13709102 	cmnne	r0, #-2147483648	; 0x80000000
     540:	000000d9 	ldrdeq	r0, [r0], -r9
     544:	00512102 	subseq	r2, r1, r2, lsl #2
     548:	91020000 	mrsls	r0, (UNDEF: 2)
     54c:	040c006c 	streq	r0, [ip], #-108	; 0xffffff94
     550:	00000135 	andeq	r0, r0, r5, lsr r1
     554:	00012c11 	andeq	r2, r1, r1, lsl ip
     558:	47060200 	strmi	r0, [r6, -r0, lsl #4]
     55c:	ac000002 	stcge	0, cr0, [r0], {2}
     560:	b8c00083 	stmialt	r0, {r0, r1, r7}^
     564:	01000001 	tsteq	r0, r1
     568:	00045f9c 	muleq	r4, ip, pc	; <UNPREDICTABLE>
     56c:	70631200 	rsbvc	r1, r3, r0, lsl #4
     570:	b6060200 	strlt	r0, [r6], -r0, lsl #4
     574:	02000000 	andeq	r0, r0, #0
     578:	fe136c91 	mrc2	12, 0, r6, cr3, cr1, {4}
     57c:	02000000 	andeq	r0, r0, #0
     580:	0003fa06 	andeq	pc, r3, r6, lsl #20
     584:	68910200 	ldmvs	r1, {r9}
     588:	0000d913 	andeq	sp, r0, r3, lsl r9
     58c:	51060200 	mrspl	r0, LR_usr
     590:	02000000 	andeq	r0, r0, #0
     594:	3b156491 	blcc	5597e0 <_start-0xbfaae820>
     598:	02000001 	andeq	r0, r0, #1
     59c:	00024708 	andeq	r4, r2, r8, lsl #14
     5a0:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     5a4:	00002315 	andeq	r2, r0, r5, lsl r3
     5a8:	47080200 	strmi	r0, [r8, -r0, lsl #4]
     5ac:	02000002 	andeq	r0, r0, #2
     5b0:	1c007091 	stcne	0, cr7, [r0], {145}	; 0x91
     5b4:	0000002f 	andeq	r0, r0, pc, lsr #32
     5b8:	00584401 	subseq	r4, r8, r1, lsl #8
     5bc:	835c0000 	cmphi	ip, #0
     5c0:	0050c000 	subseq	ip, r0, r0
     5c4:	9c010000 	stcls	0, cr0, [r1], {-0}
     5c8:	01006312 	tsteq	r0, r2, lsl r3
     5cc:	00005844 	andeq	r5, r0, r4, asr #16
     5d0:	78910200 	ldmvc	r1, {r9}
     5d4:	02140000 	andseq	r0, r4, #0
     5d8:	00040000 	andeq	r0, r4, r0
     5dc:	000001f8 	strdeq	r0, [r0], -r8
     5e0:	00520104 	subseq	r0, r2, r4, lsl #2
     5e4:	6c0c0000 	stcvs	0, cr0, [ip], {-0}
     5e8:	98000002 	stmdals	r0, {r1}
     5ec:	14000001 	strne	r0, [r0], #-1
     5f0:	dcc00094 	stclle	0, cr0, [r0], {148}	; 0x94
     5f4:	a2000002 	andge	r0, r0, #2
     5f8:	02000003 	andeq	r0, r0, #3
     5fc:	ca040234 	bgt	100ed4 <_start-0xbff0712c>
     600:	03000000 	movweq	r0, #0
     604:	00000212 	andeq	r0, r0, r2, lsl r2
     608:	00d10502 	sbcseq	r0, r1, r2, lsl #10
     60c:	03000000 	movweq	r0, #0
     610:	0000024f 	andeq	r0, r0, pc, asr #4
     614:	00d10602 	sbcseq	r0, r1, r2, lsl #12
     618:	03040000 	movweq	r0, #16384	; 0x4000
     61c:	00000218 	andeq	r0, r0, r8, lsl r2
     620:	00d10702 	sbcseq	r0, r1, r2, lsl #14
     624:	03080000 	movweq	r0, #32768	; 0x8000
     628:	0000020c 	andeq	r0, r0, ip, lsl #4
     62c:	00d10802 	sbcseq	r0, r1, r2, lsl #16
     630:	040c0000 	streq	r0, [ip], #-0
     634:	00524449 	subseq	r4, r2, r9, asr #8
     638:	00d10902 	sbcseq	r0, r1, r2, lsl #18
     63c:	04100000 	ldreq	r0, [r0], #-0
     640:	0052444f 	subseq	r4, r2, pc, asr #8
     644:	00d10a02 	sbcseq	r0, r1, r2, lsl #20
     648:	03140000 	tsteq	r4, #0
     64c:	00000207 	andeq	r0, r0, r7, lsl #4
     650:	00d10b02 	sbcseq	r0, r1, r2, lsl #22
     654:	03180000 	tsteq	r8, #0
     658:	00000243 	andeq	r0, r0, r3, asr #4
     65c:	00d10c02 	sbcseq	r0, r1, r2, lsl #24
     660:	031c0000 	tsteq	ip, #0
     664:	00000256 	andeq	r0, r0, r6, asr r2
     668:	00d10d02 	sbcseq	r0, r1, r2, lsl #26
     66c:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
     670:	00000267 	andeq	r0, r0, r7, ror #4
     674:	00d10e02 	sbcseq	r0, r1, r2, lsl #28
     678:	04240000 	strteq	r0, [r4], #-0
     67c:	00525242 	subseq	r5, r2, r2, asr #4
     680:	00d10f02 	sbcseq	r0, r1, r2, lsl #30
     684:	04280000 	strteq	r0, [r8], #-0
     688:	00736572 	rsbseq	r6, r3, r2, ror r5
     68c:	00d11002 	sbcseq	r1, r1, r2
     690:	032c0000 			; <UNDEFINED> instruction: 0x032c0000
     694:	000001e9 	andeq	r0, r0, r9, ror #3
     698:	00d11102 	sbcseq	r1, r1, r2, lsl #2
     69c:	00300000 	eorseq	r0, r0, r0
     6a0:	f1070405 			; <UNDEFINED> instruction: 0xf1070405
     6a4:	06000000 	streq	r0, [r0], -r0
     6a8:	000000ca 	andeq	r0, r0, sl, asr #1
     6ac:	00023c07 	andeq	r3, r2, r7, lsl #24
     6b0:	25130200 	ldrcs	r0, [r3, #-512]	; 0xfffffe00
     6b4:	02000000 	andeq	r0, r0, #0
     6b8:	7a040330 	bvc	101380 <_start-0xbff06c80>
     6bc:	04000001 	streq	r0, [r0], #-1
     6c0:	00315243 	eorseq	r5, r1, r3, asr #4
     6c4:	00d10503 	sbcseq	r0, r1, r3, lsl #10
     6c8:	04000000 	streq	r0, [r0], #-0
     6cc:	00325243 	eorseq	r5, r2, r3, asr #4
     6d0:	00d10603 	sbcseq	r0, r1, r3, lsl #12
     6d4:	04040000 	streq	r0, [r4], #-0
     6d8:	00335243 	eorseq	r5, r3, r3, asr #4
     6dc:	00d10703 	sbcseq	r0, r1, r3, lsl #14
     6e0:	04080000 	streq	r0, [r8], #-0
     6e4:	00525242 	subseq	r5, r2, r2, asr #4
     6e8:	00d10803 	sbcseq	r0, r1, r3, lsl #16
     6ec:	030c0000 	movweq	r0, #49152	; 0xc000
     6f0:	00000220 	andeq	r0, r0, r0, lsr #4
     6f4:	00d10903 	sbcseq	r0, r1, r3, lsl #18
     6f8:	03100000 	tsteq	r0, #0
     6fc:	00000202 	andeq	r0, r0, r2, lsl #4
     700:	00d10a03 	sbcseq	r0, r1, r3, lsl #20
     704:	04140000 	ldreq	r0, [r4], #-0
     708:	00525152 	subseq	r5, r2, r2, asr r1
     70c:	00d10b03 	sbcseq	r0, r1, r3, lsl #22
     710:	04180000 	ldreq	r0, [r8], #-0
     714:	00525349 	subseq	r5, r2, r9, asr #6
     718:	00d10c03 	sbcseq	r0, r1, r3, lsl #24
     71c:	041c0000 	ldreq	r0, [ip], #-0
     720:	00524349 	subseq	r4, r2, r9, asr #6
     724:	00d10d03 	sbcseq	r0, r1, r3, lsl #26
     728:	04200000 	strteq	r0, [r0], #-0
     72c:	00524452 	subseq	r4, r2, r2, asr r4
     730:	00d10e03 	sbcseq	r0, r1, r3, lsl #28
     734:	04240000 	strteq	r0, [r4], #-0
     738:	00524454 	subseq	r4, r2, r4, asr r4
     73c:	00d10f03 	sbcseq	r0, r1, r3, lsl #30
     740:	03280000 			; <UNDEFINED> instruction: 0x03280000
     744:	00000225 	andeq	r0, r0, r5, lsr #4
     748:	00d11003 	sbcseq	r1, r1, r3
     74c:	002c0000 	eoreq	r0, ip, r0
     750:	00024807 	andeq	r4, r2, r7, lsl #16
     754:	e1110300 	tst	r1, r0, lsl #6
     758:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     75c:	0000025b 	andeq	r0, r0, fp, asr r2
     760:	01ac3001 			; <UNDEFINED> instruction: 0x01ac3001
     764:	96a40000 	strtls	r0, [r4], r0
     768:	004cc000 	subeq	ip, ip, r0
     76c:	9c010000 	stcls	0, cr0, [r1], {-0}
     770:	000001ac 	andeq	r0, r0, ip, lsr #3
     774:	00686309 	rsbeq	r6, r8, r9, lsl #6
     778:	01ac3201 			; <UNDEFINED> instruction: 0x01ac3201
     77c:	91020000 	mrsls	r0, (UNDEF: 2)
     780:	0105007b 	tsteq	r5, fp, ror r0
     784:	0000e708 	andeq	lr, r0, r8, lsl #14
     788:	01ac0a00 			; <UNDEFINED> instruction: 0x01ac0a00
     78c:	f10b0000 			; <UNDEFINED> instruction: 0xf10b0000
     790:	01000001 	tsteq	r0, r1
     794:	00965c2a 	addseq	r5, r6, sl, lsr #24
     798:	000048c0 	andeq	r4, r0, r0, asr #17
     79c:	dc9c0100 	ldfles	f0, [ip], {0}
     7a0:	0c000001 	stceq	0, cr0, [r0], {1}
     7a4:	0000022b 	andeq	r0, r0, fp, lsr #4
     7a8:	01dc2a01 	bicseq	r2, ip, r1, lsl #20
     7ac:	91020000 	mrsls	r0, (UNDEF: 2)
     7b0:	040d0074 	streq	r0, [sp], #-116	; 0xffffff8c
     7b4:	000001b3 			; <UNDEFINED> instruction: 0x000001b3
     7b8:	0001dd0b 	andeq	sp, r1, fp, lsl #26
     7bc:	fc230100 	stc2	1, cr0, [r3], #-0
     7c0:	60c00095 	smullvs	r0, r0, r5, r0	; <UNPREDICTABLE>
     7c4:	01000000 	mrseq	r0, (UNDEF: 0)
     7c8:	0002069c 	muleq	r2, ip, r6
     7cc:	01fd0c00 	mvnseq	r0, r0, lsl #24
     7d0:	23010000 	movwcs	r0, #4096	; 0x1000
     7d4:	000001b3 			; <UNDEFINED> instruction: 0x000001b3
     7d8:	00749102 	rsbseq	r9, r4, r2, lsl #2
     7dc:	0002300e 	andeq	r3, r2, lr
     7e0:	14050100 	strne	r0, [r5], #-256	; 0xffffff00
     7e4:	e8c00094 	stmia	r0, {r2, r4, r7}^
     7e8:	01000001 	tsteq	r0, r1
     7ec:	0406009c 	streq	r0, [r6], #-156	; 0xffffff64
     7f0:	00040000 	andeq	r0, r4, r0
     7f4:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     7f8:	00520104 	subseq	r0, r2, r4, lsl #2
     7fc:	8f0c0000 	svchi	0x000c0000
     800:	98000003 	stmdals	r0, {r0, r1}
     804:	f0000001 			; <UNDEFINED> instruction: 0xf0000001
     808:	a0c00096 	smullge	r0, r0, r6, r0	; <UNPREDICTABLE>
     80c:	4c000001 	stcmi	0, cr0, [r0], {1}
     810:	02000004 	andeq	r0, r0, #4
     814:	3e0402f0 	mcrcc	2, 0, r0, cr4, cr0, {7}
     818:	03000002 	movweq	r0, #2
     81c:	00000334 	andeq	r0, r0, r4, lsr r3
     820:	02450502 	subeq	r0, r5, #8388608	; 0x800000
     824:	03000000 	movweq	r0, #0
     828:	0000028d 	andeq	r0, r0, sp, lsl #5
     82c:	02450602 	subeq	r0, r5, #2097152	; 0x200000
     830:	03040000 	movweq	r0, #16384	; 0x4000
     834:	0000029f 	muleq	r0, pc, r2	; <UNPREDICTABLE>
     838:	02450702 	subeq	r0, r5, #524288	; 0x80000
     83c:	03080000 	movweq	r0, #32768	; 0x8000
     840:	00000380 	andeq	r0, r0, r0, lsl #7
     844:	02450802 	subeq	r0, r5, #131072	; 0x20000
     848:	030c0000 	movweq	r0, #49152	; 0xc000
     84c:	000002ba 			; <UNDEFINED> instruction: 0x000002ba
     850:	02450902 	subeq	r0, r5, #32768	; 0x8000
     854:	03100000 	tsteq	r0, #0
     858:	000003a2 	andeq	r0, r0, r2, lsr #7
     85c:	02450a02 	subeq	r0, r5, #8192	; 0x2000
     860:	03140000 	tsteq	r4, #0
     864:	000003cc 	andeq	r0, r0, ip, asr #7
     868:	025a0b02 	subseq	r0, sl, #2048	; 0x800
     86c:	03180000 	tsteq	r8, #0
     870:	0000033a 	andeq	r0, r0, sl, lsr r3
     874:	02450c02 	subeq	r0, r5, #512	; 0x200
     878:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
     87c:	00000293 	muleq	r0, r3, r2
     880:	02450d02 	subeq	r0, r5, #2, 26	; 0x80
     884:	03240000 			; <UNDEFINED> instruction: 0x03240000
     888:	000002a6 	andeq	r0, r0, r6, lsr #5
     88c:	02450e02 	subeq	r0, r5, #2, 28
     890:	03280000 			; <UNDEFINED> instruction: 0x03280000
     894:	00000385 	andeq	r0, r0, r5, lsl #7
     898:	02450f02 	subeq	r0, r5, #2, 30
     89c:	032c0000 			; <UNDEFINED> instruction: 0x032c0000
     8a0:	000002bf 			; <UNDEFINED> instruction: 0x000002bf
     8a4:	02451002 	subeq	r1, r5, #2
     8a8:	03300000 	teqeq	r0, #0
     8ac:	000003a9 	andeq	r0, r0, r9, lsr #7
     8b0:	02451102 	subeq	r1, r5, #-2147483648	; 0x80000000
     8b4:	03340000 	teqeq	r4, #0
     8b8:	000003d1 	ldrdeq	r0, [r0], -r1
     8bc:	025a1202 	subseq	r1, sl, #536870912	; 0x20000000
     8c0:	03380000 	teqeq	r8, #0
     8c4:	00000340 	andeq	r0, r0, r0, asr #6
     8c8:	02451302 	subeq	r1, r5, #134217728	; 0x8000000
     8cc:	03400000 	movteq	r0, #0
     8d0:	00000299 	muleq	r0, r9, r2
     8d4:	02451402 	subeq	r1, r5, #33554432	; 0x2000000
     8d8:	03440000 	movteq	r0, #16384	; 0x4000
     8dc:	000002ad 	andeq	r0, r0, sp, lsr #5
     8e0:	02451502 	subeq	r1, r5, #8388608	; 0x800000
     8e4:	03480000 	movteq	r0, #32768	; 0x8000
     8e8:	0000038a 	andeq	r0, r0, sl, lsl #7
     8ec:	02451602 	subeq	r1, r5, #2097152	; 0x200000
     8f0:	034c0000 	movteq	r0, #49152	; 0xc000
     8f4:	000002c4 	andeq	r0, r0, r4, asr #5
     8f8:	02451702 	subeq	r1, r5, #524288	; 0x80000
     8fc:	03500000 	cmpeq	r0, #0
     900:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
     904:	02451802 	subeq	r1, r5, #131072	; 0x20000
     908:	03540000 	cmpeq	r4, #0
     90c:	000003d6 	ldrdeq	r0, [r0], -r6
     910:	025a1902 	subseq	r1, sl, #32768	; 0x8000
     914:	03580000 	cmpeq	r8, #0
     918:	000002d7 	ldrdeq	r0, [r0], -r7
     91c:	02451a02 	subeq	r1, r5, #8192	; 0x2000
     920:	03600000 	cmneq	r0, #0
     924:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     928:	02451b02 	subeq	r1, r5, #2048	; 0x800
     92c:	03640000 	cmneq	r4, #0
     930:	000002e7 	andeq	r0, r0, r7, ror #5
     934:	02451c02 	subeq	r1, r5, #512	; 0x200
     938:	03680000 	cmneq	r8, #0
     93c:	000002ef 	andeq	r0, r0, pc, ror #5
     940:	02451d02 	subeq	r1, r5, #2, 26	; 0x80
     944:	036c0000 	cmneq	ip, #0
     948:	000003db 	ldrdeq	r0, [r0], -fp
     94c:	026f1e02 	rsbeq	r1, pc, #2, 28
     950:	03700000 	cmneq	r0, #0
     954:	000002fe 	strdeq	r0, [r0], -lr
     958:	02451f02 	subeq	r1, r5, #2, 30
     95c:	03800000 	orreq	r0, r0, #0
     960:	0000034d 	andeq	r0, r0, sp, asr #6
     964:	02452002 	subeq	r2, r5, #2
     968:	03840000 	orreq	r0, r4, #0
     96c:	000003e0 	andeq	r0, r0, r0, ror #7
     970:	025a2102 	subseq	r2, sl, #-2147483648	; 0x80000000
     974:	03880000 	orreq	r0, r8, #0
     978:	00000305 	andeq	r0, r0, r5, lsl #6
     97c:	02452202 	subeq	r2, r5, #536870912	; 0x20000000
     980:	03900000 	orrseq	r0, r0, #0
     984:	00000354 	andeq	r0, r0, r4, asr r3
     988:	02452302 	subeq	r2, r5, #134217728	; 0x8000000
     98c:	03940000 	orrseq	r0, r4, #0
     990:	000003e5 	andeq	r0, r0, r5, ror #7
     994:	025a2402 	subseq	r2, sl, #33554432	; 0x2000000
     998:	03980000 	orrseq	r0, r8, #0
     99c:	0000030c 	andeq	r0, r0, ip, lsl #6
     9a0:	02452502 	subeq	r2, r5, #8388608	; 0x800000
     9a4:	03a00000 	moveq	r0, #0
     9a8:	0000035b 	andeq	r0, r0, fp, asr r3
     9ac:	02452602 	subeq	r2, r5, #2097152	; 0x200000
     9b0:	03a40000 			; <UNDEFINED> instruction: 0x03a40000
     9b4:	000003ea 	andeq	r0, r0, sl, ror #7
     9b8:	02842702 	addeq	r2, r4, #524288	; 0x80000
     9bc:	03a80000 			; <UNDEFINED> instruction: 0x03a80000
     9c0:	000003b7 			; <UNDEFINED> instruction: 0x000003b7
     9c4:	02452802 	subeq	r2, r5, #131072	; 0x20000
     9c8:	03c00000 	biceq	r0, r0, #0
     9cc:	00000318 	andeq	r0, r0, r8, lsl r3
     9d0:	02452902 	subeq	r2, r5, #32768	; 0x8000
     9d4:	03c40000 	biceq	r0, r4, #0
     9d8:	0000027e 	andeq	r0, r0, lr, ror r2
     9dc:	025a2a02 	subseq	r2, sl, #8192	; 0x2000
     9e0:	03c80000 	biceq	r0, r8, #0
     9e4:	000003be 			; <UNDEFINED> instruction: 0x000003be
     9e8:	02452b02 	subeq	r2, r5, #2048	; 0x800
     9ec:	03d00000 	bicseq	r0, r0, #0
     9f0:	0000031f 	andeq	r0, r0, pc, lsl r3
     9f4:	02452c02 	subeq	r2, r5, #512	; 0x200
     9f8:	03d40000 	bicseq	r0, r4, #0
     9fc:	00000283 	andeq	r0, r0, r3, lsl #5
     a00:	025a2d02 	subseq	r2, sl, #2, 26	; 0x80
     a04:	03d80000 	bicseq	r0, r8, #0
     a08:	000003c5 	andeq	r0, r0, r5, asr #7
     a0c:	02452e02 	subeq	r2, r5, #2, 28
     a10:	03e00000 	mvneq	r0, #0
     a14:	00000326 	andeq	r0, r0, r6, lsr #6
     a18:	02452f02 	subeq	r2, r5, #2, 30
     a1c:	03e40000 	mvneq	r0, #0
     a20:	0000039c 	muleq	r0, ip, r3
     a24:	025a3002 	subseq	r3, sl, #2
     a28:	00e80000 	rsceq	r0, r8, r0
     a2c:	f1070404 			; <UNDEFINED> instruction: 0xf1070404
     a30:	05000000 	streq	r0, [r0, #-0]
     a34:	0000023e 	andeq	r0, r0, lr, lsr r2
     a38:	00024506 	andeq	r4, r2, r6, lsl #10
     a3c:	00025a00 	andeq	r5, r2, r0, lsl #20
     a40:	023e0700 	eorseq	r0, lr, #0, 14
     a44:	00010000 	andeq	r0, r1, r0
     a48:	00024a05 	andeq	r4, r2, r5, lsl #20
     a4c:	02450600 	subeq	r0, r5, #0, 12
     a50:	026f0000 	rsbeq	r0, pc, #0
     a54:	3e070000 	cdpcc	0, 0, cr0, cr7, cr0, {0}
     a58:	03000002 	movweq	r0, #2
     a5c:	025f0500 	subseq	r0, pc, #0, 10
     a60:	45060000 	strmi	r0, [r6, #-0]
     a64:	84000002 	strhi	r0, [r0], #-2
     a68:	07000002 	streq	r0, [r0, -r2]
     a6c:	0000023e 	andeq	r0, r0, lr, lsr r2
     a70:	74050005 	strvc	r0, [r5], #-5
     a74:	08000002 	stmdaeq	r0, {r1}
     a78:	0000032d 	andeq	r0, r0, sp, lsr #6
     a7c:	00253102 	eoreq	r3, r5, r2, lsl #2
     a80:	04090000 	streq	r0, [r9], #-0
     a84:	84230310 	strthi	r0, [r3], #-784	; 0xfffffcf0
     a88:	03000003 	movweq	r0, #3
     a8c:	0000036e 	andeq	r0, r0, lr, ror #6
     a90:	02452403 	subeq	r2, r5, #50331648	; 0x3000000
     a94:	0a000000 	beq	a9c <_start-0xc0007564>
     a98:	00524d50 	subseq	r4, r2, r0, asr sp
     a9c:	02452503 	subeq	r2, r5, #12582912	; 0xc00000
     aa0:	0a040000 	beq	100aa8 <_start-0xbff07558>
     aa4:	00525242 	subseq	r5, r2, r2, asr #4
     aa8:	02452603 	subeq	r2, r5, #3145728	; 0x300000
     aac:	0a080000 	beq	200ab4 <_start-0xbfe0754c>
     ab0:	00524149 	subseq	r4, r2, r9, asr #2
     ab4:	02452703 	subeq	r2, r5, #786432	; 0xc0000
     ab8:	030c0000 	movweq	r0, #49152	; 0xc000
     abc:	000002b5 			; <UNDEFINED> instruction: 0x000002b5
     ac0:	02452803 	subeq	r2, r5, #196608	; 0x30000
     ac4:	0a100000 	beq	400acc <_start-0xbfc07534>
     ac8:	00525052 	subseq	r5, r2, r2, asr r0
     acc:	02452903 	subeq	r2, r5, #49152	; 0xc000
     ad0:	03140000 	tsteq	r4, #0
     ad4:	00000363 	andeq	r0, r0, r3, ror #6
     ad8:	02452a03 	subeq	r2, r5, #12288	; 0x3000
     adc:	03180000 	tsteq	r8, #0
     ae0:	00000288 	andeq	r0, r0, r8, lsl #5
     ae4:	02452b03 	subeq	r2, r5, #3072	; 0xc00
     ae8:	031c0000 	tsteq	ip, #0
     aec:	00000369 	andeq	r0, r0, r9, ror #6
     af0:	02452c03 	subeq	r2, r5, #768	; 0x300
     af4:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
     af8:	000002b4 			; <UNDEFINED> instruction: 0x000002b4
     afc:	02452d03 	subeq	r2, r5, #3, 26	; 0xc0
     b00:	03240000 			; <UNDEFINED> instruction: 0x03240000
     b04:	00000362 	andeq	r0, r0, r2, ror #6
     b08:	02452e03 	subeq	r2, r5, #3, 28	; 0x30
     b0c:	03280000 			; <UNDEFINED> instruction: 0x03280000
     b10:	000003cc 	andeq	r0, r0, ip, asr #7
     b14:	03942f03 	orrseq	r2, r4, #3, 30
     b18:	032c0000 			; <UNDEFINED> instruction: 0x032c0000
     b1c:	000002f9 	strdeq	r0, [r0], -r9
     b20:	02453003 	subeq	r3, r5, #3
     b24:	03d00000 	bicseq	r0, r0, #0
     b28:	000003d1 	ldrdeq	r0, [r0], -r1
     b2c:	03a93103 			; <UNDEFINED> instruction: 0x03a93103
     b30:	03d40000 	bicseq	r0, r4, #0
     b34:	000002f7 	strdeq	r0, [r0], -r7
     b38:	02453203 	subeq	r3, r5, #805306368	; 0x30000000
     b3c:	03e00000 	mvneq	r0, #0
     b40:	000003d6 	ldrdeq	r0, [r0], -r6
     b44:	02843303 	addeq	r3, r4, #201326592	; 0xc000000
     b48:	03e40000 	mvneq	r0, #0
     b4c:	00000313 	andeq	r0, r0, r3, lsl r3
     b50:	02453403 	subeq	r3, r5, #50331648	; 0x3000000
     b54:	0bfc0000 	bleq	fff00b5c <__bss_end__+0x3fef5f1a>
     b58:	000003db 	ldrdeq	r0, [r0], -fp
     b5c:	03bf3503 			; <UNDEFINED> instruction: 0x03bf3503
     b60:	01000000 	mrseq	r0, (UNDEF: 0)
     b64:	0003460b 	andeq	r4, r3, fp, lsl #12
     b68:	45360300 	ldrmi	r0, [r6, #-768]!	; 0xfffffd00
     b6c:	00000002 	andeq	r0, r0, r2
     b70:	45060010 	strmi	r0, [r6, #-16]
     b74:	94000002 	strls	r0, [r0], #-2
     b78:	07000003 	streq	r0, [r0, -r3]
     b7c:	0000023e 	andeq	r0, r0, lr, lsr r2
     b80:	84050028 	strhi	r0, [r5], #-40	; 0xffffffd8
     b84:	06000003 	streq	r0, [r0], -r3
     b88:	00000245 	andeq	r0, r0, r5, asr #4
     b8c:	000003a9 	andeq	r0, r0, r9, lsr #7
     b90:	00023e07 	andeq	r3, r2, r7, lsl #28
     b94:	05000200 	streq	r0, [r0, #-512]	; 0xfffffe00
     b98:	00000399 	muleq	r0, r9, r3
     b9c:	00024506 	andeq	r4, r2, r6, lsl #10
     ba0:	0003bf00 	andeq	fp, r3, r0, lsl #30
     ba4:	023e0c00 	eorseq	r0, lr, #0, 24
     ba8:	03bf0000 			; <UNDEFINED> instruction: 0x03bf0000
     bac:	03ae0500 			; <UNDEFINED> instruction: 0x03ae0500
     bb0:	d0080000 	andle	r0, r8, r0
     bb4:	03000002 	movweq	r0, #2
     bb8:	00029438 	andeq	r9, r2, r8, lsr r4
     bbc:	00690d00 	rsbeq	r0, r9, r0, lsl #26
     bc0:	023e0301 	eorseq	r0, lr, #67108864	; 0x4000000
     bc4:	03050000 	movweq	r0, #20480	; 0x5000
     bc8:	c000ac34 	andgt	sl, r0, r4, lsr ip
     bcc:	0002c90e 	andeq	ip, r2, lr, lsl #18
     bd0:	f0040100 			; <UNDEFINED> instruction: 0xf0040100
     bd4:	a0c00096 	smullge	r0, r0, r6, r0	; <UNPREDICTABLE>
     bd8:	01000001 	tsteq	r0, r1
     bdc:	0004029c 	muleq	r4, ip, r2
     be0:	03730f00 	cmneq	r3, #0, 30
     be4:	07010000 	streq	r0, [r1, -r0]
     be8:	00000402 	andeq	r0, r0, r2, lsl #8
     bec:	00749102 	rsbseq	r9, r4, r2, lsl #2
     bf0:	69050410 	stmdbvs	r5, {r4, sl}
     bf4:	0000746e 	andeq	r7, r0, lr, ror #8
     bf8:	0000022d 	andeq	r0, r0, sp, lsr #4
     bfc:	03aa0004 			; <UNDEFINED> instruction: 0x03aa0004
     c00:	01040000 	mrseq	r0, (UNDEF: 4)
     c04:	00000052 	andeq	r0, r0, r2, asr r0
     c08:	0004660c 	andeq	r6, r4, ip, lsl #12
     c0c:	00019800 	andeq	r9, r1, r0, lsl #16
     c10:	00989000 	addseq	r9, r8, r0
     c14:	0001e4c0 	andeq	lr, r1, r0, asr #9
     c18:	0004d800 	andeq	sp, r4, r0, lsl #16
     c1c:	02180200 	andseq	r0, r8, #0, 4
     c20:	00007605 	andeq	r7, r0, r5, lsl #12
     c24:	02120300 	andseq	r0, r2, #0, 6
     c28:	07020000 	streq	r0, [r2, -r0]
     c2c:	0000007d 	andeq	r0, r0, sp, ror r0
     c30:	024f0300 	subeq	r0, pc, #0, 6
     c34:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     c38:	0000007d 	andeq	r0, r0, sp, ror r0
     c3c:	02180304 	andseq	r0, r8, #4, 6	; 0x10000000
     c40:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
     c44:	0000007d 	andeq	r0, r0, sp, ror r0
     c48:	020c0308 	andeq	r0, ip, #8, 6	; 0x20000000
     c4c:	0a020000 	beq	80c54 <_start-0xbff873ac>
     c50:	0000007d 	andeq	r0, r0, sp, ror r0
     c54:	4449040c 	strbmi	r0, [r9], #-1036	; 0xfffffbf4
     c58:	0b020052 	bleq	80da8 <_start-0xbff87258>
     c5c:	0000007d 	andeq	r0, r0, sp, ror r0
     c60:	444f0410 	strbmi	r0, [pc], #-1040	; c68 <_start-0xc0007398>
     c64:	0c020052 	stceq	0, cr0, [r2], {82}	; 0x52
     c68:	0000007d 	andeq	r0, r0, sp, ror r0
     c6c:	04050014 	streq	r0, [r5], #-20	; 0xffffffec
     c70:	0000f107 	andeq	pc, r0, r7, lsl #2
     c74:	00760600 	rsbseq	r0, r6, r0, lsl #12
     c78:	3c070000 	stccc	0, cr0, [r7], {-0}
     c7c:	02000002 	andeq	r0, r0, #2
     c80:	0000250d 	andeq	r2, r0, sp, lsl #10
     c84:	04070800 	streq	r0, [r7], #-2048	; 0xfffff800
     c88:	00000076 	andeq	r0, r0, r6, ror r0
     c8c:	00b33702 	adcseq	r3, r3, r2, lsl #14
     c90:	4a090000 	bmi	240c98 <_start-0xbfdc7368>
     c94:	00000004 	andeq	r0, r0, r4
     c98:	0004ad09 	andeq	sl, r4, r9, lsl #26
     c9c:	410a0100 	mrsmi	r0, (UNDEF: 26)
     ca0:	0200464c 	andeq	r4, r0, #76, 12	; 0x4c00000
     ca4:	0004cb09 	andeq	ip, r4, r9, lsl #22
     ca8:	07000300 	streq	r0, [r0, -r0, lsl #6]
     cac:	000003ef 	andeq	r0, r0, pc, ror #7
     cb0:	008d3c02 	addeq	r3, sp, r2, lsl #24
     cb4:	07080000 	streq	r0, [r8, -r0]
     cb8:	00007604 	andeq	r7, r0, r4, lsl #12
     cbc:	d6410200 	strble	r0, [r1], -r0, lsl #4
     cc0:	0a000000 	beq	cc8 <_start-0xc0007338>
     cc4:	00005050 	andeq	r5, r0, r0, asr r0
     cc8:	00444f0a 	subeq	r4, r4, sl, lsl #30
     ccc:	94070001 	strls	r0, [r7], #-1
     cd0:	02000004 	andeq	r0, r0, #4
     cd4:	0000be44 	andeq	fp, r0, r4, asr #28
     cd8:	04070800 	streq	r0, [r7], #-2048	; 0xfffff800
     cdc:	00000076 	andeq	r0, r0, r6, ror r0
     ce0:	01074802 	tsteq	r7, r2, lsl #16
     ce4:	4c0a0000 	stcmi	0, cr0, [sl], {-0}
     ce8:	0000574f 	andeq	r5, r0, pc, asr #14
     cec:	00043409 	andeq	r3, r4, r9, lsl #8
     cf0:	c6090100 	strgt	r0, [r9], -r0, lsl #2
     cf4:	02000004 	andeq	r0, r0, #4
     cf8:	0004c109 	andeq	ip, r4, r9, lsl #2
     cfc:	07000300 	streq	r0, [r0, -r0, lsl #6]
     d00:	00000471 	andeq	r0, r0, r1, ror r4
     d04:	00e14e02 	rsceq	r4, r1, r2, lsl #28
     d08:	07080000 	streq	r0, [r8, -r0]
     d0c:	00007604 	andeq	r7, r0, r4, lsl #12
     d10:	30520200 	subscc	r0, r2, r0, lsl #4
     d14:	09000001 	stmdbeq	r0, {r0}
     d18:	00000413 	andeq	r0, r0, r3, lsl r4
     d1c:	55500a00 	ldrbpl	r0, [r0, #-2560]	; 0xfffff600
     d20:	500a0100 	andpl	r0, sl, r0, lsl #2
     d24:	00020044 	andeq	r0, r2, r4, asr #32
     d28:	0004b407 	andeq	fp, r4, r7, lsl #8
     d2c:	12570200 	subsne	r0, r7, #0, 4
     d30:	08000001 	stmdaeq	r0, {r0}
     d34:	00760407 	rsbseq	r0, r6, r7, lsl #8
     d38:	5b020000 	blpl	80d40 <_start-0xbff872c0>
     d3c:	00000155 	andeq	r0, r0, r5, asr r1
     d40:	00041b09 	andeq	r1, r4, r9, lsl #22
     d44:	02090000 	andeq	r0, r9, #0
     d48:	01000004 	tsteq	r0, r4
     d4c:	04a20700 	strteq	r0, [r2], #1792	; 0x700
     d50:	5f020000 	svcpl	0x00020000
     d54:	0000013b 	andeq	r0, r0, fp, lsr r1
     d58:	62021002 	andvs	r1, r2, #2
     d5c:	00000199 	muleq	r0, r9, r1
     d60:	0003fc03 	andeq	pc, r3, r3, lsl #24
     d64:	b3640200 	cmnlt	r4, #0, 4
     d68:	00000000 	andeq	r0, r0, r0
     d6c:	00045003 	andeq	r5, r4, r3
     d70:	d6650200 	strbtle	r0, [r5], -r0, lsl #4
     d74:	04000000 	streq	r0, [r0], #-0
     d78:	00043b03 	andeq	r3, r4, r3, lsl #22
     d7c:	07660200 	strbeq	r0, [r6, -r0, lsl #4]!
     d80:	08000001 	stmdaeq	r0, {r0}
     d84:	00048003 	andeq	r8, r4, r3
     d88:	30670200 	rsbcc	r0, r7, r0, lsl #4
     d8c:	0c000001 	stceq	0, cr0, [r0], {1}
     d90:	04280700 	strteq	r0, [r8], #-1792	; 0xfffff900
     d94:	68020000 	stmdavs	r2, {}	; <UNPREDICTABLE>
     d98:	00000160 	andeq	r0, r0, r0, ror #2
     d9c:	0004570b 	andeq	r5, r4, fp, lsl #14
     da0:	ec1a0100 	ldfs	f0, [sl], {-0}
     da4:	88c00099 	stmiahi	r0, {r0, r3, r4, r7}^
     da8:	01000000 	mrseq	r0, (UNDEF: 0)
     dac:	0001e49c 	muleq	r1, ip, r4
     db0:	040d0c00 	streq	r0, [sp], #-3072	; 0xfffff400
     db4:	1a010000 	bne	40dbc <_start-0xbffc7244>
     db8:	000001e4 	andeq	r0, r0, r4, ror #3
     dbc:	0d789102 	ldfeqp	f1, [r8, #-8]!
     dc0:	006e6970 	rsbeq	r6, lr, r0, ror r9
     dc4:	00761a01 	rsbseq	r1, r6, r1, lsl #20
     dc8:	91020000 	mrsls	r0, (UNDEF: 2)
     dcc:	04430c74 	strbeq	r0, [r3], #-3188	; 0xfffff38c
     dd0:	1a010000 	bne	40dd8 <_start-0xbffc7228>
     dd4:	00000155 	andeq	r0, r0, r5, asr r1
     dd8:	00709102 	rsbseq	r9, r0, r2, lsl #2
     ddc:	0082040e 	addeq	r0, r2, lr, lsl #8
     de0:	860b0000 	strhi	r0, [fp], -r0
     de4:	01000004 	tsteq	r0, r4
     de8:	00989003 	addseq	r9, r8, r3
     dec:	00015cc0 	andeq	r5, r1, r0, asr #25
     df0:	2a9c0100 	bcs	fe7011f8 <__bss_end__+0x3e6f65b6>
     df4:	0c000002 	stceq	0, cr0, [r0], {2}
     df8:	0000040d 	andeq	r0, r0, sp, lsl #8
     dfc:	01e40301 	mvneq	r0, r1, lsl #6
     e00:	91020000 	mrsls	r0, (UNDEF: 2)
     e04:	69700d78 	ldmdbvs	r0!, {r3, r4, r5, r6, r8, sl, fp}^
     e08:	0301006e 	movweq	r0, #4206	; 0x106e
     e0c:	00000076 	andeq	r0, r0, r6, ror r0
     e10:	0c749102 	ldfeqp	f1, [r4], #-8
     e14:	00001129 	andeq	r1, r0, r9, lsr #2
     e18:	022a0301 	eoreq	r0, sl, #67108864	; 0x4000000
     e1c:	91020000 	mrsls	r0, (UNDEF: 2)
     e20:	040e0070 	streq	r0, [lr], #-112	; 0xffffff90
     e24:	00000199 	muleq	r0, r9, r1
     e28:	00141900 	andseq	r1, r4, r0, lsl #18
     e2c:	6c000400 	cfstrsvs	mvf0, [r0], {-0}
     e30:	04000004 	streq	r0, [r0], #-4
     e34:	00005201 	andeq	r5, r0, r1, lsl #4
     e38:	08a90c00 	stmiaeq	r9!, {sl, fp}
     e3c:	01980000 	orrseq	r0, r8, r0
     e40:	9a740000 	bls	1d00e48 <_start-0xbe3071b8>
     e44:	03f8c000 	mvnseq	ip, #0
     e48:	053c0000 	ldreq	r0, [ip, #-0]!
     e4c:	f0020000 			; <UNDEFINED> instruction: 0xf0020000
     e50:	023e0402 	eorseq	r0, lr, #33554432	; 0x2000000
     e54:	34030000 	strcc	r0, [r3], #-0
     e58:	02000003 	andeq	r0, r0, #3
     e5c:	00024505 	andeq	r4, r2, r5, lsl #10
     e60:	8d030000 	stchi	0, cr0, [r3, #-0]
     e64:	02000002 	andeq	r0, r0, #2
     e68:	00024506 	andeq	r4, r2, r6, lsl #10
     e6c:	9f030400 	svcls	0x00030400
     e70:	02000002 	andeq	r0, r0, #2
     e74:	00024507 	andeq	r4, r2, r7, lsl #10
     e78:	80030800 	andhi	r0, r3, r0, lsl #16
     e7c:	02000003 	andeq	r0, r0, #3
     e80:	00024508 	andeq	r4, r2, r8, lsl #10
     e84:	ba030c00 	blt	c3e8c <_start-0xbff44174>
     e88:	02000002 	andeq	r0, r0, #2
     e8c:	00024509 	andeq	r4, r2, r9, lsl #10
     e90:	a2031000 	andge	r1, r3, #0
     e94:	02000003 	andeq	r0, r0, #3
     e98:	0002450a 	andeq	r4, r2, sl, lsl #10
     e9c:	cc031400 	cfstrsgt	mvf1, [r3], {-0}
     ea0:	02000003 	andeq	r0, r0, #3
     ea4:	00025a0b 	andeq	r5, r2, fp, lsl #20
     ea8:	3a031800 	bcc	c6eb0 <_start-0xbff41150>
     eac:	02000003 	andeq	r0, r0, #3
     eb0:	0002450c 	andeq	r4, r2, ip, lsl #10
     eb4:	93032000 	movwls	r2, #12288	; 0x3000
     eb8:	02000002 	andeq	r0, r0, #2
     ebc:	0002450d 	andeq	r4, r2, sp, lsl #10
     ec0:	a6032400 	strge	r2, [r3], -r0, lsl #8
     ec4:	02000002 	andeq	r0, r0, #2
     ec8:	0002450e 	andeq	r4, r2, lr, lsl #10
     ecc:	85032800 	strhi	r2, [r3, #-2048]	; 0xfffff800
     ed0:	02000003 	andeq	r0, r0, #3
     ed4:	0002450f 	andeq	r4, r2, pc, lsl #10
     ed8:	bf032c00 	svclt	0x00032c00
     edc:	02000002 	andeq	r0, r0, #2
     ee0:	00024510 	andeq	r4, r2, r0, lsl r5
     ee4:	a9033000 	stmdbge	r3, {ip, sp}
     ee8:	02000003 	andeq	r0, r0, #3
     eec:	00024511 	andeq	r4, r2, r1, lsl r5
     ef0:	d1033400 	tstle	r3, r0, lsl #8
     ef4:	02000003 	andeq	r0, r0, #3
     ef8:	00025a12 	andeq	r5, r2, r2, lsl sl
     efc:	40033800 	andmi	r3, r3, r0, lsl #16
     f00:	02000003 	andeq	r0, r0, #3
     f04:	00024513 	andeq	r4, r2, r3, lsl r5
     f08:	99034000 	stmdbls	r3, {lr}
     f0c:	02000002 	andeq	r0, r0, #2
     f10:	00024514 	andeq	r4, r2, r4, lsl r5
     f14:	ad034400 	cfstrsge	mvf4, [r3, #-0]
     f18:	02000002 	andeq	r0, r0, #2
     f1c:	00024515 	andeq	r4, r2, r5, lsl r5
     f20:	8a034800 	bhi	d2f28 <_start-0xbff350d8>
     f24:	02000003 	andeq	r0, r0, #3
     f28:	00024516 	andeq	r4, r2, r6, lsl r5
     f2c:	c4034c00 	strgt	r4, [r3], #-3072	; 0xfffff400
     f30:	02000002 	andeq	r0, r0, #2
     f34:	00024517 	andeq	r4, r2, r7, lsl r5
     f38:	b0035000 	andlt	r5, r3, r0
     f3c:	02000003 	andeq	r0, r0, #3
     f40:	00024518 	andeq	r4, r2, r8, lsl r5
     f44:	d6035400 	strle	r5, [r3], -r0, lsl #8
     f48:	02000003 	andeq	r0, r0, #3
     f4c:	00025a19 	andeq	r5, r2, r9, lsl sl
     f50:	d7035800 	strle	r5, [r3, -r0, lsl #16]
     f54:	02000002 	andeq	r0, r0, #2
     f58:	0002451a 	andeq	r4, r2, sl, lsl r5
     f5c:	df036000 	svcle	0x00036000
     f60:	02000002 	andeq	r0, r0, #2
     f64:	0002451b 	andeq	r4, r2, fp, lsl r5
     f68:	e7036400 	str	r6, [r3, -r0, lsl #8]
     f6c:	02000002 	andeq	r0, r0, #2
     f70:	0002451c 	andeq	r4, r2, ip, lsl r5
     f74:	ef036800 	svc	0x00036800
     f78:	02000002 	andeq	r0, r0, #2
     f7c:	0002451d 	andeq	r4, r2, sp, lsl r5
     f80:	db036c00 	blle	dbf88 <_start-0xbff2c078>
     f84:	02000003 	andeq	r0, r0, #3
     f88:	00026f1e 	andeq	r6, r2, lr, lsl pc
     f8c:	fe037000 	cdp2	0, 0, cr7, cr3, cr0, {0}
     f90:	02000002 	andeq	r0, r0, #2
     f94:	0002451f 	andeq	r4, r2, pc, lsl r5
     f98:	4d038000 	stcmi	0, cr8, [r3, #-0]
     f9c:	02000003 	andeq	r0, r0, #3
     fa0:	00024520 	andeq	r4, r2, r0, lsr #10
     fa4:	e0038400 	and	r8, r3, r0, lsl #8
     fa8:	02000003 	andeq	r0, r0, #3
     fac:	00025a21 	andeq	r5, r2, r1, lsr #20
     fb0:	05038800 	streq	r8, [r3, #-2048]	; 0xfffff800
     fb4:	02000003 	andeq	r0, r0, #3
     fb8:	00024522 	andeq	r4, r2, r2, lsr #10
     fbc:	54039000 	strpl	r9, [r3], #-0
     fc0:	02000003 	andeq	r0, r0, #3
     fc4:	00024523 	andeq	r4, r2, r3, lsr #10
     fc8:	e5039400 	str	r9, [r3, #-1024]	; 0xfffffc00
     fcc:	02000003 	andeq	r0, r0, #3
     fd0:	00025a24 	andeq	r5, r2, r4, lsr #20
     fd4:	0c039800 	stceq	8, cr9, [r3], {-0}
     fd8:	02000003 	andeq	r0, r0, #3
     fdc:	00024525 	andeq	r4, r2, r5, lsr #10
     fe0:	5b03a000 	blpl	e8fe8 <_start-0xbff1f018>
     fe4:	02000003 	andeq	r0, r0, #3
     fe8:	00024526 	andeq	r4, r2, r6, lsr #10
     fec:	ea03a400 	b	e9ff4 <_start-0xbff1e00c>
     ff0:	02000003 	andeq	r0, r0, #3
     ff4:	00028427 	andeq	r8, r2, r7, lsr #8
     ff8:	b703a800 	strlt	sl, [r3, -r0, lsl #16]
     ffc:	02000003 	andeq	r0, r0, #3
    1000:	00024528 	andeq	r4, r2, r8, lsr #10
    1004:	1803c000 	stmdane	r3, {lr, pc}
    1008:	02000003 	andeq	r0, r0, #3
    100c:	00024529 	andeq	r4, r2, r9, lsr #10
    1010:	7e03c400 	cfcpysvc	mvf12, mvf3
    1014:	02000002 	andeq	r0, r0, #2
    1018:	00025a2a 	andeq	r5, r2, sl, lsr #20
    101c:	be03c800 	cdplt	8, 0, cr12, cr3, cr0, {0}
    1020:	02000003 	andeq	r0, r0, #3
    1024:	0002452b 	andeq	r4, r2, fp, lsr #10
    1028:	1f03d000 	svcne	0x0003d000
    102c:	02000003 	andeq	r0, r0, #3
    1030:	0002452c 	andeq	r4, r2, ip, lsr #10
    1034:	8303d400 	movwhi	sp, #13312	; 0x3400
    1038:	02000002 	andeq	r0, r0, #2
    103c:	00025a2d 	andeq	r5, r2, sp, lsr #20
    1040:	c503d800 	strgt	sp, [r3, #-2048]	; 0xfffff800
    1044:	02000003 	andeq	r0, r0, #3
    1048:	0002452e 	andeq	r4, r2, lr, lsr #10
    104c:	2603e000 	strcs	lr, [r3], -r0
    1050:	02000003 	andeq	r0, r0, #3
    1054:	0002452f 	andeq	r4, r2, pc, lsr #10
    1058:	9c03e400 	cfstrsls	mvf14, [r3], {-0}
    105c:	02000003 	andeq	r0, r0, #3
    1060:	00025a30 	andeq	r5, r2, r0, lsr sl
    1064:	0400e800 	streq	lr, [r0], #-2048	; 0xfffff800
    1068:	00f10704 	rscseq	r0, r1, r4, lsl #14
    106c:	3e050000 	cdpcc	0, 0, cr0, cr5, cr0, {0}
    1070:	06000002 	streq	r0, [r0], -r2
    1074:	00000245 	andeq	r0, r0, r5, asr #4
    1078:	0000025a 	andeq	r0, r0, sl, asr r2
    107c:	00023e07 	andeq	r3, r2, r7, lsl #28
    1080:	05000100 	streq	r0, [r0, #-256]	; 0xffffff00
    1084:	0000024a 	andeq	r0, r0, sl, asr #4
    1088:	00024506 	andeq	r4, r2, r6, lsl #10
    108c:	00026f00 	andeq	r6, r2, r0, lsl #30
    1090:	023e0700 	eorseq	r0, lr, #0, 14
    1094:	00030000 	andeq	r0, r3, r0
    1098:	00025f05 	andeq	r5, r2, r5, lsl #30
    109c:	02450600 	subeq	r0, r5, #0, 12
    10a0:	02840000 	addeq	r0, r4, #0
    10a4:	3e070000 	cdpcc	0, 0, cr0, cr7, cr0, {0}
    10a8:	05000002 	streq	r0, [r0, #-2]
    10ac:	02740500 	rsbseq	r0, r4, #0, 10
    10b0:	2d080000 	stccs	0, cr0, [r8, #-0]
    10b4:	02000003 	andeq	r0, r0, #3
    10b8:	00002531 	andeq	r2, r0, r1, lsr r5
    10bc:	0d000900 	vstreq.16	s0, [r0, #-0]	; <UNPREDICTABLE>
    10c0:	03d00503 	bicseq	r0, r0, #12582912	; 0xc00000
    10c4:	6e030000 	cdpvs	0, 0, cr0, cr3, cr0, {0}
    10c8:	03000003 	movweq	r0, #3
    10cc:	00024506 	andeq	r4, r2, r6, lsl #10
    10d0:	50030000 	andpl	r0, r3, r0
    10d4:	03000002 	movweq	r0, #2
    10d8:	00024507 	andeq	r4, r2, r7, lsl #10
    10dc:	13030400 	movwne	r0, #13312	; 0x3400
    10e0:	03000003 	movweq	r0, #3
    10e4:	00024508 	andeq	r4, r2, r8, lsl #10
    10e8:	cc030800 	stcgt	8, cr0, [r3], {-0}
    10ec:	03000003 	movweq	r0, #3
    10f0:	0003e009 	andeq	lr, r3, r9
    10f4:	be030c00 	cdplt	12, 0, cr0, cr3, cr0, {0}
    10f8:	03000008 	movweq	r0, #8
    10fc:	0003f50a 	andeq	pc, r3, sl, lsl #10
    1100:	d1038000 	mrsle	r8, (UNDEF: 3)
    1104:	03000003 	movweq	r0, #3
    1108:	00040a0b 	andeq	r0, r4, fp, lsl #20
    110c:	c60aa400 	strgt	sl, [sl], -r0, lsl #8
    1110:	0300000b 	movweq	r0, #11
    1114:	0003f50c 	andeq	pc, r3, ip, lsl #10
    1118:	0a010000 	beq	41120 <_start-0xbffc6ee0>
    111c:	000003d6 	ldrdeq	r0, [r0], -r6
    1120:	040a0d03 	streq	r0, [sl], #-3331	; 0xfffff2fd
    1124:	01240000 			; <UNDEFINED> instruction: 0x01240000
    1128:	000edd0a 	andeq	sp, lr, sl, lsl #26
    112c:	f50e0300 			; <UNDEFINED> instruction: 0xf50e0300
    1130:	80000003 	andhi	r0, r0, r3
    1134:	03db0a01 	bicseq	r0, fp, #4096	; 0x1000
    1138:	0f030000 	svceq	0x00030000
    113c:	0000040a 	andeq	r0, r0, sl, lsl #8
    1140:	580a01a4 	stmdapl	sl, {r2, r5, r7, r8}
    1144:	0300000e 	movweq	r0, #14
    1148:	0003f510 	andeq	pc, r3, r0, lsl r5	; <UNPREDICTABLE>
    114c:	0a020000 	beq	81154 <_start-0xbff86eac>
    1150:	000003e0 	andeq	r0, r0, r0, ror #7
    1154:	040a1103 	streq	r1, [sl], #-259	; 0xfffffefd
    1158:	02240000 	eoreq	r0, r4, #0
    115c:	000ed50a 	andeq	sp, lr, sl, lsl #10
    1160:	f5120300 			; <UNDEFINED> instruction: 0xf5120300
    1164:	80000003 	andhi	r0, r0, r3
    1168:	03e50a02 	mvneq	r0, #8192	; 0x2000
    116c:	13030000 	movwne	r0, #12288	; 0x3000
    1170:	0000040a 	andeq	r0, r0, sl, lsl #8
    1174:	6e0a02a4 	cdpvs	2, 0, cr0, cr10, cr4, {5}
    1178:	03000008 	movweq	r0, #8
    117c:	0003f514 	andeq	pc, r3, r4, lsl r5	; <UNPREDICTABLE>
    1180:	0a030000 	beq	c1188 <_start-0xbff46e78>
    1184:	000003ea 	andeq	r0, r0, sl, ror #7
    1188:	040a1503 	streq	r1, [sl], #-1283	; 0xfffffafd
    118c:	03240000 			; <UNDEFINED> instruction: 0x03240000
    1190:	000f730a 	andeq	r7, pc, sl, lsl #6
    1194:	f5160300 			; <UNDEFINED> instruction: 0xf5160300
    1198:	80000003 	andhi	r0, r0, r3
    119c:	027e0a03 	rsbseq	r0, lr, #12288	; 0x3000
    11a0:	17030000 	strne	r0, [r3, -r0]
    11a4:	0000040a 	andeq	r0, r0, sl, lsl #8
    11a8:	3d0a03a4 	stccc	3, cr0, [sl, #-656]	; 0xfffffd70
    11ac:	0300000e 	movweq	r0, #14
    11b0:	00041f18 	andeq	r1, r4, r8, lsl pc
    11b4:	0a040000 	beq	1011bc <_start-0xbff06e44>
    11b8:	00000283 	andeq	r0, r0, r3, lsl #5
    11bc:	04341903 	ldrteq	r1, [r4], #-2307	; 0xfffff6fd
    11c0:	05200000 	streq	r0, [r0, #-0]!
    11c4:	000f3a0a 	andeq	r3, pc, sl, lsl #20
    11c8:	1f1a0300 	svcne	0x001a0300
    11cc:	00000004 	andeq	r0, r0, r4
    11d0:	039c0a08 	orrseq	r0, ip, #8, 20	; 0x8000
    11d4:	1b030000 	blne	c11dc <_start-0xbff46e24>
    11d8:	00000434 	andeq	r0, r0, r4, lsr r4
    11dc:	280a0920 	stmdacs	sl, {r5, r8, fp}
    11e0:	0300000f 	movweq	r0, #15
    11e4:	0004491c 	andeq	r4, r4, ip, lsl r9
    11e8:	0a0c0000 	beq	3011f0 <_start-0xbfd06e10>
    11ec:	0000101d 	andeq	r1, r0, sp, lsl r0
    11f0:	045e1d03 	ldrbeq	r1, [lr], #-3331	; 0xfffff2fd
    11f4:	0c480000 	mareq	acc0, r0, r8
    11f8:	02450600 	subeq	r0, r5, #0, 12
    11fc:	03e00000 	mvneq	r0, #0
    1200:	3e070000 	cdpcc	0, 0, cr0, cr7, cr0, {0}
    1204:	1c000002 	stcne	0, cr0, [r0], {2}
    1208:	03d00500 	bicseq	r0, r0, #0, 10
    120c:	45060000 	strmi	r0, [r6, #-0]
    1210:	f5000002 			; <UNDEFINED> instruction: 0xf5000002
    1214:	07000003 	streq	r0, [r0, -r3]
    1218:	0000023e 	andeq	r0, r0, lr, lsr r2
    121c:	e5050008 	str	r0, [r5, #-8]
    1220:	06000003 	streq	r0, [r0], -r3
    1224:	00000245 	andeq	r0, r0, r5, asr #4
    1228:	0000040a 	andeq	r0, r0, sl, lsl #8
    122c:	00023e07 	andeq	r3, r2, r7, lsl #28
    1230:	05001600 	streq	r1, [r0, #-1536]	; 0xfffffa00
    1234:	000003fa 	strdeq	r0, [r0], -sl
    1238:	00024506 	andeq	r4, r2, r6, lsl #10
    123c:	00041f00 	andeq	r1, r4, r0, lsl #30
    1240:	023e0700 	eorseq	r0, lr, #0, 14
    1244:	00470000 	subeq	r0, r7, r0
    1248:	00040f05 	andeq	r0, r4, r5, lsl #30
    124c:	02450600 	subeq	r0, r5, #0, 12
    1250:	04340000 	ldrteq	r0, [r4], #-0
    1254:	3e070000 	cdpcc	0, 0, cr0, cr7, cr0, {0}
    1258:	b7000002 	strlt	r0, [r0, -r2]
    125c:	04240500 	strteq	r0, [r4], #-1280	; 0xfffffb00
    1260:	45060000 	strmi	r0, [r6, #-0]
    1264:	49000002 	stmdbmi	r0, {r1}
    1268:	07000004 	streq	r0, [r0, -r4]
    126c:	0000023e 	andeq	r0, r0, lr, lsr r2
    1270:	39050011 	stmdbcc	r5, {r0, r4}
    1274:	06000004 	streq	r0, [r0], -r4
    1278:	00000245 	andeq	r0, r0, r5, asr #4
    127c:	0000045e 	andeq	r0, r0, lr, asr r4
    1280:	00023e07 	andeq	r3, r2, r7, lsl #28
    1284:	05002d00 	streq	r2, [r0, #-3328]	; 0xfffff300
    1288:	0000044e 	andeq	r0, r0, lr, asr #8
    128c:	00057608 	andeq	r7, r5, r8, lsl #12
    1290:	941f0300 	ldrls	r0, [pc], #-768	; 1298 <_start-0xc0006d68>
    1294:	09000002 	stmdbeq	r0, {r1}
    1298:	23031004 	movwcs	r1, #12292	; 0x3004
    129c:	0000055e 	andeq	r0, r0, lr, asr r5
    12a0:	00036e03 	andeq	r6, r3, r3, lsl #28
    12a4:	45240300 	strmi	r0, [r4, #-768]!	; 0xfffffd00
    12a8:	00000002 	andeq	r0, r0, r2
    12ac:	524d500b 	subpl	r5, sp, #11
    12b0:	45250300 	strmi	r0, [r5, #-768]!	; 0xfffffd00
    12b4:	04000002 	streq	r0, [r0], #-2
    12b8:	5252420b 	subspl	r4, r2, #-1342177280	; 0xb0000000
    12bc:	45260300 	strmi	r0, [r6, #-768]!	; 0xfffffd00
    12c0:	08000002 	stmdaeq	r0, {r1}
    12c4:	5241490b 	subpl	r4, r1, #180224	; 0x2c000
    12c8:	45270300 	strmi	r0, [r7, #-768]!	; 0xfffffd00
    12cc:	0c000002 	stceq	0, cr0, [r0], {2}
    12d0:	0002b503 	andeq	fp, r2, r3, lsl #10
    12d4:	45280300 	strmi	r0, [r8, #-768]!	; 0xfffffd00
    12d8:	10000002 	andne	r0, r0, r2
    12dc:	5250520b 	subspl	r5, r0, #-1342177280	; 0xb0000000
    12e0:	45290300 	strmi	r0, [r9, #-768]!	; 0xfffffd00
    12e4:	14000002 	strne	r0, [r0], #-2
    12e8:	00036303 	andeq	r6, r3, r3, lsl #6
    12ec:	452a0300 	strmi	r0, [sl, #-768]!	; 0xfffffd00
    12f0:	18000002 	stmdane	r0, {r1}
    12f4:	00028803 	andeq	r8, r2, r3, lsl #16
    12f8:	452b0300 	strmi	r0, [fp, #-768]!	; 0xfffffd00
    12fc:	1c000002 	stcne	0, cr0, [r0], {2}
    1300:	00036903 	andeq	r6, r3, r3, lsl #18
    1304:	452c0300 	strmi	r0, [ip, #-768]!	; 0xfffffd00
    1308:	20000002 	andcs	r0, r0, r2
    130c:	0002b403 	andeq	fp, r2, r3, lsl #8
    1310:	452d0300 	strmi	r0, [sp, #-768]!	; 0xfffffd00
    1314:	24000002 	strcs	r0, [r0], #-2
    1318:	00036203 	andeq	r6, r3, r3, lsl #4
    131c:	452e0300 	strmi	r0, [lr, #-768]!	; 0xfffffd00
    1320:	28000002 	stmdacs	r0, {r1}
    1324:	0003cc03 	andeq	ip, r3, r3, lsl #24
    1328:	6e2f0300 	cdpvs	3, 2, cr0, cr15, cr0, {0}
    132c:	2c000005 	stccs	0, cr0, [r0], {5}
    1330:	0002f903 	andeq	pc, r2, r3, lsl #18
    1334:	45300300 	ldrmi	r0, [r0, #-768]!	; 0xfffffd00
    1338:	d0000002 	andle	r0, r0, r2
    133c:	0003d103 	andeq	sp, r3, r3, lsl #2
    1340:	83310300 	teqhi	r1, #0, 6
    1344:	d4000005 	strle	r0, [r0], #-5
    1348:	0002f703 	andeq	pc, r2, r3, lsl #14
    134c:	45320300 	ldrmi	r0, [r2, #-768]!	; 0xfffffd00
    1350:	e0000002 	and	r0, r0, r2
    1354:	0003d603 	andeq	sp, r3, r3, lsl #12
    1358:	84330300 	ldrthi	r0, [r3], #-768	; 0xfffffd00
    135c:	e4000002 	str	r0, [r0], #-2
    1360:	00031303 	andeq	r1, r3, r3, lsl #6
    1364:	45340300 	ldrmi	r0, [r4, #-768]!	; 0xfffffd00
    1368:	fc000002 	stc2	0, cr0, [r0], {2}
    136c:	0003db0a 	andeq	sp, r3, sl, lsl #22
    1370:	99350300 	ldmdbls	r5!, {r8, r9}
    1374:	00000005 	andeq	r0, r0, r5
    1378:	03460a01 	movteq	r0, #27137	; 0x6a01
    137c:	36030000 	strcc	r0, [r3], -r0
    1380:	00000245 	andeq	r0, r0, r5, asr #4
    1384:	06001000 	streq	r1, [r0], -r0
    1388:	00000245 	andeq	r0, r0, r5, asr #4
    138c:	0000056e 	andeq	r0, r0, lr, ror #10
    1390:	00023e07 	andeq	r3, r2, r7, lsl #28
    1394:	05002800 	streq	r2, [r0, #-2048]	; 0xfffff800
    1398:	0000055e 	andeq	r0, r0, lr, asr r5
    139c:	00024506 	andeq	r4, r2, r6, lsl #10
    13a0:	00058300 	andeq	r8, r5, r0, lsl #6
    13a4:	023e0700 	eorseq	r0, lr, #0, 14
    13a8:	00020000 	andeq	r0, r2, r0
    13ac:	00057305 	andeq	r7, r5, r5, lsl #6
    13b0:	02450600 	subeq	r0, r5, #0, 12
    13b4:	05990000 	ldreq	r0, [r9]
    13b8:	3e0c0000 	cdpcc	0, 0, cr0, cr12, cr0, {0}
    13bc:	bf000002 	svclt	0x00000002
    13c0:	88050003 	stmdahi	r5, {r0, r1}
    13c4:	08000005 	stmdaeq	r0, {r0, r2}
    13c8:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    13cc:	046e3803 	strbteq	r3, [lr], #-2051	; 0xfffff7fd
    13d0:	00090000 	andeq	r0, r9, r0
    13d4:	5b040410 	blpl	10241c <_start-0xbff05be4>
    13d8:	03000012 	movweq	r0, #18
    13dc:	0000102d 	andeq	r1, r0, sp, lsr #32
    13e0:	02450504 	subeq	r0, r5, #4, 10	; 0x1000000
    13e4:	03000000 	movweq	r0, #0
    13e8:	000006c9 	andeq	r0, r0, r9, asr #13
    13ec:	025a0604 	subseq	r0, sl, #4, 12	; 0x400000
    13f0:	03040000 	movweq	r0, #16384	; 0x4000
    13f4:	00000780 	andeq	r0, r0, r0, lsl #15
    13f8:	02450704 	subeq	r0, r5, #4, 14	; 0x100000
    13fc:	030c0000 	movweq	r0, #49152	; 0xc000
    1400:	00000aa3 	andeq	r0, r0, r3, lsr #21
    1404:	02450804 	subeq	r0, r5, #4, 16	; 0x40000
    1408:	03100000 	tsteq	r0, #0
    140c:	000006ce 	andeq	r0, r0, lr, asr #13
    1410:	126b0904 	rsbne	r0, fp, #4, 18	; 0x10000
    1414:	03140000 	tsteq	r4, #0
    1418:	00000936 	andeq	r0, r0, r6, lsr r9
    141c:	02450a04 	subeq	r0, r5, #4, 20	; 0x4000
    1420:	03180000 	tsteq	r8, #0
    1424:	00000f26 	andeq	r0, r0, r6, lsr #30
    1428:	02450b04 	subeq	r0, r5, #4, 22	; 0x1000
    142c:	031c0000 	tsteq	ip, #0
    1430:	000008fd 	strdeq	r0, [r0], -sp
    1434:	02450c04 	subeq	r0, r5, #4, 24	; 0x400
    1438:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
    143c:	00000ff2 	strdeq	r0, [r0], -r2
    1440:	02450d04 	subeq	r0, r5, #4, 26	; 0x100
    1444:	03240000 			; <UNDEFINED> instruction: 0x03240000
    1448:	000006b5 			; <UNDEFINED> instruction: 0x000006b5
    144c:	02450e04 	subeq	r0, r5, #4, 28	; 0x40
    1450:	03280000 			; <UNDEFINED> instruction: 0x03280000
    1454:	00000c8f 	andeq	r0, r0, pc, lsl #25
    1458:	02450f04 	subeq	r0, r5, #4, 30
    145c:	032c0000 			; <UNDEFINED> instruction: 0x032c0000
    1460:	00000528 	andeq	r0, r0, r8, lsr #10
    1464:	02451004 	subeq	r1, r5, #4
    1468:	03300000 	teqeq	r0, #0
    146c:	000006d3 	ldrdeq	r0, [r0], -r3
    1470:	025a1104 	subseq	r1, sl, #4, 2
    1474:	03340000 	teqeq	r4, #0
    1478:	0000092d 	andeq	r0, r0, sp, lsr #18
    147c:	02451204 	subeq	r1, r5, #4, 4	; 0x40000000
    1480:	033c0000 	teqeq	ip, #0
    1484:	00000d95 	muleq	r0, r5, sp
    1488:	02451304 	subeq	r1, r5, #4, 6	; 0x10000000
    148c:	03400000 	movteq	r0, #0
    1490:	00000adb 	ldrdeq	r0, [r0], -fp
    1494:	02451404 	subeq	r1, r5, #4, 8	; 0x4000000
    1498:	03440000 	movteq	r0, #16384	; 0x4000
    149c:	00000719 	andeq	r0, r0, r9, lsl r7
    14a0:	02451504 	subeq	r1, r5, #4, 10	; 0x1000000
    14a4:	03480000 	movteq	r0, #32768	; 0x8000
    14a8:	000006d8 	ldrdeq	r0, [r0], -r8
    14ac:	12801604 	addne	r1, r0, #4, 12	; 0x400000
    14b0:	034c0000 	movteq	r0, #49152	; 0xc000
    14b4:	0000100c 	andeq	r1, r0, ip
    14b8:	02451704 	subeq	r1, r5, #4, 14	; 0x100000
    14bc:	03800000 	orreq	r0, r0, #0
    14c0:	00000a1d 	andeq	r0, r0, sp, lsl sl
    14c4:	02451804 	subeq	r1, r5, #4, 16	; 0x40000
    14c8:	03840000 	orreq	r0, r4, #0
    14cc:	00000a27 	andeq	r0, r0, r7, lsr #20
    14d0:	02451904 	subeq	r1, r5, #4, 18	; 0x10000
    14d4:	03880000 	orreq	r0, r8, #0
    14d8:	000006bf 			; <UNDEFINED> instruction: 0x000006bf
    14dc:	02451a04 	subeq	r1, r5, #4, 20	; 0x4000
    14e0:	038c0000 	orreq	r0, ip, #0
    14e4:	00000894 	muleq	r0, r4, r8
    14e8:	02451b04 	subeq	r1, r5, #4, 22	; 0x1000
    14ec:	03900000 	orrseq	r0, r0, #0
    14f0:	00000e1c 	andeq	r0, r0, ip, lsl lr
    14f4:	02451c04 	subeq	r1, r5, #4, 24	; 0x400
    14f8:	03940000 	orrseq	r0, r4, #0
    14fc:	0000062c 	andeq	r0, r0, ip, lsr #12
    1500:	02451d04 	subeq	r1, r5, #4, 26	; 0x100
    1504:	03980000 	orrseq	r0, r8, #0
    1508:	00000bd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    150c:	02451e04 	subeq	r1, r5, #4, 28	; 0x40
    1510:	039c0000 	orrseq	r0, ip, #0
    1514:	0000083e 	andeq	r0, r0, lr, lsr r8
    1518:	02451f04 	subeq	r1, r5, #4, 30
    151c:	03a00000 	moveq	r0, #0
    1520:	00001099 	muleq	r0, r9, r0
    1524:	02452004 	subeq	r2, r5, #4
    1528:	03a40000 			; <UNDEFINED> instruction: 0x03a40000
    152c:	000006dd 	ldrdeq	r0, [r0], -sp
    1530:	02842104 	addeq	r2, r4, #4, 2
    1534:	03a80000 			; <UNDEFINED> instruction: 0x03a80000
    1538:	00000fce 	andeq	r0, r0, lr, asr #31
    153c:	02452204 	subeq	r2, r5, #4, 4	; 0x40000000
    1540:	03c00000 	biceq	r0, r0, #0
    1544:	00000659 	andeq	r0, r0, r9, asr r6
    1548:	02452304 	subeq	r2, r5, #4, 6	; 0x10000000
    154c:	03c40000 	biceq	r0, r4, #0
    1550:	00000607 	andeq	r0, r0, r7, lsl #12
    1554:	02452404 	subeq	r2, r5, #4, 8	; 0x4000000
    1558:	03c80000 	biceq	r0, r8, #0
    155c:	00000fb8 			; <UNDEFINED> instruction: 0x00000fb8
    1560:	02452504 	subeq	r2, r5, #4, 10	; 0x1000000
    1564:	03cc0000 	biceq	r0, ip, #0
    1568:	00000ca1 	andeq	r0, r0, r1, lsr #25
    156c:	02452604 	subeq	r2, r5, #4, 12	; 0x400000
    1570:	03d00000 	bicseq	r0, r0, #0
    1574:	00000ae3 	andeq	r0, r0, r3, ror #21
    1578:	02452704 	subeq	r2, r5, #4, 14	; 0x100000
    157c:	03d40000 	bicseq	r0, r4, #0
    1580:	00000c98 	muleq	r0, r8, ip
    1584:	02452804 	subeq	r2, r5, #4, 16	; 0x40000
    1588:	03d80000 	bicseq	r0, r8, #0
    158c:	000006e2 	andeq	r0, r0, r2, ror #13
    1590:	03f52904 	mvnseq	r2, #4, 18	; 0x10000
    1594:	0adc0000 	beq	ff70159c <__bss_end__+0x3f6f695a>
    1598:	00000560 	andeq	r0, r0, r0, ror #10
    159c:	02452a04 	subeq	r2, r5, #4, 20	; 0x4000
    15a0:	01000000 	mrseq	r0, (UNDEF: 0)
    15a4:	000c3f0a 	andeq	r3, ip, sl, lsl #30
    15a8:	452b0400 	strmi	r0, [fp, #-1024]!	; 0xfffffc00
    15ac:	04000002 	streq	r0, [r0], #-2
    15b0:	0f2e0a01 	svceq	0x002e0a01
    15b4:	2c040000 	stccs	0, cr0, [r4], {-0}
    15b8:	00000245 	andeq	r0, r0, r5, asr #4
    15bc:	810a0108 	tsthi	sl, r8, lsl #2
    15c0:	0400000d 	streq	r0, [r0], #-13
    15c4:	0002452d 	andeq	r4, r2, sp, lsr #10
    15c8:	0a010c00 	beq	445d0 <_start-0xbffc3a30>
    15cc:	00000cfc 	strdeq	r0, [r0], -ip
    15d0:	02452e04 	subeq	r2, r5, #4, 28	; 0x40
    15d4:	01100000 	tsteq	r0, r0
    15d8:	000e7e0a 	andeq	r7, lr, sl, lsl #28
    15dc:	452f0400 	strmi	r0, [pc, #-1024]!	; 11e4 <_start-0xc0006e1c>
    15e0:	14000002 	strne	r0, [r0], #-2
    15e4:	06e70a01 	strbteq	r0, [r7], r1, lsl #20
    15e8:	30040000 	andcc	r0, r4, r0
    15ec:	00001295 	muleq	r0, r5, r2
    15f0:	a70a0118 	smladge	sl, r8, r1, r0
    15f4:	0400000f 	streq	r0, [r0], #-15
    15f8:	00024531 	andeq	r4, r2, r1, lsr r5
    15fc:	0a014000 	beq	51604 <_start-0xbffb69fc>
    1600:	00000bb7 			; <UNDEFINED> instruction: 0x00000bb7
    1604:	02453204 	subeq	r3, r5, #4, 4	; 0x40000000
    1608:	01440000 	mrseq	r0, (UNDEF: 68)
    160c:	0006ec0a 	andeq	lr, r6, sl, lsl #24
    1610:	aa330400 	bge	cc2618 <_start-0xbf3459e8>
    1614:	48000012 	stmdami	r0, {r1, r4}
    1618:	10670a01 	rsbne	r0, r7, r1, lsl #20
    161c:	34040000 	strcc	r0, [r4], #-0
    1620:	00000245 	andeq	r0, r0, r5, asr #4
    1624:	6a0a0180 	bvs	281c2c <_start-0xbfd863d4>
    1628:	04000005 	streq	r0, [r0], #-5
    162c:	00024535 	andeq	r4, r2, r5, lsr r5
    1630:	0a018400 	beq	62638 <_start-0xbffa59c8>
    1634:	00000d07 	andeq	r0, r0, r7, lsl #26
    1638:	02453604 	subeq	r3, r5, #4, 12	; 0x400000
    163c:	01880000 	orreq	r0, r8, r0
    1640:	000fac0a 	andeq	sl, pc, sl, lsl #24
    1644:	45370400 	ldrmi	r0, [r7, #-1024]!	; 0xfffffc00
    1648:	8c000002 	stchi	0, cr0, [r0], {2}
    164c:	09660a01 	stmdbeq	r6!, {r0, r9, fp}^
    1650:	38040000 	stmdacc	r4, {}	; <UNPREDICTABLE>
    1654:	00000245 	andeq	r0, r0, r5, asr #4
    1658:	4d0a0190 	stfmis	f0, [sl, #-576]	; 0xfffffdc0
    165c:	04000006 	streq	r0, [r0], #-6
    1660:	00024539 	andeq	r4, r2, r9, lsr r5
    1664:	0a019400 	beq	6666c <_start-0xbffa1994>
    1668:	00000cf0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    166c:	02453a04 	subeq	r3, r5, #4, 20	; 0x4000
    1670:	01980000 	orrseq	r0, r8, r0
    1674:	000a410a 	andeq	r4, sl, sl, lsl #2
    1678:	453b0400 	ldrmi	r0, [fp, #-1024]!	; 0xfffffc00
    167c:	9c000002 	stcls	0, cr0, [r0], {2}
    1680:	06830a01 	streq	r0, [r3], r1, lsl #20
    1684:	3c040000 	stccc	0, cr0, [r4], {-0}
    1688:	00000245 	andeq	r0, r0, r5, asr #4
    168c:	3f0a01a0 	svccc	0x000a01a0
    1690:	0400000a 	streq	r0, [r0], #-10
    1694:	0002453d 	andeq	r4, r2, sp, lsr r5
    1698:	0a01a400 	beq	6a6a0 <_start-0xbff9d960>
    169c:	000006f1 	strdeq	r0, [r0], -r1
    16a0:	12bf3e04 	adcsne	r3, pc, #4, 28	; 0x40
    16a4:	01a80000 			; <UNDEFINED> instruction: 0x01a80000
    16a8:	0008090a 	andeq	r0, r8, sl, lsl #18
    16ac:	453f0400 	ldrmi	r0, [pc, #-1024]!	; 12b4 <_start-0xc0006d4c>
    16b0:	00000002 	andeq	r0, r0, r2
    16b4:	0b0c0a02 	bleq	303ec4 <_start-0xbfd0413c>
    16b8:	40040000 	andmi	r0, r4, r0
    16bc:	00000245 	andeq	r0, r0, r5, asr #4
    16c0:	e70a0204 	str	r0, [sl, -r4, lsl #4]
    16c4:	0400000e 	streq	r0, [r0], #-14
    16c8:	00024541 	andeq	r4, r2, r1, asr #10
    16cc:	0a020800 	beq	836d4 <_start-0xbff8492c>
    16d0:	000005d2 	ldrdeq	r0, [r0], -r2
    16d4:	02454204 	subeq	r4, r5, #4, 4	; 0x40000000
    16d8:	020c0000 	andeq	r0, ip, #0
    16dc:	0005000a 	andeq	r0, r5, sl
    16e0:	45430400 	strbmi	r0, [r3, #-1024]	; 0xfffffc00
    16e4:	10000002 	andne	r0, r0, r2
    16e8:	0f4a0a02 	svceq	0x004a0a02
    16ec:	44040000 	strmi	r0, [r4], #-0
    16f0:	00000245 	andeq	r0, r0, r5, asr #4
    16f4:	130a0214 	movwne	r0, #41492	; 0xa214
    16f8:	04000006 	streq	r0, [r0], #-6
    16fc:	00024545 	andeq	r4, r2, r5, asr #10
    1700:	0a021800 	beq	87708 <_start-0xbff808f8>
    1704:	000008c6 	andeq	r0, r0, r6, asr #17
    1708:	02454604 	subeq	r4, r5, #4, 12	; 0x400000
    170c:	021c0000 	andseq	r0, ip, #0
    1710:	000dee0a 	andeq	lr, sp, sl, lsl #28
    1714:	45470400 	strbmi	r0, [r7, #-1024]	; 0xfffffc00
    1718:	20000002 	andcs	r0, r0, r2
    171c:	04d20a02 	ldrbeq	r0, [r2], #2562	; 0xa02
    1720:	48040000 	stmdami	r4, {}	; <UNPREDICTABLE>
    1724:	00000245 	andeq	r0, r0, r5, asr #4
    1728:	170a0224 	strne	r0, [sl, -r4, lsr #4]
    172c:	04000008 	streq	r0, [r0], #-8
    1730:	0012bf49 	andseq	fp, r2, r9, asr #30
    1734:	0a022800 	beq	8b73c <_start-0xbff7c8c4>
    1738:	0000063f 	andeq	r0, r0, pc, lsr r6
    173c:	02454a04 	subeq	r4, r5, #4, 20	; 0x4000
    1740:	02800000 	addeq	r0, r0, #0
    1744:	0009170a 	andeq	r1, r9, sl, lsl #14
    1748:	454b0400 	strbmi	r0, [fp, #-1024]	; 0xfffffc00
    174c:	84000002 	strhi	r0, [r0], #-2
    1750:	0d310a02 	vldmdbeq	r1!, {s0-s1}
    1754:	4c040000 	stcmi	0, cr0, [r4], {-0}
    1758:	00000245 	andeq	r0, r0, r5, asr #4
    175c:	da0a0288 	ble	282184 <_start-0xbfd85e7c>
    1760:	0400000f 	streq	r0, [r0], #-15
    1764:	0002454d 	andeq	r4, r2, sp, asr #10
    1768:	0a028c00 	beq	a4770 <_start-0xbff63890>
    176c:	00000a6b 	andeq	r0, r0, fp, ror #20
    1770:	02454e04 	subeq	r4, r5, #4, 28	; 0x40
    1774:	02900000 	addseq	r0, r0, #0
    1778:	000dd00a 	andeq	sp, sp, sl
    177c:	454f0400 	strbmi	r0, [pc, #-1024]	; 1384 <_start-0xc0006c7c>
    1780:	94000002 	strls	r0, [r0], #-2
    1784:	10ca0a02 	sbcne	r0, sl, r2, lsl #20
    1788:	50040000 	andpl	r0, r4, r0
    178c:	00000245 	andeq	r0, r0, r5, asr #4
    1790:	020a0298 	andeq	r0, sl, #152, 4	; 0x80000009
    1794:	04000007 	streq	r0, [r0], #-7
    1798:	00024551 	andeq	r4, r2, r1, asr r5
    179c:	0a029c00 	beq	a87a4 <_start-0xbff5f85c>
    17a0:	00000530 	andeq	r0, r0, r0, lsr r5
    17a4:	12d45204 	sbcsne	r5, r4, #4, 4	; 0x40000000
    17a8:	02a00000 	adceq	r0, r0, #0
    17ac:	000f580a 	andeq	r5, pc, sl, lsl #16
    17b0:	45530400 	ldrbmi	r0, [r3, #-1024]	; 0xfffffc00
    17b4:	00000002 	andeq	r0, r0, r2
    17b8:	07890a03 	streq	r0, [r9, r3, lsl #20]
    17bc:	54040000 	strpl	r0, [r4], #-0
    17c0:	00000245 	andeq	r0, r0, r5, asr #4
    17c4:	a70a0304 	strge	r0, [sl, -r4, lsl #6]
    17c8:	0400000e 	streq	r0, [r0], #-14
    17cc:	00024555 	andeq	r4, r2, r5, asr r5
    17d0:	0a030800 	beq	c37d8 <_start-0xbff44828>
    17d4:	000004f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    17d8:	02455604 	subeq	r5, r5, #4, 12	; 0x400000
    17dc:	030c0000 	movweq	r0, #49152	; 0xc000
    17e0:	000bfa0a 	andeq	pc, fp, sl, lsl #20
    17e4:	45570400 	ldrbmi	r0, [r7, #-1024]	; 0xfffffc00
    17e8:	10000002 	andne	r0, r0, r2
    17ec:	0eff0a03 	vmoveq.f32	s1, #243	; 0xbf980000 -1.1875000
    17f0:	58040000 	stmdapl	r4, {}	; <UNPREDICTABLE>
    17f4:	00000245 	andeq	r0, r0, r5, asr #4
    17f8:	790a0314 	stmdbvc	sl, {r2, r4, r8, r9}
    17fc:	0400000a 	streq	r0, [r0], #-10
    1800:	00024559 	andeq	r4, r2, r9, asr r5
    1804:	0a031800 	beq	c780c <_start-0xbff407f4>
    1808:	000010a2 	andeq	r1, r0, r2, lsr #1
    180c:	02455a04 	subeq	r5, r5, #4, 20	; 0x4000
    1810:	031c0000 	tsteq	ip, #0
    1814:	0007580a 	andeq	r5, r7, sl, lsl #16
    1818:	455b0400 	ldrbmi	r0, [fp, #-1024]	; 0xfffffc00
    181c:	20000002 	andcs	r0, r0, r2
    1820:	0a590a03 	beq	1644034 <_start-0xbe9c3fcc>
    1824:	5c040000 	stcpl	0, cr0, [r4], {-0}
    1828:	00000245 	andeq	r0, r0, r5, asr #4
    182c:	360a0324 	strcc	r0, [sl], -r4, lsr #6
    1830:	04000005 	streq	r0, [r0], #-5
    1834:	0012bf5d 	andseq	fp, r2, sp, asr pc
    1838:	0a032800 	beq	cb840 <_start-0xbff3c7c0>
    183c:	00000aef 	andeq	r0, r0, pc, ror #21
    1840:	02455e04 	subeq	r5, r5, #4, 28	; 0x40
    1844:	03800000 	orreq	r0, r0, #0
    1848:	000e890a 	andeq	r8, lr, sl, lsl #18
    184c:	455f0400 	ldrbmi	r0, [pc, #-1024]	; 1454 <_start-0xc0006bac>
    1850:	84000002 	strhi	r0, [r0], #-2
    1854:	0d4d0a03 	vstreq	s1, [sp, #-12]
    1858:	60040000 	andvs	r0, r4, r0
    185c:	00000245 	andeq	r0, r0, r5, asr #4
    1860:	fc0a0388 	stc2	3, cr0, [sl], {136}	; 0x88
    1864:	0400000f 	streq	r0, [r0], #-15
    1868:	00024561 	andeq	r4, r2, r1, ror #10
    186c:	0a038c00 	beq	e4874 <_start-0xbff2378c>
    1870:	00000eb7 			; <UNDEFINED> instruction: 0x00000eb7
    1874:	02456204 	subeq	r6, r5, #4, 4	; 0x40000000
    1878:	03900000 	orrseq	r0, r0, #0
    187c:	00097e0a 	andeq	r7, r9, sl, lsl #28
    1880:	45630400 	strbmi	r0, [r3, #-1024]!	; 0xfffffc00
    1884:	94000002 	strls	r0, [r0], #-2
    1888:	087e0a03 	ldmdaeq	lr!, {r0, r1, r9, fp}^
    188c:	64040000 	strvs	r0, [r4], #-0
    1890:	00000245 	andeq	r0, r0, r5, asr #4
    1894:	a70a0398 			; <UNDEFINED> instruction: 0xa70a0398
    1898:	0400000b 	streq	r0, [r0], #-11
    189c:	00024565 	andeq	r4, r2, r5, ror #10
    18a0:	0a039c00 	beq	e88a8 <_start-0xbff1f758>
    18a4:	0000053c 	andeq	r0, r0, ip, lsr r5
    18a8:	12d46604 	sbcsne	r6, r4, #4, 12	; 0x400000
    18ac:	03a00000 	moveq	r0, #0
    18b0:	0005e00a 	andeq	lr, r5, sl
    18b4:	45670400 	strbmi	r0, [r7, #-1024]!	; 0xfffffc00
    18b8:	00000002 	andeq	r0, r0, r2
    18bc:	09ce0a04 	stmibeq	lr, {r2, r9, fp}^
    18c0:	68040000 	stmdavs	r4, {}	; <UNPREDICTABLE>
    18c4:	00000245 	andeq	r0, r0, r5, asr #4
    18c8:	360a0404 	strcc	r0, [sl], -r4, lsl #8
    18cc:	04000006 	streq	r0, [r0], #-6
    18d0:	00024569 	andeq	r4, r2, r9, ror #10
    18d4:	0a040800 	beq	1038dc <_start-0xbff04724>
    18d8:	00000acd 	andeq	r0, r0, sp, asr #21
    18dc:	02456a04 	subeq	r6, r5, #4, 20	; 0x4000
    18e0:	040c0000 	streq	r0, [ip], #-0
    18e4:	000e700a 	andeq	r7, lr, sl
    18e8:	456b0400 	strbmi	r0, [fp, #-1024]!	; 0xfffffc00
    18ec:	10000002 	andne	r0, r0, r2
    18f0:	0cb60a04 	vldmiaeq	r6!, {s0-s3}
    18f4:	6c040000 	stcvs	0, cr0, [r4], {-0}
    18f8:	00000245 	andeq	r0, r0, r5, asr #4
    18fc:	ca0a0414 	bgt	282954 <_start-0xbfd856ac>
    1900:	04000005 	streq	r0, [r0], #-5
    1904:	0002456d 	andeq	r4, r2, sp, ror #10
    1908:	0a041800 	beq	107910 <_start-0xbff006f0>
    190c:	0000098e 	andeq	r0, r0, lr, lsl #19
    1910:	02456e04 	subeq	r6, r5, #4, 28	; 0x40
    1914:	041c0000 	ldreq	r0, [ip], #-0
    1918:	000f0f0a 	andeq	r0, pc, sl, lsl #30
    191c:	456f0400 	strbmi	r0, [pc, #-1024]!	; 1524 <_start-0xc0006adc>
    1920:	20000002 	andcs	r0, r0, r2
    1924:	05420a04 	strbeq	r0, [r2, #-2564]	; 0xfffff5fc
    1928:	70040000 	andvc	r0, r4, r0
    192c:	000012e9 	andeq	r1, r0, r9, ror #5
    1930:	650a0424 	strvs	r0, [sl, #-1060]	; 0xfffffbdc
    1934:	04000008 	streq	r0, [r0], #-8
    1938:	00024571 	andeq	r4, r2, r1, ror r5
    193c:	0a080000 	beq	201944 <_start-0xbfe066bc>
    1940:	00000ac4 	andeq	r0, r0, r4, asr #21
    1944:	02457204 	subeq	r7, r5, #4, 4	; 0x40000000
    1948:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    194c:	0010320a 	andseq	r3, r0, sl, lsl #4
    1950:	45730400 	ldrbmi	r0, [r3, #-1024]!	; 0xfffffc00
    1954:	08000002 	stmdaeq	r0, {r1}
    1958:	0aac0a08 	beq	feb04180 <__bss_end__+0x3eaf953e>
    195c:	74040000 	strvc	r0, [r4], #-0
    1960:	00000245 	andeq	r0, r0, r5, asr #4
    1964:	480a080c 	stmdami	sl, {r2, r3, fp}
    1968:	04000005 	streq	r0, [r0], #-5
    196c:	00026f75 	andeq	r6, r2, r5, ror pc
    1970:	0a081000 	beq	205978 <_start-0xbfe02688>
    1974:	00000d23 	andeq	r0, r0, r3, lsr #26
    1978:	02457604 	subeq	r7, r5, #4, 12	; 0x400000
    197c:	08200000 	stmdaeq	r0!, {}	; <UNPREDICTABLE>
    1980:	0008000a 	andeq	r0, r8, sl
    1984:	45770400 	ldrbmi	r0, [r7, #-1024]!	; 0xfffffc00
    1988:	24000002 	strcs	r0, [r0], #-2
    198c:	10130a08 	andsne	r0, r3, r8, lsl #20
    1990:	78040000 	stmdavc	r4, {}	; <UNPREDICTABLE>
    1994:	00000245 	andeq	r0, r0, r5, asr #4
    1998:	520a0828 	andpl	r0, sl, #40, 16	; 0x280000
    199c:	0400000b 	streq	r0, [r0], #-11
    19a0:	00024579 	andeq	r4, r2, r9, ror r5
    19a4:	0a082c00 	beq	20c9ac <_start-0xbfdfb654>
    19a8:	00000d6b 	andeq	r0, r0, fp, ror #26
    19ac:	02457a04 	subeq	r7, r5, #4, 20	; 0x4000
    19b0:	08300000 	ldmdaeq	r0!, {}	; <UNPREDICTABLE>
    19b4:	0006ac0a 	andeq	sl, r6, sl, lsl #24
    19b8:	457b0400 	ldrbmi	r0, [fp, #-1024]!	; 0xfffffc00
    19bc:	34000002 	strcc	r0, [r0], #-2
    19c0:	0b2a0a08 	bleq	a841e8 <_start-0xbf583e18>
    19c4:	7c040000 	stcvc	0, cr0, [r4], {-0}
    19c8:	00000245 	andeq	r0, r0, r5, asr #4
    19cc:	db0a0838 	blle	283ab4 <_start-0xbfd8454c>
    19d0:	04000009 	streq	r0, [r0], #-9
    19d4:	0002457d 	andeq	r4, r2, sp, ror r5
    19d8:	0a083c00 	beq	2109e0 <_start-0xbfdf7620>
    19dc:	0000054e 	andeq	r0, r0, lr, asr #10
    19e0:	12fe7e04 	rscsne	r7, lr, #4, 28	; 0x40
    19e4:	08400000 	stmdaeq	r0, {}^	; <UNPREDICTABLE>
    19e8:	000b5c0a 	andeq	r5, fp, sl, lsl #24
    19ec:	457f0400 	ldrbmi	r0, [pc, #-1024]!	; 15f4 <_start-0xc0006a0c>
    19f0:	80000002 	andhi	r0, r0, r2
    19f4:	10230a08 	eorne	r0, r3, r8, lsl #20
    19f8:	80040000 	andhi	r0, r4, r0
    19fc:	00000245 	andeq	r0, r0, r5, asr #4
    1a00:	9e0a0884 	cdpls	8, 0, cr0, cr10, cr4, {4}
    1a04:	0400000d 	streq	r0, [r0], #-13
    1a08:	00024581 	andeq	r4, r2, r1, lsl #11
    1a0c:	0a088800 	beq	223a14 <_start-0xbfde45ec>
    1a10:	00000cd6 	ldrdeq	r0, [r0], -r6
    1a14:	02458204 	subeq	r8, r5, #4, 4	; 0x40000000
    1a18:	088c0000 	stmeq	ip, {}	; <UNPREDICTABLE>
    1a1c:	000c280a 	andeq	r2, ip, sl, lsl #16
    1a20:	45830400 	strmi	r0, [r3, #1024]	; 0x400
    1a24:	90000002 	andls	r0, r0, r2
    1a28:	0bbf0a08 	bleq	fefc4250 <__bss_end__+0x3efb960e>
    1a2c:	84040000 	strhi	r0, [r4], #-0
    1a30:	00000245 	andeq	r0, r0, r5, asr #4
    1a34:	da0a0894 	ble	283c8c <_start-0xbfd84374>
    1a38:	0400000b 	streq	r0, [r0], #-11
    1a3c:	00024585 	andeq	r4, r2, r5, lsl #11
    1a40:	0a089800 	beq	227a48 <_start-0xbfde05b8>
    1a44:	00000ef5 	strdeq	r0, [r0], -r5
    1a48:	02458604 	subeq	r8, r5, #4, 12	; 0x400000
    1a4c:	089c0000 	ldmeq	ip, {}	; <UNPREDICTABLE>
    1a50:	000b710a 	andeq	r7, fp, sl, lsl #2
    1a54:	45870400 	strmi	r0, [r7, #1024]	; 0x400
    1a58:	a0000002 	andge	r0, r0, r2
    1a5c:	07100a08 	ldreq	r0, [r0, -r8, lsl #20]
    1a60:	88040000 	stmdahi	r4, {}	; <UNPREDICTABLE>
    1a64:	00000245 	andeq	r0, r0, r5, asr #4
    1a68:	540a08a4 	strpl	r0, [sl], #-2212	; 0xfffff75c
    1a6c:	04000005 	streq	r0, [r0], #-5
    1a70:	00028489 	andeq	r8, r2, r9, lsl #9
    1a74:	0a08a800 	beq	22ba7c <_start-0xbfddc584>
    1a78:	000009f4 	strdeq	r0, [r0], -r4
    1a7c:	02458a04 	subeq	r8, r5, #4, 20	; 0x4000
    1a80:	08c00000 	stmiaeq	r0, {}^	; <UNPREDICTABLE>
    1a84:	0009c20a 	andeq	ip, r9, sl, lsl #4
    1a88:	458b0400 	strmi	r0, [fp, #1024]	; 0x400
    1a8c:	c4000002 	strgt	r0, [r0], #-2
    1a90:	06210a08 	strteq	r0, [r1], -r8, lsl #20
    1a94:	8c040000 	stchi	0, cr0, [r4], {-0}
    1a98:	00000245 	andeq	r0, r0, r5, asr #4
    1a9c:	680a08c8 	stmdavs	sl, {r3, r6, r7, fp}
    1aa0:	0400000f 	streq	r0, [r0], #-15
    1aa4:	0002458d 	andeq	r4, r2, sp, lsl #11
    1aa8:	0a08cc00 	beq	234ab0 <_start-0xbfdd3550>
    1aac:	000008f2 	strdeq	r0, [r0], -r2
    1ab0:	02458e04 	subeq	r8, r5, #4, 28	; 0x40
    1ab4:	08d00000 	ldmeq	r0, {}^	; <UNPREDICTABLE>
    1ab8:	000fc30a 	andeq	ip, pc, sl, lsl #6
    1abc:	458f0400 	strmi	r0, [pc, #1024]	; 1ec4 <_start-0xc000613c>
    1ac0:	d4000002 	strle	r0, [r0], #-2
    1ac4:	0d880a08 	vstreq	s0, [r8, #32]
    1ac8:	90040000 	andls	r0, r4, r0
    1acc:	00000245 	andeq	r0, r0, r5, asr #4
    1ad0:	890a08d8 	stmdbhi	sl, {r3, r4, r6, r7, fp}
    1ad4:	0400000a 	streq	r0, [r0], #-10
    1ad8:	00024591 	muleq	r2, r1, r5
    1adc:	0a08dc00 	beq	238ae4 <_start-0xbfdcf51c>
    1ae0:	00000f8b 	andeq	r0, r0, fp, lsl #31
    1ae4:	02459204 	subeq	r9, r5, #4, 4	; 0x40000000
    1ae8:	08e00000 	stmiaeq	r0!, {}^	; <UNPREDICTABLE>
    1aec:	000dc40a 	andeq	ip, sp, sl, lsl #8
    1af0:	45930400 	ldrmi	r0, [r3, #1024]	; 0x400
    1af4:	e4000002 	str	r0, [r0], #-2
    1af8:	08480a08 	stmdaeq	r8, {r3, r9, fp}^
    1afc:	94040000 	strls	r0, [r4], #-0
    1b00:	00000245 	andeq	r0, r0, r5, asr #4
    1b04:	ff0a08e8 	vcmla.f16	q0, q13, d8[1], #0
    1b08:	0400000a 	streq	r0, [r0], #-10
    1b0c:	00024595 	muleq	r2, r5, r5
    1b10:	0a08ec00 	beq	23cb18 <_start-0xbfdcb4e8>
    1b14:	00000670 	andeq	r0, r0, r0, ror r6
    1b18:	02459604 	subeq	r9, r5, #4, 12	; 0x400000
    1b1c:	08f00000 	ldmeq	r0!, {}^	; <UNPREDICTABLE>
    1b20:	000c4b0a 	andeq	r4, ip, sl, lsl #22
    1b24:	45970400 	ldrmi	r0, [r7, #1024]	; 0x400
    1b28:	f4000002 	vst4.8	{d0-d3}, [r0], r2
    1b2c:	05bd0a08 	ldreq	r0, [sp, #2568]!	; 0xa08
    1b30:	98040000 	stmdals	r4, {}	; <UNPREDICTABLE>
    1b34:	00000245 	andeq	r0, r0, r5, asr #4
    1b38:	6a0a08f8 	bvs	283f20 <_start-0xbfd840e0>
    1b3c:	04000007 	streq	r0, [r0], #-7
    1b40:	00024599 	muleq	r2, r9, r5
    1b44:	0a08fc00 	beq	240b4c <_start-0xbfdc74b4>
    1b48:	000008b3 			; <UNDEFINED> instruction: 0x000008b3
    1b4c:	02459a04 	subeq	r9, r5, #4, 20	; 0x4000
    1b50:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    1b54:	0010810a 	andseq	r8, r0, sl, lsl #2
    1b58:	459b0400 	ldrmi	r0, [fp, #1024]	; 0x400
    1b5c:	04000002 	streq	r0, [r0], #-2
    1b60:	088e0a09 	stmeq	lr, {r0, r3, r9, fp}
    1b64:	9c040000 	stcls	0, cr0, [r4], {-0}
    1b68:	0000126b 	andeq	r1, r0, fp, ror #4
    1b6c:	9d0a0908 	vstrls.16	s0, [sl, #-16]	; <UNPREDICTABLE>
    1b70:	04000008 	streq	r0, [r0], #-8
    1b74:	0002459d 	muleq	r2, sp, r5
    1b78:	0a090c00 	beq	244b80 <_start-0xbfdc3480>
    1b7c:	0000055a 	andeq	r0, r0, sl, asr r5
    1b80:	126b9e04 	rsbne	r9, fp, #4, 28	; 0x40
    1b84:	09100000 	ldmdbeq	r0, {}	; <UNPREDICTABLE>
    1b88:	000e230a 	andeq	r2, lr, sl, lsl #6
    1b8c:	459f0400 	ldrmi	r0, [pc, #1024]	; 1f94 <_start-0xc000606c>
    1b90:	14000002 	strne	r0, [r0], #-2
    1b94:	0cac0a09 	vstmiaeq	ip!, {s0-s8}
    1b98:	a0040000 	andge	r0, r4, r0
    1b9c:	00000245 	andeq	r0, r0, r5, asr #4
    1ba0:	e80a0918 	stmda	sl, {r3, r4, r8, fp}
    1ba4:	0400000f 	streq	r0, [r0], #-15
    1ba8:	000245a1 	andeq	r4, r2, r1, lsr #11
    1bac:	0a091c00 	beq	248bb4 <_start-0xbfdbf44c>
    1bb0:	0000093e 	andeq	r0, r0, lr, lsr r9
    1bb4:	0245a204 	subeq	sl, r5, #4, 4	; 0x40000000
    1bb8:	09200000 	stmdbeq	r0!, {}	; <UNPREDICTABLE>
    1bbc:	00074e0a 	andeq	r4, r7, sl, lsl #28
    1bc0:	45a30400 	strmi	r0, [r3, #1024]!	; 0x400
    1bc4:	24000002 	strcs	r0, [r0], #-2
    1bc8:	0cbe0a09 	vldmiaeq	lr!, {s0-s8}
    1bcc:	a4040000 	strge	r0, [r4], #-0
    1bd0:	00000245 	andeq	r0, r0, r5, asr #4
    1bd4:	230a0928 	movwcs	r0, #43304	; 0xa928
    1bd8:	04000007 	streq	r0, [r0], #-7
    1bdc:	000245a5 	andeq	r4, r2, r5, lsr #11
    1be0:	0a092c00 	beq	24cbe8 <_start-0xbfdbb418>
    1be4:	00000e2f 	andeq	r0, r0, pc, lsr #28
    1be8:	0245a604 	subeq	sl, r5, #4, 12	; 0x400000
    1bec:	09300000 	ldmdbeq	r0!, {}	; <UNPREDICTABLE>
    1bf0:	0005ec0a 	andeq	lr, r5, sl, lsl #24
    1bf4:	45a70400 	strmi	r0, [r7, #1024]!	; 0x400
    1bf8:	34000002 	strcc	r0, [r0], #-2
    1bfc:	06640a09 	strbteq	r0, [r4], -r9, lsl #20
    1c00:	a8040000 	stmdage	r4, {}	; <UNPREDICTABLE>
    1c04:	00000449 	andeq	r0, r0, r9, asr #8
    1c08:	8b0a0938 	blhi	2840f0 <_start-0xbfd83f10>
    1c0c:	0400000b 	streq	r0, [r0], #-11
    1c10:	000245a9 	andeq	r4, r2, r9, lsr #11
    1c14:	0a098000 	beq	261c1c <_start-0xbfda63e4>
    1c18:	000005b1 			; <UNDEFINED> instruction: 0x000005b1
    1c1c:	0245aa04 	subeq	sl, r5, #4, 20	; 0x4000
    1c20:	09840000 	stmibeq	r4, {}	; <UNPREDICTABLE>
    1c24:	0007740a 	andeq	r7, r7, sl, lsl #8
    1c28:	45ab0400 	strmi	r0, [fp, #1024]!	; 0x400
    1c2c:	88000002 	stmdahi	r0, {r1}
    1c30:	06a00a09 	strteq	r0, [r0], r9, lsl #20
    1c34:	ac040000 	stcge	0, cr0, [r4], {-0}
    1c38:	00000245 	andeq	r0, r0, r5, asr #4
    1c3c:	720a098c 	andvc	r0, sl, #140, 18	; 0x230000
    1c40:	04000009 	streq	r0, [r0], #-9
    1c44:	000245ad 	andeq	r4, r2, sp, lsr #11
    1c48:	0a099000 	beq	265c50 <_start-0xbfda23b0>
    1c4c:	00000a97 	muleq	r0, r7, sl
    1c50:	0245ae04 	subeq	sl, r5, #4, 28	; 0x40
    1c54:	09940000 	ldmibeq	r4, {}	; <UNPREDICTABLE>
    1c58:	0007f40a 	andeq	pc, r7, sl, lsl #8
    1c5c:	45af0400 	strmi	r0, [pc, #1024]!	; 2064 <_start-0xc0005f9c>
    1c60:	98000002 	stmdals	r0, {r1}
    1c64:	0db80a09 			; <UNDEFINED> instruction: 0x0db80a09
    1c68:	b0040000 	andlt	r0, r4, r0
    1c6c:	00000245 	andeq	r0, r0, r5, asr #4
    1c70:	990a099c 	stmdbls	sl, {r2, r3, r4, r7, r8, fp}
    1c74:	04000009 	streq	r0, [r0], #-9
    1c78:	000245b1 			; <UNDEFINED> instruction: 0x000245b1
    1c7c:	0a09a000 	beq	269c84 <_start-0xbfd9e37c>
    1c80:	00000a4d 	andeq	r0, r0, sp, asr #20
    1c84:	0245b204 	subeq	fp, r5, #4, 4	; 0x40000000
    1c88:	09a40000 	stmibeq	r4!, {}	; <UNPREDICTABLE>
    1c8c:	0009b60a 	andeq	fp, r9, sl, lsl #12
    1c90:	45b30400 	ldrmi	r0, [r3, #1024]!	; 0x400
    1c94:	a8000002 	stmdage	r0, {r1}
    1c98:	06f60a09 	ldrbteq	r0, [r6], r9, lsl #20
    1c9c:	b4040000 	strlt	r0, [r4], #-0
    1ca0:	00000245 	andeq	r0, r0, r5, asr #4
    1ca4:	6a0a09ac 	bvs	28435c <_start-0xbfd83ca4>
    1ca8:	04000006 	streq	r0, [r0], #-6
    1cac:	001313b5 			; <UNDEFINED> instruction: 0x001313b5
    1cb0:	0a09b000 	beq	26dcb8 <_start-0xbfd9a348>
    1cb4:	00000a31 	andeq	r0, r0, r1, lsr sl
    1cb8:	0245b604 	subeq	fp, r5, #4, 12	; 0x400000
    1cbc:	0a000000 	beq	1cc4 <_start-0xc000633c>
    1cc0:	000d730a 	andeq	r7, sp, sl, lsl #6
    1cc4:	45b70400 	ldrmi	r0, [r7, #1024]!	; 0x400
    1cc8:	04000002 	streq	r0, [r0], #-2
    1ccc:	0b630a0a 	bleq	18c44fc <_start-0xbe743b04>
    1cd0:	b8040000 	stmdalt	r4, {}	; <UNPREDICTABLE>
    1cd4:	00000245 	andeq	r0, r0, r5, asr #4
    1cd8:	0e0a0a08 	vmlaeq.f32	s0, s20, s16
    1cdc:	0400000e 	streq	r0, [r0], #-14
    1ce0:	000245b9 			; <UNDEFINED> instruction: 0x000245b9
    1ce4:	0a0a0c00 	beq	284cec <_start-0xbfd83314>
    1ce8:	00000ec7 	andeq	r0, r0, r7, asr #29
    1cec:	0245ba04 	subeq	fp, r5, #4, 20	; 0x4000
    1cf0:	0a100000 	beq	401cf8 <_start-0xbfc06308>
    1cf4:	0005140a 	andeq	r1, r5, sl, lsl #8
    1cf8:	45bb0400 	ldrmi	r0, [fp, #1024]!	; 0x400
    1cfc:	14000002 	strne	r0, [r0], #-2
    1d00:	0e990a0a 	vfnmseq.f32	s0, s18, s20
    1d04:	bc040000 	stclt	0, cr0, [r4], {-0}
    1d08:	00000245 	andeq	r0, r0, r5, asr #4
    1d0c:	e20a0a18 	and	r0, sl, #24, 20	; 0x18000
    1d10:	04000004 	streq	r0, [r0], #-4
    1d14:	000245bd 			; <UNDEFINED> instruction: 0x000245bd
    1d18:	0a0a1c00 	beq	288d20 <_start-0xbfd7f2e0>
    1d1c:	00000c1a 	andeq	r0, r0, sl, lsl ip
    1d20:	0245be04 	subeq	fp, r5, #4, 28	; 0x40
    1d24:	0a200000 	beq	801d2c <_start-0xbf8062d4>
    1d28:	000f180a 	andeq	r1, pc, sl, lsl #16
    1d2c:	45bf0400 	ldrmi	r0, [pc, #1024]!	; 2134 <_start-0xc0005ecc>
    1d30:	24000002 	strcs	r0, [r0], #-2
    1d34:	08e40a0a 	stmiaeq	r4!, {r1, r3, r9, fp}^
    1d38:	c0040000 	andgt	r0, r4, r0
    1d3c:	00000245 	andeq	r0, r0, r5, asr #4
    1d40:	990a0a28 	stmdbls	sl, {r3, r5, r9, fp}
    1d44:	04000007 	streq	r0, [r0], #-7
    1d48:	000245c1 	andeq	r4, r2, r1, asr #11
    1d4c:	0a0a2c00 	beq	28cd54 <_start-0xbfd7b2ac>
    1d50:	00000c89 	andeq	r0, r0, r9, lsl #25
    1d54:	025ac204 	subseq	ip, sl, #4, 4	; 0x40000000
    1d58:	0a300000 	beq	c01d60 <_start-0xbf4062a0>
    1d5c:	0006910a 	andeq	r9, r6, sl, lsl #2
    1d60:	45c30400 	strbmi	r0, [r3, #1024]	; 0x400
    1d64:	38000002 	stmdacc	r0, {r1}
    1d68:	09490a0a 	stmdbeq	r9, {r1, r3, r9, fp}^
    1d6c:	c4040000 	strgt	r0, [r4], #-0
    1d70:	00000245 	andeq	r0, r0, r5, asr #4
    1d74:	7d0a0a3c 	vstrvc	s0, [sl, #-240]	; 0xffffff10
    1d78:	04000006 	streq	r0, [r0], #-6
    1d7c:	0012fec5 	andseq	pc, r2, r5, asr #29
    1d80:	0a0a4000 	beq	291d88 <_start-0xbfd76278>
    1d84:	000010d8 	ldrdeq	r1, [r0], -r8
    1d88:	0245c604 	subeq	ip, r5, #4, 12	; 0x400000
    1d8c:	0a800000 	beq	fe001d94 <__bss_end__+0x3dff7152>
    1d90:	0010390a 	andseq	r3, r0, sl, lsl #18
    1d94:	45c70400 	strbmi	r0, [r7, #1024]	; 0x400
    1d98:	84000002 	strhi	r0, [r0], #-2
    1d9c:	05f90a0a 	ldrbeq	r0, [r9, #2570]!	; 0xa0a
    1da0:	c8040000 	stmdagt	r4, {}	; <UNPREDICTABLE>
    1da4:	00000245 	andeq	r0, r0, r5, asr #4
    1da8:	8b0a0a88 	blhi	2847d0 <_start-0xbfd83830>
    1dac:	04000010 	streq	r0, [r0], #-16
    1db0:	000245c9 	andeq	r4, r2, r9, asr #11
    1db4:	0a0a8c00 	beq	2a4dbc <_start-0xbfd63244>
    1db8:	00000cc8 	andeq	r0, r0, r8, asr #25
    1dbc:	0245ca04 	subeq	ip, r5, #4, 20	; 0x4000
    1dc0:	0a900000 	beq	fe401dc8 <__bss_end__+0x3e3f7186>
    1dc4:	000b440a 	andeq	r4, fp, sl, lsl #8
    1dc8:	45cb0400 	strbmi	r0, [fp, #1024]	; 0x400
    1dcc:	94000002 	strls	r0, [r0], #-2
    1dd0:	0d3f0a0a 	vldmdbeq	pc!, {s0-s9}
    1dd4:	cc040000 	stcgt	0, cr0, [r4], {-0}
    1dd8:	00000245 	andeq	r0, r0, r5, asr #4
    1ddc:	a30a0a98 	movwge	r0, #43672	; 0xaa98
    1de0:	04000005 	streq	r0, [r0], #-5
    1de4:	000245cd 	andeq	r4, r2, sp, asr #11
    1de8:	0a0a9c00 	beq	2a8df0 <_start-0xbfd5f210>
    1dec:	00000a0f 	andeq	r0, r0, pc, lsl #20
    1df0:	0245ce04 	subeq	ip, r5, #4, 28	; 0x40
    1df4:	0aa00000 	beq	fe801dfc <__bss_end__+0x3e7f71ba>
    1df8:	000d5d0a 	andeq	r5, sp, sl, lsl #26
    1dfc:	45cf0400 	strbmi	r0, [pc, #1024]	; 2204 <_start-0xc0005dfc>
    1e00:	a4000002 	strge	r0, [r0], #-2
    1e04:	10730a0a 	rsbsne	r0, r3, sl, lsl #20
    1e08:	d0040000 	andle	r0, r4, r0
    1e0c:	00000245 	andeq	r0, r0, r5, asr #4
    1e10:	e60a0aa8 	str	r0, [sl], -r8, lsr #21
    1e14:	04000007 	streq	r0, [r0], #-7
    1e18:	000245d1 	ldrdeq	r4, [r2], -r1
    1e1c:	0a0aac00 	beq	2ace24 <_start-0xbfd5b1dc>
    1e20:	00000f7d 	andeq	r0, r0, sp, ror pc
    1e24:	0245d204 	subeq	sp, r5, #4, 4	; 0x40000000
    1e28:	0ab00000 	beq	fec01e30 <__bss_end__+0x3ebf71ee>
    1e2c:	0007d80a 	andeq	sp, r7, sl, lsl #16
    1e30:	45d30400 	ldrbmi	r0, [r3, #1024]	; 0x400
    1e34:	b4000002 	strlt	r0, [r0], #-2
    1e38:	0a000a0a 	beq	4668 <_start-0xc0003998>
    1e3c:	d4040000 	strle	r0, [r4], #-0
    1e40:	00000245 	andeq	r0, r0, r5, asr #4
    1e44:	3f0a0ab8 	svccc	0x000a0ab8
    1e48:	04000007 	streq	r0, [r0], #-7
    1e4c:	000245d5 	ldrdeq	r4, [r2], -r5
    1e50:	0a0abc00 	beq	2b0e58 <_start-0xbfd571a8>
    1e54:	00000be4 	andeq	r0, r0, r4, ror #23
    1e58:	12fed604 	rscsne	sp, lr, #4, 12	; 0x400000
    1e5c:	0ac00000 	beq	ff001e64 <__bss_end__+0x3eff7222>
    1e60:	000f970a 	andeq	r9, pc, sl, lsl #14
    1e64:	45d70400 	ldrbmi	r0, [r7, #1024]	; 0x400
    1e68:	00000002 	andeq	r0, r0, r2
    1e6c:	10470a0b 	subne	r0, r7, fp, lsl #20
    1e70:	d8040000 	stmdale	r4, {}	; <UNPREDICTABLE>
    1e74:	00000245 	andeq	r0, r0, r5, asr #4
    1e78:	570a0b04 	strpl	r0, [sl, -r4, lsl #22]
    1e7c:	04000010 	streq	r0, [r0], #-16
    1e80:	000245d9 	ldrdeq	r4, [r2], -r9
    1e84:	0a0b0800 	beq	2c3e8c <_start-0xbfd44174>
    1e88:	00000b7b 	andeq	r0, r0, fp, ror fp
    1e8c:	0245da04 	subeq	sp, r5, #4, 20	; 0x4000
    1e90:	0b0c0000 	bleq	301e98 <_start-0xbfd06168>
    1e94:	000e600a 	andeq	r6, lr, sl
    1e98:	45db0400 	ldrbmi	r0, [fp, #1024]	; 0x400
    1e9c:	10000002 	andne	r0, r0, r2
    1ea0:	0dde0a0b 	vldreq	s1, [lr, #44]	; 0x2c
    1ea4:	dc040000 	stcle	0, cr0, [r4], {-0}
    1ea8:	00000245 	andeq	r0, r0, r5, asr #4
    1eac:	550a0b14 	strpl	r0, [sl, #-2836]	; 0xfffff4ec
    1eb0:	04000008 	streq	r0, [r0], #-8
    1eb4:	000245dd 	ldrdeq	r4, [r2], -sp
    1eb8:	0a0b1800 	beq	2c7ec0 <_start-0xbfd40140>
    1ebc:	000008d4 	ldrdeq	r0, [r0], -r4
    1ec0:	0245de04 	subeq	sp, r5, #4, 28	; 0x40
    1ec4:	0b1c0000 	bleq	701ecc <_start-0xbf906134>
    1ec8:	0007c80a 	andeq	ip, r7, sl, lsl #16
    1ecc:	45df0400 	ldrbmi	r0, [pc, #1024]	; 22d4 <_start-0xc0005d2c>
    1ed0:	20000002 	andcs	r0, r0, r2
    1ed4:	0da80a0b 			; <UNDEFINED> instruction: 0x0da80a0b
    1ed8:	e0040000 	and	r0, r4, r0
    1edc:	00000245 	andeq	r0, r0, r5, asr #4
    1ee0:	e40a0b24 	str	r0, [sl], #-2852	; 0xfffff4dc
    1ee4:	04000009 	streq	r0, [r0], #-9
    1ee8:	000245e1 	andeq	r4, r2, r1, ror #11
    1eec:	0a0b2800 	beq	2cbef4 <_start-0xbfd3c10c>
    1ef0:	00000593 	muleq	r0, r3, r5
    1ef4:	0245e204 	subeq	lr, r5, #4, 4	; 0x40000000
    1ef8:	0b2c0000 	bleq	b01f00 <_start-0xbf506100>
    1efc:	000c690a 	andeq	r6, ip, sl, lsl #18
    1f00:	45e30400 	strbmi	r0, [r3, #1024]!	; 0x400
    1f04:	30000002 	andcc	r0, r0, r2
    1f08:	0bea0a0b 	bleq	ffa8473c <__bss_end__+0x3fa79afa>
    1f0c:	e4040000 	str	r0, [r4], #-0
    1f10:	00000245 	andeq	r0, r0, r5, asr #4
    1f14:	a70a0b34 	smladxge	sl, r4, fp, r0
    1f18:	04000007 	streq	r0, [r0], #-7
    1f1c:	000245e5 	andeq	r4, r2, r5, ror #11
    1f20:	0a0b3800 	beq	2cff28 <_start-0xbfd380d8>
    1f24:	00000906 	andeq	r0, r0, r6, lsl #18
    1f28:	0245e604 	subeq	lr, r5, #4, 12	; 0x400000
    1f2c:	0b3c0000 	bleq	f01f34 <_start-0xbf1060cc>
    1f30:	00057d0a 	andeq	r7, r5, sl, lsl #26
    1f34:	fee70400 	cdp2	4, 14, cr0, cr7, cr0, {0}
    1f38:	40000012 	andmi	r0, r0, r2, lsl r0
    1f3c:	05830a0b 	streq	r0, [r3, #2571]	; 0xa0b
    1f40:	e8040000 	stmda	r4, {}	; <UNPREDICTABLE>
    1f44:	00000245 	andeq	r0, r0, r5, asr #4
    1f48:	2e0a0b80 	vmlacs.f64	d0, d26, d0
    1f4c:	04000008 	streq	r0, [r0], #-8
    1f50:	000245e9 	andeq	r4, r2, r9, ror #11
    1f54:	0a0b8400 	beq	2e2f5c <_start-0xbfd250a4>
    1f58:	00000b1a 	andeq	r0, r0, sl, lsl fp
    1f5c:	0245ea04 	subeq	lr, r5, #4, 20	; 0x4000
    1f60:	0b880000 	bleq	fe201f68 <__bss_end__+0x3e1f7326>
    1f64:	000e480a 	andeq	r4, lr, sl, lsl #16
    1f68:	45eb0400 	strbmi	r0, [fp, #1024]!	; 0x400
    1f6c:	8c000002 	stchi	0, cr0, [r0], {2}
    1f70:	0ab40a0b 	beq	fed047a4 <__bss_end__+0x3ecf9b62>
    1f74:	ec040000 	stc	0, cr0, [r4], {-0}
    1f78:	00000245 	andeq	r0, r0, r5, asr #4
    1f7c:	790a0b90 	stmdbvc	sl, {r4, r7, r8, r9, fp}
    1f80:	0400000c 	streq	r0, [r0], #-12
    1f84:	000245ed 	andeq	r4, r2, sp, ror #11
    1f88:	0a0b9400 	beq	2e6f90 <_start-0xbfd21070>
    1f8c:	00000c59 	andeq	r0, r0, r9, asr ip
    1f90:	0245ee04 	subeq	lr, r5, #4, 28	; 0x40
    1f94:	0b980000 	bleq	fe601f9c <__bss_end__+0x3e5f735a>
    1f98:	000d130a 	andeq	r1, sp, sl, lsl #6
    1f9c:	45ef0400 	strbmi	r0, [pc, #1024]!	; 23a4 <_start-0xc0005c5c>
    1fa0:	9c000002 	stcls	0, cr0, [r0], {2}
    1fa4:	0b970a0b 	bleq	fe5c47d8 <__bss_end__+0x3e5b9b96>
    1fa8:	f0040000 			; <UNDEFINED> instruction: 0xf0040000
    1fac:	00000245 	andeq	r0, r0, r5, asr #4
    1fb0:	ba0a0ba0 	blt	284e38 <_start-0xbfd831c8>
    1fb4:	04000010 	streq	r0, [r0], #-16
    1fb8:	000245f1 	strdeq	r4, [r2], -r1
    1fbc:	0a0ba400 	beq	2eafc4 <_start-0xbfd1d03c>
    1fc0:	00000c0a 	andeq	r0, r0, sl, lsl #24
    1fc4:	0245f204 	subeq	pc, r5, #4, 4	; 0x40000000
    1fc8:	0ba80000 	bleq	fea01fd0 <__bss_end__+0x3e9f738e>
    1fcc:	000dfe0a 	andeq	pc, sp, sl, lsl #28
    1fd0:	45f30400 	ldrbmi	r0, [r3, #1024]!	; 0x400
    1fd4:	ac000002 	stcge	0, cr0, [r0], {2}
    1fd8:	07b80a0b 	ldreq	r0, [r8, fp, lsl #20]!
    1fdc:	f4040000 	vst4.8	{d0-d3}, [r4], r0
    1fe0:	00000245 	andeq	r0, r0, r5, asr #4
    1fe4:	e00a0bb0 			; <UNDEFINED> instruction: 0xe00a0bb0
    1fe8:	0400000c 	streq	r0, [r0], #-12
    1fec:	000245f5 	strdeq	r4, [r2], -r5
    1ff0:	0a0bb400 	beq	2eeff8 <_start-0xbfd19008>
    1ff4:	0000081d 	andeq	r0, r0, sp, lsl r8
    1ff8:	0245f604 	subeq	pc, r5, #4, 12	; 0x400000
    1ffc:	0bb80000 	bleq	fee02004 <__bss_end__+0x3edf73c2>
    2000:	000b330a 	andeq	r3, fp, sl, lsl #6
    2004:	45f70400 	ldrbmi	r0, [r7, #1024]!	; 0x400
    2008:	bc000002 	stclt	0, cr0, [r0], {2}
    200c:	0f440a0b 	svceq	0x00440a0b
    2010:	f8040000 			; <UNDEFINED> instruction: 0xf8040000
    2014:	000012fe 	strdeq	r1, [r0], -lr
    2018:	a50a0bc0 	strge	r0, [sl, #-3008]	; 0xfffff440
    201c:	04000009 	streq	r0, [r0], #-9
    2020:	000245f9 	strdeq	r4, [r2], -r9
    2024:	0a0c0000 	beq	30202c <_start-0xbfd05fd4>
    2028:	0000050e 	andeq	r0, r0, lr, lsl #10
    202c:	026ffa04 	rsbeq	pc, pc, #4, 20	; 0x4000
    2030:	0c040000 	stceq	0, cr0, [r4], {-0}
    2034:	0009250a 	andeq	r2, r9, sl, lsl #10
    2038:	45fb0400 	ldrbmi	r0, [fp, #1024]!	; 0x400
    203c:	14000002 	strne	r0, [r0], #-2
    2040:	10b20a0c 	adcsne	r0, r2, ip, lsl #20
    2044:	fc040000 	stc2	0, cr0, [r4], {-0}
    2048:	00000245 	andeq	r0, r0, r5, asr #4
    204c:	220a0c18 	andcs	r0, sl, #24, 24	; 0x1800
    2050:	04000005 	streq	r0, [r0], #-5
    2054:	001328fd 			; <UNDEFINED> instruction: 0x001328fd
    2058:	0a0c1c00 	beq	309060 <_start-0xbfcfefa0>
    205c:	00000d2c 	andeq	r0, r0, ip, lsr #26
    2060:	0245fe04 	subeq	pc, r5, #4, 28	; 0x40
    2064:	0ff40000 	svceq	0x00f40000
    2068:	5244490d 	subpl	r4, r4, #212992	; 0x34000
    206c:	45ff0400 	ldrbmi	r0, [pc, #1024]!	; 2474 <_start-0xc0005b8c>
    2070:	f8000002 			; <UNDEFINED> instruction: 0xf8000002
    2074:	09b10e0f 	ldmibeq	r1!, {r0, r1, r2, r3, r9, sl, fp}
    2078:	00040000 	andeq	r0, r4, r0
    207c:	00024501 	andeq	r4, r2, r1, lsl #10
    2080:	000ffc00 	andeq	pc, pc, r0, lsl #24
    2084:	00024506 	andeq	r4, r2, r6, lsl #10
    2088:	00126b00 	andseq	r6, r2, r0, lsl #22
    208c:	023e0700 	eorseq	r0, lr, #0, 14
    2090:	00000000 	andeq	r0, r0, r0
    2094:	00125b05 	andseq	r5, r2, r5, lsl #22
    2098:	02450600 	subeq	r0, r5, #0, 12
    209c:	12800000 	addne	r0, r0, #0
    20a0:	3e070000 	cdpcc	0, 0, cr0, cr7, cr0, {0}
    20a4:	0c000002 	stceq	0, cr0, [r0], {2}
    20a8:	12700500 	rsbsne	r0, r0, #0, 10
    20ac:	45060000 	strmi	r0, [r6, #-0]
    20b0:	95000002 	strls	r0, [r0, #-2]
    20b4:	07000012 	smladeq	r0, r2, r0, r0
    20b8:	0000023e 	andeq	r0, r0, lr, lsr r2
    20bc:	85050009 	strhi	r0, [r5, #-9]
    20c0:	06000012 			; <UNDEFINED> instruction: 0x06000012
    20c4:	00000245 	andeq	r0, r0, r5, asr #4
    20c8:	000012aa 	andeq	r1, r0, sl, lsr #5
    20cc:	00023e07 	andeq	r3, r2, r7, lsl #28
    20d0:	05000d00 	streq	r0, [r0, #-3328]	; 0xfffff300
    20d4:	0000129a 	muleq	r0, sl, r2
    20d8:	00024506 	andeq	r4, r2, r6, lsl #10
    20dc:	0012bf00 	andseq	fp, r2, r0, lsl #30
    20e0:	023e0700 	eorseq	r0, lr, #0, 14
    20e4:	00150000 	andseq	r0, r5, r0
    20e8:	0012af05 	andseq	sl, r2, r5, lsl #30
    20ec:	02450600 	subeq	r0, r5, #0, 12
    20f0:	12d40000 	sbcsne	r0, r4, #0
    20f4:	3e070000 	cdpcc	0, 0, cr0, cr7, cr0, {0}
    20f8:	17000002 	strne	r0, [r0, -r2]
    20fc:	12c40500 	sbcne	r0, r4, #0, 10
    2100:	45060000 	strmi	r0, [r6, #-0]
    2104:	e9000002 	stmdb	r0, {r1}
    2108:	07000012 	smladeq	r0, r2, r0, r0
    210c:	0000023e 	andeq	r0, r0, lr, lsr r2
    2110:	d90500f6 	stmdble	r5, {r1, r2, r4, r5, r6, r7}
    2114:	06000012 			; <UNDEFINED> instruction: 0x06000012
    2118:	00000245 	andeq	r0, r0, r5, asr #4
    211c:	000012fe 	strdeq	r1, [r0], -lr
    2120:	00023e07 	andeq	r3, r2, r7, lsl #28
    2124:	05000f00 	streq	r0, [r0, #-3840]	; 0xfffff100
    2128:	000012ee 	andeq	r1, r0, lr, ror #5
    212c:	00024506 	andeq	r4, r2, r6, lsl #10
    2130:	00131300 	andseq	r1, r3, r0, lsl #6
    2134:	023e0700 	eorseq	r0, lr, #0, 14
    2138:	00130000 	andseq	r0, r3, r0
    213c:	00130305 	andseq	r0, r3, r5, lsl #6
    2140:	02450600 	subeq	r0, r5, #0, 12
    2144:	13280000 			; <UNDEFINED> instruction: 0x13280000
    2148:	3e070000 	cdpcc	0, 0, cr0, cr7, cr0, {0}
    214c:	f5000002 			; <UNDEFINED> instruction: 0xf5000002
    2150:	13180500 	tstne	r8, #0, 10
    2154:	780f0000 	stmdavc	pc, {}	; <UNPREDICTABLE>
    2158:	04000008 	streq	r0, [r0], #-8
    215c:	05a90101 	streq	r0, [r9, #257]!	; 0x101
    2160:	34020000 	strcc	r0, [r2], #-0
    2164:	13de0405 	bicsne	r0, lr, #83886080	; 0x5000000
    2168:	12030000 	andne	r0, r3, #0
    216c:	05000002 	streq	r0, [r0, #-2]
    2170:	00024505 	andeq	r4, r2, r5, lsl #10
    2174:	4f030000 	svcmi	0x00030000
    2178:	05000002 	streq	r0, [r0, #-2]
    217c:	00024506 	andeq	r4, r2, r6, lsl #10
    2180:	18030400 	stmdane	r3, {sl}
    2184:	05000002 	streq	r0, [r0, #-2]
    2188:	00024507 	andeq	r4, r2, r7, lsl #10
    218c:	0c030800 	stceq	8, cr0, [r3], {-0}
    2190:	05000002 	streq	r0, [r0, #-2]
    2194:	00024508 	andeq	r4, r2, r8, lsl #10
    2198:	490b0c00 	stmdbmi	fp, {sl, fp}
    219c:	05005244 	streq	r5, [r0, #-580]	; 0xfffffdbc
    21a0:	00024509 	andeq	r4, r2, r9, lsl #10
    21a4:	4f0b1000 	svcmi	0x000b1000
    21a8:	05005244 	streq	r5, [r0, #-580]	; 0xfffffdbc
    21ac:	0002450a 	andeq	r4, r2, sl, lsl #10
    21b0:	07031400 	streq	r1, [r3, -r0, lsl #8]
    21b4:	05000002 	streq	r0, [r0, #-2]
    21b8:	0002450b 	andeq	r4, r2, fp, lsl #10
    21bc:	43031800 	movwmi	r1, #14336	; 0x3800
    21c0:	05000002 	streq	r0, [r0, #-2]
    21c4:	0002450c 	andeq	r4, r2, ip, lsl #10
    21c8:	56031c00 	strpl	r1, [r3], -r0, lsl #24
    21cc:	05000002 	streq	r0, [r0, #-2]
    21d0:	0002450d 	andeq	r4, r2, sp, lsl #10
    21d4:	67032000 	strvs	r2, [r3, -r0]
    21d8:	05000002 	streq	r0, [r0, #-2]
    21dc:	0002450e 	andeq	r4, r2, lr, lsl #10
    21e0:	420b2400 	andmi	r2, fp, #0, 8
    21e4:	05005252 	streq	r5, [r0, #-594]	; 0xfffffdae
    21e8:	0002450f 	andeq	r4, r2, pc, lsl #10
    21ec:	720b2800 	andvc	r2, fp, #0, 16
    21f0:	05007365 	streq	r7, [r0, #-869]	; 0xfffffc9b
    21f4:	00024510 	andeq	r4, r2, r0, lsl r5
    21f8:	e9032c00 	stmdb	r3, {sl, fp, sp}
    21fc:	05000001 	streq	r0, [r0, #-1]
    2200:	00024511 	andeq	r4, r2, r1, lsl r5
    2204:	08003000 	stmdaeq	r0, {ip, sp}
    2208:	0000023c 	andeq	r0, r0, ip, lsr r2
    220c:	13391305 	teqne	r9, #335544320	; 0x14000000
    2210:	58100000 	ldmdapl	r0, {}	; <UNPREDICTABLE>
    2214:	01000009 	tsteq	r0, r9
    2218:	009e1c67 	addseq	r1, lr, r7, ror #24
    221c:	000050c0 	andeq	r5, r0, r0, asr #1
    2220:	109c0100 	addsne	r0, ip, r0, lsl #2
    2224:	00000c31 	andeq	r0, r0, r1, lsr ip
    2228:	9c983801 	ldcls	8, cr3, [r8], {1}
    222c:	0184c000 	orreq	ip, r4, r0
    2230:	9c010000 	stcls	0, cr0, [r1], {-0}
    2234:	00073110 	andeq	r3, r7, r0, lsl r1
    2238:	74040100 	strvc	r0, [r4], #-256	; 0xffffff00
    223c:	24c0009a 	strbcs	r0, [r0], #154	; 0x9a
    2240:	01000002 	tsteq	r0, r2
    2244:	105c009c 			; <UNDEFINED> instruction: 0x105c009c
    2248:	00040000 	andeq	r0, r4, r0
    224c:	00000542 	andeq	r0, r0, r2, asr #10
    2250:	00520104 	subseq	r0, r2, r4, lsl #2
    2254:	fa0c0000 	blx	30225c <_start-0xbfd05da4>
    2258:	98000010 	stmdals	r0, {r4}
    225c:	6c000001 	stcvs	0, cr0, [r0], {1}
    2260:	8cc0009e 	stclhi	0, cr0, [r0], {158}	; 0x9e
    2264:	fd000003 	stc2	0, cr0, [r0, #-12]
    2268:	02000005 	andeq	r0, r0, #5
    226c:	be040230 	mcrlt	2, 0, r0, cr4, cr0, {1}
    2270:	03000000 	movweq	r0, #0
    2274:	00315243 	eorseq	r5, r1, r3, asr #4
    2278:	00c50502 	sbceq	r0, r5, r2, lsl #10
    227c:	03000000 	movweq	r0, #0
    2280:	00325243 	eorseq	r5, r2, r3, asr #4
    2284:	00c50602 	sbceq	r0, r5, r2, lsl #12
    2288:	03040000 	movweq	r0, #16384	; 0x4000
    228c:	00335243 	eorseq	r5, r3, r3, asr #4
    2290:	00c50702 	sbceq	r0, r5, r2, lsl #14
    2294:	03080000 	movweq	r0, #32768	; 0x8000
    2298:	00525242 	subseq	r5, r2, r2, asr #4
    229c:	00c50802 	sbceq	r0, r5, r2, lsl #16
    22a0:	040c0000 	streq	r0, [ip], #-0
    22a4:	00000220 	andeq	r0, r0, r0, lsr #4
    22a8:	00c50902 	sbceq	r0, r5, r2, lsl #18
    22ac:	04100000 	ldreq	r0, [r0], #-0
    22b0:	00000202 	andeq	r0, r0, r2, lsl #4
    22b4:	00c50a02 	sbceq	r0, r5, r2, lsl #20
    22b8:	03140000 	tsteq	r4, #0
    22bc:	00525152 	subseq	r5, r2, r2, asr r1
    22c0:	00c50b02 	sbceq	r0, r5, r2, lsl #22
    22c4:	03180000 	tsteq	r8, #0
    22c8:	00525349 	subseq	r5, r2, r9, asr #6
    22cc:	00c50c02 	sbceq	r0, r5, r2, lsl #24
    22d0:	031c0000 	tsteq	ip, #0
    22d4:	00524349 	subseq	r4, r2, r9, asr #6
    22d8:	00c50d02 	sbceq	r0, r5, r2, lsl #26
    22dc:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
    22e0:	00524452 	subseq	r4, r2, r2, asr r4
    22e4:	00c50e02 	sbceq	r0, r5, r2, lsl #28
    22e8:	03240000 			; <UNDEFINED> instruction: 0x03240000
    22ec:	00524454 	subseq	r4, r2, r4, asr r4
    22f0:	00c50f02 	sbceq	r0, r5, r2, lsl #30
    22f4:	04280000 	strteq	r0, [r8], #-0
    22f8:	00000225 	andeq	r0, r0, r5, lsr #4
    22fc:	00c51002 	sbceq	r1, r5, r2
    2300:	002c0000 	eoreq	r0, ip, r0
    2304:	f1070405 			; <UNDEFINED> instruction: 0xf1070405
    2308:	06000000 	streq	r0, [r0], -r0
    230c:	000000be 	strheq	r0, [r0], -lr
    2310:	00024807 	andeq	r4, r2, r7, lsl #16
    2314:	25110200 	ldrcs	r0, [r1, #-512]	; 0xfffffe00
    2318:	02000000 	andeq	r0, r0, #0
    231c:	7a040334 	bvc	102ff4 <_start-0xbff0500c>
    2320:	04000001 	streq	r0, [r0], #-1
    2324:	00000212 	andeq	r0, r0, r2, lsl r2
    2328:	00c50503 	sbceq	r0, r5, r3, lsl #10
    232c:	04000000 	streq	r0, [r0], #-0
    2330:	0000024f 	andeq	r0, r0, pc, asr #4
    2334:	00c50603 	sbceq	r0, r5, r3, lsl #12
    2338:	04040000 	streq	r0, [r4], #-0
    233c:	00000218 	andeq	r0, r0, r8, lsl r2
    2340:	00c50703 	sbceq	r0, r5, r3, lsl #14
    2344:	04080000 	streq	r0, [r8], #-0
    2348:	0000020c 	andeq	r0, r0, ip, lsl #4
    234c:	00c50803 	sbceq	r0, r5, r3, lsl #16
    2350:	030c0000 	movweq	r0, #49152	; 0xc000
    2354:	00524449 	subseq	r4, r2, r9, asr #8
    2358:	00c50903 	sbceq	r0, r5, r3, lsl #18
    235c:	03100000 	tsteq	r0, #0
    2360:	0052444f 	subseq	r4, r2, pc, asr #8
    2364:	00c50a03 	sbceq	r0, r5, r3, lsl #20
    2368:	04140000 	ldreq	r0, [r4], #-0
    236c:	00000207 	andeq	r0, r0, r7, lsl #4
    2370:	00c50b03 	sbceq	r0, r5, r3, lsl #22
    2374:	04180000 	ldreq	r0, [r8], #-0
    2378:	00000243 	andeq	r0, r0, r3, asr #4
    237c:	00c50c03 	sbceq	r0, r5, r3, lsl #24
    2380:	041c0000 	ldreq	r0, [ip], #-0
    2384:	00000256 	andeq	r0, r0, r6, asr r2
    2388:	00c50d03 	sbceq	r0, r5, r3, lsl #26
    238c:	04200000 	strteq	r0, [r0], #-0
    2390:	00000267 	andeq	r0, r0, r7, ror #4
    2394:	00c50e03 	sbceq	r0, r5, r3, lsl #28
    2398:	03240000 			; <UNDEFINED> instruction: 0x03240000
    239c:	00525242 	subseq	r5, r2, r2, asr #4
    23a0:	00c50f03 	sbceq	r0, r5, r3, lsl #30
    23a4:	03280000 			; <UNDEFINED> instruction: 0x03280000
    23a8:	00736572 	rsbseq	r6, r3, r2, ror r5
    23ac:	00c51003 	sbceq	r1, r5, r3
    23b0:	042c0000 	strteq	r0, [ip], #-0
    23b4:	000001e9 	andeq	r0, r0, r9, ror #3
    23b8:	00c51103 	sbceq	r1, r5, r3, lsl #2
    23bc:	00300000 	eorseq	r0, r0, r0
    23c0:	00023c07 	andeq	r3, r2, r7, lsl #24
    23c4:	d5130300 	ldrle	r0, [r3, #-768]	; 0xfffffd00
    23c8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    23cc:	04041000 	streq	r1, [r4], #-0
    23d0:	00000e37 	andeq	r0, r0, r7, lsr lr
    23d4:	00102d04 	andseq	r2, r0, r4, lsl #26
    23d8:	c5050400 	strgt	r0, [r5, #-1024]	; 0xfffffc00
    23dc:	00000000 	andeq	r0, r0, r0
    23e0:	0006c904 	andeq	ip, r6, r4, lsl #18
    23e4:	47060400 	strmi	r0, [r6, -r0, lsl #8]
    23e8:	0400000e 	streq	r0, [r0], #-14
    23ec:	00078004 	andeq	r8, r7, r4
    23f0:	c5070400 	strgt	r0, [r7, #-1024]	; 0xfffffc00
    23f4:	0c000000 	stceq	0, cr0, [r0], {-0}
    23f8:	000aa304 	andeq	sl, sl, r4, lsl #6
    23fc:	c5080400 	strgt	r0, [r8, #-1024]	; 0xfffffc00
    2400:	10000000 	andne	r0, r0, r0
    2404:	0006ce04 	andeq	ip, r6, r4, lsl #28
    2408:	5c090400 	cfstrspl	mvf0, [r9], {-0}
    240c:	1400000e 	strne	r0, [r0], #-14
    2410:	00093604 	andeq	r3, r9, r4, lsl #12
    2414:	c50a0400 	strgt	r0, [sl, #-1024]	; 0xfffffc00
    2418:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    241c:	000f2604 	andeq	r2, pc, r4, lsl #12
    2420:	c50b0400 	strgt	r0, [fp, #-1024]	; 0xfffffc00
    2424:	1c000000 	stcne	0, cr0, [r0], {-0}
    2428:	0008fd04 	andeq	pc, r8, r4, lsl #26
    242c:	c50c0400 	strgt	r0, [ip, #-1024]	; 0xfffffc00
    2430:	20000000 	andcs	r0, r0, r0
    2434:	000ff204 	andeq	pc, pc, r4, lsl #4
    2438:	c50d0400 	strgt	r0, [sp, #-1024]	; 0xfffffc00
    243c:	24000000 	strcs	r0, [r0], #-0
    2440:	0006b504 	andeq	fp, r6, r4, lsl #10
    2444:	c50e0400 	strgt	r0, [lr, #-1024]	; 0xfffffc00
    2448:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    244c:	000c8f04 	andeq	r8, ip, r4, lsl #30
    2450:	c50f0400 	strgt	r0, [pc, #-1024]	; 2058 <_start-0xc0005fa8>
    2454:	2c000000 	stccs	0, cr0, [r0], {-0}
    2458:	00052804 	andeq	r2, r5, r4, lsl #16
    245c:	c5100400 	ldrgt	r0, [r0, #-1024]	; 0xfffffc00
    2460:	30000000 	andcc	r0, r0, r0
    2464:	0006d304 	andeq	sp, r6, r4, lsl #6
    2468:	47110400 	ldrmi	r0, [r1, -r0, lsl #8]
    246c:	3400000e 	strcc	r0, [r0], #-14
    2470:	00092d04 	andeq	r2, r9, r4, lsl #26
    2474:	c5120400 	ldrgt	r0, [r2, #-1024]	; 0xfffffc00
    2478:	3c000000 	stccc	0, cr0, [r0], {-0}
    247c:	000d9504 	andeq	r9, sp, r4, lsl #10
    2480:	c5130400 	ldrgt	r0, [r3, #-1024]	; 0xfffffc00
    2484:	40000000 	andmi	r0, r0, r0
    2488:	000adb04 	andeq	sp, sl, r4, lsl #22
    248c:	c5140400 	ldrgt	r0, [r4, #-1024]	; 0xfffffc00
    2490:	44000000 	strmi	r0, [r0], #-0
    2494:	00071904 	andeq	r1, r7, r4, lsl #18
    2498:	c5150400 	ldrgt	r0, [r5, #-1024]	; 0xfffffc00
    249c:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    24a0:	0006d804 	andeq	sp, r6, r4, lsl #16
    24a4:	71160400 	tstvc	r6, r0, lsl #8
    24a8:	4c00000e 	stcmi	0, cr0, [r0], {14}
    24ac:	00100c04 	andseq	r0, r0, r4, lsl #24
    24b0:	c5170400 	ldrgt	r0, [r7, #-1024]	; 0xfffffc00
    24b4:	80000000 	andhi	r0, r0, r0
    24b8:	000a1d04 	andeq	r1, sl, r4, lsl #26
    24bc:	c5180400 	ldrgt	r0, [r8, #-1024]	; 0xfffffc00
    24c0:	84000000 	strhi	r0, [r0], #-0
    24c4:	000a2704 	andeq	r2, sl, r4, lsl #14
    24c8:	c5190400 	ldrgt	r0, [r9, #-1024]	; 0xfffffc00
    24cc:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    24d0:	0006bf04 	andeq	fp, r6, r4, lsl #30
    24d4:	c51a0400 	ldrgt	r0, [sl, #-1024]	; 0xfffffc00
    24d8:	8c000000 	stchi	0, cr0, [r0], {-0}
    24dc:	00089404 	andeq	r9, r8, r4, lsl #8
    24e0:	c51b0400 	ldrgt	r0, [fp, #-1024]	; 0xfffffc00
    24e4:	90000000 	andls	r0, r0, r0
    24e8:	000e1c04 	andeq	r1, lr, r4, lsl #24
    24ec:	c51c0400 	ldrgt	r0, [ip, #-1024]	; 0xfffffc00
    24f0:	94000000 	strls	r0, [r0], #-0
    24f4:	00062c04 	andeq	r2, r6, r4, lsl #24
    24f8:	c51d0400 	ldrgt	r0, [sp, #-1024]	; 0xfffffc00
    24fc:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
    2500:	000bd004 	andeq	sp, fp, r4
    2504:	c51e0400 	ldrgt	r0, [lr, #-1024]	; 0xfffffc00
    2508:	9c000000 	stcls	0, cr0, [r0], {-0}
    250c:	00083e04 	andeq	r3, r8, r4, lsl #28
    2510:	c51f0400 	ldrgt	r0, [pc, #-1024]	; 2118 <_start-0xc0005ee8>
    2514:	a0000000 	andge	r0, r0, r0
    2518:	00109904 	andseq	r9, r0, r4, lsl #18
    251c:	c5200400 	strgt	r0, [r0, #-1024]!	; 0xfffffc00
    2520:	a4000000 	strge	r0, [r0], #-0
    2524:	0006dd04 	andeq	sp, r6, r4, lsl #26
    2528:	86210400 	strthi	r0, [r1], -r0, lsl #8
    252c:	a800000e 	stmdage	r0, {r1, r2, r3}
    2530:	000fce04 	andeq	ip, pc, r4, lsl #28
    2534:	c5220400 	strgt	r0, [r2, #-1024]!	; 0xfffffc00
    2538:	c0000000 	andgt	r0, r0, r0
    253c:	00065904 	andeq	r5, r6, r4, lsl #18
    2540:	c5230400 	strgt	r0, [r3, #-1024]!	; 0xfffffc00
    2544:	c4000000 	strgt	r0, [r0], #-0
    2548:	00060704 	andeq	r0, r6, r4, lsl #14
    254c:	c5240400 	strgt	r0, [r4, #-1024]!	; 0xfffffc00
    2550:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
    2554:	000fb804 	andeq	fp, pc, r4, lsl #16
    2558:	c5250400 	strgt	r0, [r5, #-1024]!	; 0xfffffc00
    255c:	cc000000 	stcgt	0, cr0, [r0], {-0}
    2560:	000ca104 	andeq	sl, ip, r4, lsl #2
    2564:	c5260400 	strgt	r0, [r6, #-1024]!	; 0xfffffc00
    2568:	d0000000 	andle	r0, r0, r0
    256c:	000ae304 	andeq	lr, sl, r4, lsl #6
    2570:	c5270400 	strgt	r0, [r7, #-1024]!	; 0xfffffc00
    2574:	d4000000 	strle	r0, [r0], #-0
    2578:	000c9804 	andeq	r9, ip, r4, lsl #16
    257c:	c5280400 	strgt	r0, [r8, #-1024]!	; 0xfffffc00
    2580:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
    2584:	0006e204 	andeq	lr, r6, r4, lsl #4
    2588:	9b290400 	blls	a43590 <_start-0xbf5c4a70>
    258c:	dc00000e 	stcle	0, cr0, [r0], {14}
    2590:	00056009 	andeq	r6, r5, r9
    2594:	c52a0400 	strgt	r0, [sl, #-1024]!	; 0xfffffc00
    2598:	00000000 	andeq	r0, r0, r0
    259c:	0c3f0901 			; <UNDEFINED> instruction: 0x0c3f0901
    25a0:	2b040000 	blcs	1025a8 <_start-0xbff05a58>
    25a4:	000000c5 	andeq	r0, r0, r5, asr #1
    25a8:	2e090104 	adfcse	f0, f1, f4
    25ac:	0400000f 	streq	r0, [r0], #-15
    25b0:	0000c52c 	andeq	ip, r0, ip, lsr #10
    25b4:	09010800 	stmdbeq	r1, {fp}
    25b8:	00000d81 	andeq	r0, r0, r1, lsl #27
    25bc:	00c52d04 	sbceq	r2, r5, r4, lsl #26
    25c0:	010c0000 	mrseq	r0, (UNDEF: 12)
    25c4:	000cfc09 	andeq	pc, ip, r9, lsl #24
    25c8:	c52e0400 	strgt	r0, [lr, #-1024]!	; 0xfffffc00
    25cc:	10000000 	andne	r0, r0, r0
    25d0:	0e7e0901 	vaddeq.f16	s1, s28, s2	; <UNPREDICTABLE>
    25d4:	2f040000 	svccs	0x00040000
    25d8:	000000c5 	andeq	r0, r0, r5, asr #1
    25dc:	e7090114 	smlad	r9, r4, r1, r0
    25e0:	04000006 	streq	r0, [r0], #-6
    25e4:	000eb030 	andeq	fp, lr, r0, lsr r0
    25e8:	09011800 	stmdbeq	r1, {fp, ip}
    25ec:	00000fa7 	andeq	r0, r0, r7, lsr #31
    25f0:	00c53104 	sbceq	r3, r5, r4, lsl #2
    25f4:	01400000 	mrseq	r0, (UNDEF: 64)
    25f8:	000bb709 	andeq	fp, fp, r9, lsl #14
    25fc:	c5320400 	ldrgt	r0, [r2, #-1024]!	; 0xfffffc00
    2600:	44000000 	strmi	r0, [r0], #-0
    2604:	06ec0901 	strbteq	r0, [ip], r1, lsl #18
    2608:	33040000 	movwcc	r0, #16384	; 0x4000
    260c:	00000ec5 	andeq	r0, r0, r5, asr #29
    2610:	67090148 	strvs	r0, [r9, -r8, asr #2]
    2614:	04000010 	streq	r0, [r0], #-16
    2618:	0000c534 	andeq	ip, r0, r4, lsr r5
    261c:	09018000 	stmdbeq	r1, {pc}
    2620:	0000056a 	andeq	r0, r0, sl, ror #10
    2624:	00c53504 	sbceq	r3, r5, r4, lsl #10
    2628:	01840000 	orreq	r0, r4, r0
    262c:	000d0709 	andeq	r0, sp, r9, lsl #14
    2630:	c5360400 	ldrgt	r0, [r6, #-1024]!	; 0xfffffc00
    2634:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    2638:	0fac0901 	svceq	0x00ac0901
    263c:	37040000 	strcc	r0, [r4, -r0]
    2640:	000000c5 	andeq	r0, r0, r5, asr #1
    2644:	6609018c 	strvs	r0, [r9], -ip, lsl #3
    2648:	04000009 	streq	r0, [r0], #-9
    264c:	0000c538 	andeq	ip, r0, r8, lsr r5
    2650:	09019000 	stmdbeq	r1, {ip, pc}
    2654:	0000064d 	andeq	r0, r0, sp, asr #12
    2658:	00c53904 	sbceq	r3, r5, r4, lsl #18
    265c:	01940000 	orrseq	r0, r4, r0
    2660:	000cf009 	andeq	pc, ip, r9
    2664:	c53a0400 	ldrgt	r0, [sl, #-1024]!	; 0xfffffc00
    2668:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
    266c:	0a410901 	beq	1044a78 <_start-0xbefc3588>
    2670:	3b040000 	blcc	102678 <_start-0xbff05988>
    2674:	000000c5 	andeq	r0, r0, r5, asr #1
    2678:	8309019c 	movwhi	r0, #37276	; 0x919c
    267c:	04000006 	streq	r0, [r0], #-6
    2680:	0000c53c 	andeq	ip, r0, ip, lsr r5
    2684:	0901a000 	stmdbeq	r1, {sp, pc}
    2688:	00000a3f 	andeq	r0, r0, pc, lsr sl
    268c:	00c53d04 	sbceq	r3, r5, r4, lsl #26
    2690:	01a40000 			; <UNDEFINED> instruction: 0x01a40000
    2694:	0006f109 	andeq	pc, r6, r9, lsl #2
    2698:	da3e0400 	ble	f836a0 <_start-0xbf084960>
    269c:	a800000e 	stmdage	r0, {r1, r2, r3}
    26a0:	08090901 	stmdaeq	r9, {r0, r8, fp}
    26a4:	3f040000 	svccc	0x00040000
    26a8:	000000c5 	andeq	r0, r0, r5, asr #1
    26ac:	0c090200 	sfmeq	f0, 4, [r9], {-0}
    26b0:	0400000b 	streq	r0, [r0], #-11
    26b4:	0000c540 	andeq	ip, r0, r0, asr #10
    26b8:	09020400 	stmdbeq	r2, {sl}
    26bc:	00000ee7 	andeq	r0, r0, r7, ror #29
    26c0:	00c54104 	sbceq	r4, r5, r4, lsl #2
    26c4:	02080000 	andeq	r0, r8, #0
    26c8:	0005d209 	andeq	sp, r5, r9, lsl #4
    26cc:	c5420400 	strbgt	r0, [r2, #-1024]	; 0xfffffc00
    26d0:	0c000000 	stceq	0, cr0, [r0], {-0}
    26d4:	05000902 	streq	r0, [r0, #-2306]	; 0xfffff6fe
    26d8:	43040000 	movwmi	r0, #16384	; 0x4000
    26dc:	000000c5 	andeq	r0, r0, r5, asr #1
    26e0:	4a090210 	bmi	242f28 <_start-0xbfdc50d8>
    26e4:	0400000f 	streq	r0, [r0], #-15
    26e8:	0000c544 	andeq	ip, r0, r4, asr #10
    26ec:	09021400 	stmdbeq	r2, {sl, ip}
    26f0:	00000613 	andeq	r0, r0, r3, lsl r6
    26f4:	00c54504 	sbceq	r4, r5, r4, lsl #10
    26f8:	02180000 	andseq	r0, r8, #0
    26fc:	0008c609 	andeq	ip, r8, r9, lsl #12
    2700:	c5460400 	strbgt	r0, [r6, #-1024]	; 0xfffffc00
    2704:	1c000000 	stcne	0, cr0, [r0], {-0}
    2708:	0dee0902 			; <UNDEFINED> instruction: 0x0dee0902
    270c:	47040000 	strmi	r0, [r4, -r0]
    2710:	000000c5 	andeq	r0, r0, r5, asr #1
    2714:	d2090220 	andle	r0, r9, #32, 4
    2718:	04000004 	streq	r0, [r0], #-4
    271c:	0000c548 	andeq	ip, r0, r8, asr #10
    2720:	09022400 	stmdbeq	r2, {sl, sp}
    2724:	00000817 	andeq	r0, r0, r7, lsl r8
    2728:	0eda4904 	vfnmseq.f16	s9, s20, s8	; <UNPREDICTABLE>
    272c:	02280000 	eoreq	r0, r8, #0
    2730:	00063f09 	andeq	r3, r6, r9, lsl #30
    2734:	c54a0400 	strbgt	r0, [sl, #-1024]	; 0xfffffc00
    2738:	80000000 	andhi	r0, r0, r0
    273c:	09170902 	ldmdbeq	r7, {r1, r8, fp}
    2740:	4b040000 	blmi	102748 <_start-0xbff058b8>
    2744:	000000c5 	andeq	r0, r0, r5, asr #1
    2748:	31090284 	smlabbcc	r9, r4, r2, r0
    274c:	0400000d 	streq	r0, [r0], #-13
    2750:	0000c54c 	andeq	ip, r0, ip, asr #10
    2754:	09028800 	stmdbeq	r2, {fp, pc}
    2758:	00000fda 	ldrdeq	r0, [r0], -sl
    275c:	00c54d04 	sbceq	r4, r5, r4, lsl #26
    2760:	028c0000 	addeq	r0, ip, #0
    2764:	000a6b09 	andeq	r6, sl, r9, lsl #22
    2768:	c54e0400 	strbgt	r0, [lr, #-1024]	; 0xfffffc00
    276c:	90000000 	andls	r0, r0, r0
    2770:	0dd00902 	vldreq.16	s1, [r0, #4]	; <UNPREDICTABLE>
    2774:	4f040000 	svcmi	0x00040000
    2778:	000000c5 	andeq	r0, r0, r5, asr #1
    277c:	ca090294 	bgt	2431d4 <_start-0xbfdc4e2c>
    2780:	04000010 	streq	r0, [r0], #-16
    2784:	0000c550 	andeq	ip, r0, r0, asr r5
    2788:	09029800 	stmdbeq	r2, {fp, ip, pc}
    278c:	00000702 	andeq	r0, r0, r2, lsl #14
    2790:	00c55104 	sbceq	r5, r5, r4, lsl #2
    2794:	029c0000 	addseq	r0, ip, #0
    2798:	00053009 	andeq	r3, r5, r9
    279c:	ef520400 	svc	0x00520400
    27a0:	a000000e 	andge	r0, r0, lr
    27a4:	0f580902 	svceq	0x00580902
    27a8:	53040000 	movwpl	r0, #16384	; 0x4000
    27ac:	000000c5 	andeq	r0, r0, r5, asr #1
    27b0:	89090300 	stmdbhi	r9, {r8, r9}
    27b4:	04000007 	streq	r0, [r0], #-7
    27b8:	0000c554 	andeq	ip, r0, r4, asr r5
    27bc:	09030400 	stmdbeq	r3, {sl}
    27c0:	00000ea7 	andeq	r0, r0, r7, lsr #29
    27c4:	00c55504 	sbceq	r5, r5, r4, lsl #10
    27c8:	03080000 	movweq	r0, #32768	; 0x8000
    27cc:	0004f009 	andeq	pc, r4, r9
    27d0:	c5560400 	ldrbgt	r0, [r6, #-1024]	; 0xfffffc00
    27d4:	0c000000 	stceq	0, cr0, [r0], {-0}
    27d8:	0bfa0903 	bleq	ffe84bec <__bss_end__+0x3fe79faa>
    27dc:	57040000 	strpl	r0, [r4, -r0]
    27e0:	000000c5 	andeq	r0, r0, r5, asr #1
    27e4:	ff090310 			; <UNDEFINED> instruction: 0xff090310
    27e8:	0400000e 	streq	r0, [r0], #-14
    27ec:	0000c558 	andeq	ip, r0, r8, asr r5
    27f0:	09031400 	stmdbeq	r3, {sl, ip}
    27f4:	00000a79 	andeq	r0, r0, r9, ror sl
    27f8:	00c55904 	sbceq	r5, r5, r4, lsl #18
    27fc:	03180000 	tsteq	r8, #0
    2800:	0010a209 	andseq	sl, r0, r9, lsl #4
    2804:	c55a0400 	ldrbgt	r0, [sl, #-1024]	; 0xfffffc00
    2808:	1c000000 	stcne	0, cr0, [r0], {-0}
    280c:	07580903 	ldrbeq	r0, [r8, -r3, lsl #18]
    2810:	5b040000 	blpl	102818 <_start-0xbff057e8>
    2814:	000000c5 	andeq	r0, r0, r5, asr #1
    2818:	59090320 	stmdbpl	r9, {r5, r8, r9}
    281c:	0400000a 	streq	r0, [r0], #-10
    2820:	0000c55c 	andeq	ip, r0, ip, asr r5
    2824:	09032400 	stmdbeq	r3, {sl, sp}
    2828:	00000536 	andeq	r0, r0, r6, lsr r5
    282c:	0eda5d04 	cdpeq	13, 13, cr5, cr10, cr4, {0}
    2830:	03280000 			; <UNDEFINED> instruction: 0x03280000
    2834:	000aef09 	andeq	lr, sl, r9, lsl #30
    2838:	c55e0400 	ldrbgt	r0, [lr, #-1024]	; 0xfffffc00
    283c:	80000000 	andhi	r0, r0, r0
    2840:	0e890903 	vdiveq.f16	s0, s18, s6	; <UNPREDICTABLE>
    2844:	5f040000 	svcpl	0x00040000
    2848:	000000c5 	andeq	r0, r0, r5, asr #1
    284c:	4d090384 	stcmi	3, cr0, [r9, #-528]	; 0xfffffdf0
    2850:	0400000d 	streq	r0, [r0], #-13
    2854:	0000c560 	andeq	ip, r0, r0, ror #10
    2858:	09038800 	stmdbeq	r3, {fp, pc}
    285c:	00000ffc 	strdeq	r0, [r0], -ip
    2860:	00c56104 	sbceq	r6, r5, r4, lsl #2
    2864:	038c0000 	orreq	r0, ip, #0
    2868:	000eb709 	andeq	fp, lr, r9, lsl #14
    286c:	c5620400 	strbgt	r0, [r2, #-1024]!	; 0xfffffc00
    2870:	90000000 	andls	r0, r0, r0
    2874:	097e0903 	ldmdbeq	lr!, {r0, r1, r8, fp}^
    2878:	63040000 	movwvs	r0, #16384	; 0x4000
    287c:	000000c5 	andeq	r0, r0, r5, asr #1
    2880:	7e090394 	mcrvc	3, 0, r0, cr9, cr4, {4}
    2884:	04000008 	streq	r0, [r0], #-8
    2888:	0000c564 	andeq	ip, r0, r4, ror #10
    288c:	09039800 	stmdbeq	r3, {fp, ip, pc}
    2890:	00000ba7 	andeq	r0, r0, r7, lsr #23
    2894:	00c56504 	sbceq	r6, r5, r4, lsl #10
    2898:	039c0000 	orrseq	r0, ip, #0
    289c:	00053c09 	andeq	r3, r5, r9, lsl #24
    28a0:	ef660400 	svc	0x00660400
    28a4:	a000000e 	andge	r0, r0, lr
    28a8:	05e00903 	strbeq	r0, [r0, #2307]!	; 0x903
    28ac:	67040000 	strvs	r0, [r4, -r0]
    28b0:	000000c5 	andeq	r0, r0, r5, asr #1
    28b4:	ce090400 	cfcpysgt	mvf0, mvf9
    28b8:	04000009 	streq	r0, [r0], #-9
    28bc:	0000c568 	andeq	ip, r0, r8, ror #10
    28c0:	09040400 	stmdbeq	r4, {sl}
    28c4:	00000636 	andeq	r0, r0, r6, lsr r6
    28c8:	00c56904 	sbceq	r6, r5, r4, lsl #18
    28cc:	04080000 	streq	r0, [r8], #-0
    28d0:	000acd09 	andeq	ip, sl, r9, lsl #26
    28d4:	c56a0400 	strbgt	r0, [sl, #-1024]!	; 0xfffffc00
    28d8:	0c000000 	stceq	0, cr0, [r0], {-0}
    28dc:	0e700904 	vaddeq.f16	s1, s0, s8	; <UNPREDICTABLE>
    28e0:	6b040000 	blvs	1028e8 <_start-0xbff05718>
    28e4:	000000c5 	andeq	r0, r0, r5, asr #1
    28e8:	b6090410 			; <UNDEFINED> instruction: 0xb6090410
    28ec:	0400000c 	streq	r0, [r0], #-12
    28f0:	0000c56c 	andeq	ip, r0, ip, ror #10
    28f4:	09041400 	stmdbeq	r4, {sl, ip}
    28f8:	000005ca 	andeq	r0, r0, sl, asr #11
    28fc:	00c56d04 	sbceq	r6, r5, r4, lsl #26
    2900:	04180000 	ldreq	r0, [r8], #-0
    2904:	00098e09 	andeq	r8, r9, r9, lsl #28
    2908:	c56e0400 	strbgt	r0, [lr, #-1024]!	; 0xfffffc00
    290c:	1c000000 	stcne	0, cr0, [r0], {-0}
    2910:	0f0f0904 	svceq	0x000f0904
    2914:	6f040000 	svcvs	0x00040000
    2918:	000000c5 	andeq	r0, r0, r5, asr #1
    291c:	42090420 	andmi	r0, r9, #32, 8	; 0x20000000
    2920:	04000005 	streq	r0, [r0], #-5
    2924:	000f0470 	andeq	r0, pc, r0, ror r4	; <UNPREDICTABLE>
    2928:	09042400 	stmdbeq	r4, {sl, sp}
    292c:	00000865 	andeq	r0, r0, r5, ror #16
    2930:	00c57104 	sbceq	r7, r5, r4, lsl #2
    2934:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2938:	000ac409 	andeq	ip, sl, r9, lsl #8
    293c:	c5720400 	ldrbgt	r0, [r2, #-1024]!	; 0xfffffc00
    2940:	04000000 	streq	r0, [r0], #-0
    2944:	10320908 	eorsne	r0, r2, r8, lsl #18
    2948:	73040000 	movwvc	r0, #16384	; 0x4000
    294c:	000000c5 	andeq	r0, r0, r5, asr #1
    2950:	ac090808 	stcge	8, cr0, [r9], {8}
    2954:	0400000a 	streq	r0, [r0], #-10
    2958:	0000c574 	andeq	ip, r0, r4, ror r5
    295c:	09080c00 	stmdbeq	r8, {sl, fp}
    2960:	00000548 	andeq	r0, r0, r8, asr #10
    2964:	0f197504 	svceq	0x00197504
    2968:	08100000 	ldmdaeq	r0, {}	; <UNPREDICTABLE>
    296c:	000d2309 	andeq	r2, sp, r9, lsl #6
    2970:	c5760400 	ldrbgt	r0, [r6, #-1024]!	; 0xfffffc00
    2974:	20000000 	andcs	r0, r0, r0
    2978:	08000908 	stmdaeq	r0, {r3, r8, fp}
    297c:	77040000 	strvc	r0, [r4, -r0]
    2980:	000000c5 	andeq	r0, r0, r5, asr #1
    2984:	13090824 	movwne	r0, #38948	; 0x9824
    2988:	04000010 	streq	r0, [r0], #-16
    298c:	0000c578 	andeq	ip, r0, r8, ror r5
    2990:	09082800 	stmdbeq	r8, {fp, sp}
    2994:	00000b52 	andeq	r0, r0, r2, asr fp
    2998:	00c57904 	sbceq	r7, r5, r4, lsl #18
    299c:	082c0000 	stmdaeq	ip!, {}	; <UNPREDICTABLE>
    29a0:	000d6b09 	andeq	r6, sp, r9, lsl #22
    29a4:	c57a0400 	ldrbgt	r0, [sl, #-1024]!	; 0xfffffc00
    29a8:	30000000 	andcc	r0, r0, r0
    29ac:	06ac0908 	strteq	r0, [ip], r8, lsl #18
    29b0:	7b040000 	blvc	1029b8 <_start-0xbff05648>
    29b4:	000000c5 	andeq	r0, r0, r5, asr #1
    29b8:	2a090834 	bcs	244a90 <_start-0xbfdc3570>
    29bc:	0400000b 	streq	r0, [r0], #-11
    29c0:	0000c57c 	andeq	ip, r0, ip, ror r5
    29c4:	09083800 	stmdbeq	r8, {fp, ip, sp}
    29c8:	000009db 	ldrdeq	r0, [r0], -fp
    29cc:	00c57d04 	sbceq	r7, r5, r4, lsl #26
    29d0:	083c0000 	ldmdaeq	ip!, {}	; <UNPREDICTABLE>
    29d4:	00054e09 	andeq	r4, r5, r9, lsl #28
    29d8:	2e7e0400 	cdpcs	4, 7, cr0, cr14, cr0, {0}
    29dc:	4000000f 	andmi	r0, r0, pc
    29e0:	0b5c0908 	bleq	1704e08 <_start-0xbe9031f8>
    29e4:	7f040000 	svcvc	0x00040000
    29e8:	000000c5 	andeq	r0, r0, r5, asr #1
    29ec:	23090880 	movwcs	r0, #39040	; 0x9880
    29f0:	04000010 	streq	r0, [r0], #-16
    29f4:	0000c580 	andeq	ip, r0, r0, lsl #11
    29f8:	09088400 	stmdbeq	r8, {sl, pc}
    29fc:	00000d9e 	muleq	r0, lr, sp
    2a00:	00c58104 	sbceq	r8, r5, r4, lsl #2
    2a04:	08880000 	stmeq	r8, {}	; <UNPREDICTABLE>
    2a08:	000cd609 	andeq	sp, ip, r9, lsl #12
    2a0c:	c5820400 	strgt	r0, [r2, #1024]	; 0x400
    2a10:	8c000000 	stchi	0, cr0, [r0], {-0}
    2a14:	0c280908 			; <UNDEFINED> instruction: 0x0c280908
    2a18:	83040000 	movwhi	r0, #16384	; 0x4000
    2a1c:	000000c5 	andeq	r0, r0, r5, asr #1
    2a20:	bf090890 	svclt	0x00090890
    2a24:	0400000b 	streq	r0, [r0], #-11
    2a28:	0000c584 	andeq	ip, r0, r4, lsl #11
    2a2c:	09089400 	stmdbeq	r8, {sl, ip, pc}
    2a30:	00000bda 	ldrdeq	r0, [r0], -sl
    2a34:	00c58504 	sbceq	r8, r5, r4, lsl #10
    2a38:	08980000 	ldmeq	r8, {}	; <UNPREDICTABLE>
    2a3c:	000ef509 	andeq	pc, lr, r9, lsl #10
    2a40:	c5860400 	strgt	r0, [r6, #1024]	; 0x400
    2a44:	9c000000 	stcls	0, cr0, [r0], {-0}
    2a48:	0b710908 	bleq	1c44e70 <_start-0xbe3c3190>
    2a4c:	87040000 	strhi	r0, [r4, -r0]
    2a50:	000000c5 	andeq	r0, r0, r5, asr #1
    2a54:	100908a0 	andne	r0, r9, r0, lsr #17
    2a58:	04000007 	streq	r0, [r0], #-7
    2a5c:	0000c588 	andeq	ip, r0, r8, lsl #11
    2a60:	0908a400 	stmdbeq	r8, {sl, sp, pc}
    2a64:	00000554 	andeq	r0, r0, r4, asr r5
    2a68:	0e868904 	vdiveq.f16	s16, s12, s8	; <UNPREDICTABLE>
    2a6c:	08a80000 	stmiaeq	r8!, {}	; <UNPREDICTABLE>
    2a70:	0009f409 	andeq	pc, r9, r9, lsl #8
    2a74:	c58a0400 	strgt	r0, [sl, #1024]	; 0x400
    2a78:	c0000000 	andgt	r0, r0, r0
    2a7c:	09c20908 	stmibeq	r2, {r3, r8, fp}^
    2a80:	8b040000 	blhi	102a88 <_start-0xbff05578>
    2a84:	000000c5 	andeq	r0, r0, r5, asr #1
    2a88:	210908c4 	smlabtcs	r9, r4, r8, r0
    2a8c:	04000006 	streq	r0, [r0], #-6
    2a90:	0000c58c 	andeq	ip, r0, ip, lsl #11
    2a94:	0908c800 	stmdbeq	r8, {fp, lr, pc}
    2a98:	00000f68 	andeq	r0, r0, r8, ror #30
    2a9c:	00c58d04 	sbceq	r8, r5, r4, lsl #26
    2aa0:	08cc0000 	stmiaeq	ip, {}^	; <UNPREDICTABLE>
    2aa4:	0008f209 	andeq	pc, r8, r9, lsl #4
    2aa8:	c58e0400 	strgt	r0, [lr, #1024]	; 0x400
    2aac:	d0000000 	andle	r0, r0, r0
    2ab0:	0fc30908 	svceq	0x00c30908
    2ab4:	8f040000 	svchi	0x00040000
    2ab8:	000000c5 	andeq	r0, r0, r5, asr #1
    2abc:	880908d4 	stmdahi	r9, {r2, r4, r6, r7, fp}
    2ac0:	0400000d 	streq	r0, [r0], #-13
    2ac4:	0000c590 	muleq	r0, r0, r5
    2ac8:	0908d800 	stmdbeq	r8, {fp, ip, lr, pc}
    2acc:	00000a89 	andeq	r0, r0, r9, lsl #21
    2ad0:	00c59104 	sbceq	r9, r5, r4, lsl #2
    2ad4:	08dc0000 	ldmeq	ip, {}^	; <UNPREDICTABLE>
    2ad8:	000f8b09 	andeq	r8, pc, r9, lsl #22
    2adc:	c5920400 	ldrgt	r0, [r2, #1024]	; 0x400
    2ae0:	e0000000 	and	r0, r0, r0
    2ae4:	0dc40908 	vstreq.16	s1, [r4, #16]	; <UNPREDICTABLE>
    2ae8:	93040000 	movwls	r0, #16384	; 0x4000
    2aec:	000000c5 	andeq	r0, r0, r5, asr #1
    2af0:	480908e4 	stmdami	r9, {r2, r5, r6, r7, fp}
    2af4:	04000008 	streq	r0, [r0], #-8
    2af8:	0000c594 	muleq	r0, r4, r5
    2afc:	0908e800 	stmdbeq	r8, {fp, sp, lr, pc}
    2b00:	00000aff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    2b04:	00c59504 	sbceq	r9, r5, r4, lsl #10
    2b08:	08ec0000 	stmiaeq	ip!, {}^	; <UNPREDICTABLE>
    2b0c:	00067009 	andeq	r7, r6, r9
    2b10:	c5960400 	ldrgt	r0, [r6, #1024]	; 0x400
    2b14:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    2b18:	0c4b0908 	mcrreq	9, 0, r0, fp, cr8	; <UNPREDICTABLE>
    2b1c:	97040000 	strls	r0, [r4, -r0]
    2b20:	000000c5 	andeq	r0, r0, r5, asr #1
    2b24:	bd0908f4 	stclt	8, cr0, [r9, #-976]	; 0xfffffc30
    2b28:	04000005 	streq	r0, [r0], #-5
    2b2c:	0000c598 	muleq	r0, r8, r5
    2b30:	0908f800 	stmdbeq	r8, {fp, ip, sp, lr, pc}
    2b34:	0000076a 	andeq	r0, r0, sl, ror #14
    2b38:	00c59904 	sbceq	r9, r5, r4, lsl #18
    2b3c:	08fc0000 	ldmeq	ip!, {}^	; <UNPREDICTABLE>
    2b40:	0008b309 	andeq	fp, r8, r9, lsl #6
    2b44:	c59a0400 	ldrgt	r0, [sl, #1024]	; 0x400
    2b48:	00000000 	andeq	r0, r0, r0
    2b4c:	10810909 	addne	r0, r1, r9, lsl #18
    2b50:	9b040000 	blls	102b58 <_start-0xbff054a8>
    2b54:	000000c5 	andeq	r0, r0, r5, asr #1
    2b58:	8e090904 	vmlahi.f16	s0, s18, s8	; <UNPREDICTABLE>
    2b5c:	04000008 	streq	r0, [r0], #-8
    2b60:	000e5c9c 	muleq	lr, ip, ip
    2b64:	09090800 	stmdbeq	r9, {fp}
    2b68:	0000089d 	muleq	r0, sp, r8
    2b6c:	00c59d04 	sbceq	r9, r5, r4, lsl #26
    2b70:	090c0000 	stmdbeq	ip, {}	; <UNPREDICTABLE>
    2b74:	00055a09 	andeq	r5, r5, r9, lsl #20
    2b78:	5c9e0400 	cfldrspl	mvf0, [lr], {0}
    2b7c:	1000000e 	andne	r0, r0, lr
    2b80:	0e230909 	vmuleq.f16	s0, s6, s18	; <UNPREDICTABLE>
    2b84:	9f040000 	svcls	0x00040000
    2b88:	000000c5 	andeq	r0, r0, r5, asr #1
    2b8c:	ac090914 			; <UNDEFINED> instruction: 0xac090914
    2b90:	0400000c 	streq	r0, [r0], #-12
    2b94:	0000c5a0 	andeq	ip, r0, r0, lsr #11
    2b98:	09091800 	stmdbeq	r9, {fp, ip}
    2b9c:	00000fe8 	andeq	r0, r0, r8, ror #31
    2ba0:	00c5a104 	sbceq	sl, r5, r4, lsl #2
    2ba4:	091c0000 	ldmdbeq	ip, {}	; <UNPREDICTABLE>
    2ba8:	00093e09 	andeq	r3, r9, r9, lsl #28
    2bac:	c5a20400 	strgt	r0, [r2, #1024]!	; 0x400
    2bb0:	20000000 	andcs	r0, r0, r0
    2bb4:	074e0909 	strbeq	r0, [lr, -r9, lsl #18]
    2bb8:	a3040000 	movwge	r0, #16384	; 0x4000
    2bbc:	000000c5 	andeq	r0, r0, r5, asr #1
    2bc0:	be090924 	vmlalt.f16	s0, s18, s9	; <UNPREDICTABLE>
    2bc4:	0400000c 	streq	r0, [r0], #-12
    2bc8:	0000c5a4 	andeq	ip, r0, r4, lsr #11
    2bcc:	09092800 	stmdbeq	r9, {fp, sp}
    2bd0:	00000723 	andeq	r0, r0, r3, lsr #14
    2bd4:	00c5a504 	sbceq	sl, r5, r4, lsl #10
    2bd8:	092c0000 	stmdbeq	ip!, {}	; <UNPREDICTABLE>
    2bdc:	000e2f09 	andeq	r2, lr, r9, lsl #30
    2be0:	c5a60400 	strgt	r0, [r6, #1024]!	; 0x400
    2be4:	30000000 	andcc	r0, r0, r0
    2be8:	05ec0909 	strbeq	r0, [ip, #2313]!	; 0x909
    2bec:	a7040000 	strge	r0, [r4, -r0]
    2bf0:	000000c5 	andeq	r0, r0, r5, asr #1
    2bf4:	64090934 	strvs	r0, [r9], #-2356	; 0xfffff6cc
    2bf8:	04000006 	streq	r0, [r0], #-6
    2bfc:	000f43a8 	andeq	r4, pc, r8, lsr #7
    2c00:	09093800 	stmdbeq	r9, {fp, ip, sp}
    2c04:	00000b8b 	andeq	r0, r0, fp, lsl #23
    2c08:	00c5a904 	sbceq	sl, r5, r4, lsl #18
    2c0c:	09800000 	stmibeq	r0, {}	; <UNPREDICTABLE>
    2c10:	0005b109 	andeq	fp, r5, r9, lsl #2
    2c14:	c5aa0400 	strgt	r0, [sl, #1024]!	; 0x400
    2c18:	84000000 	strhi	r0, [r0], #-0
    2c1c:	07740909 	ldrbeq	r0, [r4, -r9, lsl #18]!
    2c20:	ab040000 	blge	102c28 <_start-0xbff053d8>
    2c24:	000000c5 	andeq	r0, r0, r5, asr #1
    2c28:	a0090988 	andge	r0, r9, r8, lsl #19
    2c2c:	04000006 	streq	r0, [r0], #-6
    2c30:	0000c5ac 	andeq	ip, r0, ip, lsr #11
    2c34:	09098c00 	stmdbeq	r9, {sl, fp, pc}
    2c38:	00000972 	andeq	r0, r0, r2, ror r9
    2c3c:	00c5ad04 	sbceq	sl, r5, r4, lsl #26
    2c40:	09900000 	ldmibeq	r0, {}	; <UNPREDICTABLE>
    2c44:	000a9709 	andeq	r9, sl, r9, lsl #14
    2c48:	c5ae0400 	strgt	r0, [lr, #1024]!	; 0x400
    2c4c:	94000000 	strls	r0, [r0], #-0
    2c50:	07f40909 	ldrbeq	r0, [r4, r9, lsl #18]!
    2c54:	af040000 	svcge	0x00040000
    2c58:	000000c5 	andeq	r0, r0, r5, asr #1
    2c5c:	b8090998 	stmdalt	r9, {r3, r4, r7, r8, fp}
    2c60:	0400000d 	streq	r0, [r0], #-13
    2c64:	0000c5b0 			; <UNDEFINED> instruction: 0x0000c5b0
    2c68:	09099c00 	stmdbeq	r9, {sl, fp, ip, pc}
    2c6c:	00000999 	muleq	r0, r9, r9
    2c70:	00c5b104 	sbceq	fp, r5, r4, lsl #2
    2c74:	09a00000 	stmibeq	r0!, {}	; <UNPREDICTABLE>
    2c78:	000a4d09 	andeq	r4, sl, r9, lsl #26
    2c7c:	c5b20400 	ldrgt	r0, [r2, #1024]!	; 0x400
    2c80:	a4000000 	strge	r0, [r0], #-0
    2c84:	09b60909 	ldmibeq	r6!, {r0, r3, r8, fp}
    2c88:	b3040000 	movwlt	r0, #16384	; 0x4000
    2c8c:	000000c5 	andeq	r0, r0, r5, asr #1
    2c90:	f60909a8 			; <UNDEFINED> instruction: 0xf60909a8
    2c94:	04000006 	streq	r0, [r0], #-6
    2c98:	0000c5b4 			; <UNDEFINED> instruction: 0x0000c5b4
    2c9c:	0909ac00 	stmdbeq	r9, {sl, fp, sp, pc}
    2ca0:	0000066a 	andeq	r0, r0, sl, ror #12
    2ca4:	0f58b504 	svceq	0x0058b504
    2ca8:	09b00000 	ldmibeq	r0!, {}	; <UNPREDICTABLE>
    2cac:	000a3109 	andeq	r3, sl, r9, lsl #2
    2cb0:	c5b60400 	ldrgt	r0, [r6, #1024]!	; 0x400
    2cb4:	00000000 	andeq	r0, r0, r0
    2cb8:	0d73090a 			; <UNDEFINED> instruction: 0x0d73090a
    2cbc:	b7040000 	strlt	r0, [r4, -r0]
    2cc0:	000000c5 	andeq	r0, r0, r5, asr #1
    2cc4:	63090a04 	movwvs	r0, #39428	; 0x9a04
    2cc8:	0400000b 	streq	r0, [r0], #-11
    2ccc:	0000c5b8 			; <UNDEFINED> instruction: 0x0000c5b8
    2cd0:	090a0800 	stmdbeq	sl, {fp}
    2cd4:	00000e0e 	andeq	r0, r0, lr, lsl #28
    2cd8:	00c5b904 	sbceq	fp, r5, r4, lsl #18
    2cdc:	0a0c0000 	beq	302ce4 <_start-0xbfd0531c>
    2ce0:	000ec709 	andeq	ip, lr, r9, lsl #14
    2ce4:	c5ba0400 	ldrgt	r0, [sl, #1024]!	; 0x400
    2ce8:	10000000 	andne	r0, r0, r0
    2cec:	0514090a 	ldreq	r0, [r4, #-2314]	; 0xfffff6f6
    2cf0:	bb040000 	bllt	102cf8 <_start-0xbff05308>
    2cf4:	000000c5 	andeq	r0, r0, r5, asr #1
    2cf8:	99090a14 	stmdbls	r9, {r2, r4, r9, fp}
    2cfc:	0400000e 	streq	r0, [r0], #-14
    2d00:	0000c5bc 			; <UNDEFINED> instruction: 0x0000c5bc
    2d04:	090a1800 	stmdbeq	sl, {fp, ip}
    2d08:	000004e2 	andeq	r0, r0, r2, ror #9
    2d0c:	00c5bd04 	sbceq	fp, r5, r4, lsl #26
    2d10:	0a1c0000 	beq	702d18 <_start-0xbf9052e8>
    2d14:	000c1a09 	andeq	r1, ip, r9, lsl #20
    2d18:	c5be0400 	ldrgt	r0, [lr, #1024]!	; 0x400
    2d1c:	20000000 	andcs	r0, r0, r0
    2d20:	0f18090a 	svceq	0x0018090a
    2d24:	bf040000 	svclt	0x00040000
    2d28:	000000c5 	andeq	r0, r0, r5, asr #1
    2d2c:	e4090a24 	str	r0, [r9], #-2596	; 0xfffff5dc
    2d30:	04000008 	streq	r0, [r0], #-8
    2d34:	0000c5c0 	andeq	ip, r0, r0, asr #11
    2d38:	090a2800 	stmdbeq	sl, {fp, sp}
    2d3c:	00000799 	muleq	r0, r9, r7
    2d40:	00c5c104 	sbceq	ip, r5, r4, lsl #2
    2d44:	0a2c0000 	beq	b02d4c <_start-0xbf5052b4>
    2d48:	000c8909 	andeq	r8, ip, r9, lsl #18
    2d4c:	47c20400 	strbmi	r0, [r2, r0, lsl #8]
    2d50:	3000000e 	andcc	r0, r0, lr
    2d54:	0691090a 	ldreq	r0, [r1], sl, lsl #18
    2d58:	c3040000 	movwgt	r0, #16384	; 0x4000
    2d5c:	000000c5 	andeq	r0, r0, r5, asr #1
    2d60:	49090a38 	stmdbmi	r9, {r3, r4, r5, r9, fp}
    2d64:	04000009 	streq	r0, [r0], #-9
    2d68:	0000c5c4 	andeq	ip, r0, r4, asr #11
    2d6c:	090a3c00 	stmdbeq	sl, {sl, fp, ip, sp}
    2d70:	0000067d 	andeq	r0, r0, sp, ror r6
    2d74:	0f2ec504 	svceq	0x002ec504
    2d78:	0a400000 	beq	1002d80 <_start-0xbf005280>
    2d7c:	0010d809 	andseq	sp, r0, r9, lsl #16
    2d80:	c5c60400 	strbgt	r0, [r6, #1024]	; 0x400
    2d84:	80000000 	andhi	r0, r0, r0
    2d88:	1039090a 	eorsne	r0, r9, sl, lsl #18
    2d8c:	c7040000 	strgt	r0, [r4, -r0]
    2d90:	000000c5 	andeq	r0, r0, r5, asr #1
    2d94:	f9090a84 			; <UNDEFINED> instruction: 0xf9090a84
    2d98:	04000005 	streq	r0, [r0], #-5
    2d9c:	0000c5c8 	andeq	ip, r0, r8, asr #11
    2da0:	090a8800 	stmdbeq	sl, {fp, pc}
    2da4:	0000108b 	andeq	r1, r0, fp, lsl #1
    2da8:	00c5c904 	sbceq	ip, r5, r4, lsl #18
    2dac:	0a8c0000 	beq	fe302db4 <__bss_end__+0x3e2f8172>
    2db0:	000cc809 	andeq	ip, ip, r9, lsl #16
    2db4:	c5ca0400 	strbgt	r0, [sl, #1024]	; 0x400
    2db8:	90000000 	andls	r0, r0, r0
    2dbc:	0b44090a 	bleq	11051ec <_start-0xbef02e14>
    2dc0:	cb040000 	blgt	102dc8 <_start-0xbff05238>
    2dc4:	000000c5 	andeq	r0, r0, r5, asr #1
    2dc8:	3f090a94 	svccc	0x00090a94
    2dcc:	0400000d 	streq	r0, [r0], #-13
    2dd0:	0000c5cc 	andeq	ip, r0, ip, asr #11
    2dd4:	090a9800 	stmdbeq	sl, {fp, ip, pc}
    2dd8:	000005a3 	andeq	r0, r0, r3, lsr #11
    2ddc:	00c5cd04 	sbceq	ip, r5, r4, lsl #26
    2de0:	0a9c0000 	beq	fe702de8 <__bss_end__+0x3e6f81a6>
    2de4:	000a0f09 	andeq	r0, sl, r9, lsl #30
    2de8:	c5ce0400 	strbgt	r0, [lr, #1024]	; 0x400
    2dec:	a0000000 	andge	r0, r0, r0
    2df0:	0d5d090a 	vldreq.16	s1, [sp, #-20]	; 0xffffffec	; <UNPREDICTABLE>
    2df4:	cf040000 	svcgt	0x00040000
    2df8:	000000c5 	andeq	r0, r0, r5, asr #1
    2dfc:	73090aa4 	movwvc	r0, #39588	; 0x9aa4
    2e00:	04000010 	streq	r0, [r0], #-16
    2e04:	0000c5d0 	ldrdeq	ip, [r0], -r0
    2e08:	090aa800 	stmdbeq	sl, {fp, sp, pc}
    2e0c:	000007e6 	andeq	r0, r0, r6, ror #15
    2e10:	00c5d104 	sbceq	sp, r5, r4, lsl #2
    2e14:	0aac0000 	beq	feb02e1c <__bss_end__+0x3eaf81da>
    2e18:	000f7d09 	andeq	r7, pc, r9, lsl #26
    2e1c:	c5d20400 	ldrbgt	r0, [r2, #1024]	; 0x400
    2e20:	b0000000 	andlt	r0, r0, r0
    2e24:	07d8090a 	ldrbeq	r0, [r8, sl, lsl #18]
    2e28:	d3040000 	movwle	r0, #16384	; 0x4000
    2e2c:	000000c5 	andeq	r0, r0, r5, asr #1
    2e30:	00090ab4 			; <UNDEFINED> instruction: 0x00090ab4
    2e34:	0400000a 	streq	r0, [r0], #-10
    2e38:	0000c5d4 	ldrdeq	ip, [r0], -r4
    2e3c:	090ab800 	stmdbeq	sl, {fp, ip, sp, pc}
    2e40:	0000073f 	andeq	r0, r0, pc, lsr r7
    2e44:	00c5d504 	sbceq	sp, r5, r4, lsl #10
    2e48:	0abc0000 	beq	fef02e50 <__bss_end__+0x3eef820e>
    2e4c:	000be409 	andeq	lr, fp, r9, lsl #8
    2e50:	2ed60400 	cdpcs	4, 13, cr0, cr6, cr0, {0}
    2e54:	c000000f 	andgt	r0, r0, pc
    2e58:	0f97090a 	svceq	0x0097090a
    2e5c:	d7040000 	strle	r0, [r4, -r0]
    2e60:	000000c5 	andeq	r0, r0, r5, asr #1
    2e64:	47090b00 	strmi	r0, [r9, -r0, lsl #22]
    2e68:	04000010 	streq	r0, [r0], #-16
    2e6c:	0000c5d8 	ldrdeq	ip, [r0], -r8
    2e70:	090b0400 	stmdbeq	fp, {sl}
    2e74:	00001057 	andeq	r1, r0, r7, asr r0
    2e78:	00c5d904 	sbceq	sp, r5, r4, lsl #18
    2e7c:	0b080000 	bleq	202e84 <_start-0xbfe0517c>
    2e80:	000b7b09 	andeq	r7, fp, r9, lsl #22
    2e84:	c5da0400 	ldrbgt	r0, [sl, #1024]	; 0x400
    2e88:	0c000000 	stceq	0, cr0, [r0], {-0}
    2e8c:	0e60090b 	vmuleq.f16	s1, s0, s22	; <UNPREDICTABLE>
    2e90:	db040000 	blle	102e98 <_start-0xbff05168>
    2e94:	000000c5 	andeq	r0, r0, r5, asr #1
    2e98:	de090b10 	vmovle.32	d9[0], r0
    2e9c:	0400000d 	streq	r0, [r0], #-13
    2ea0:	0000c5dc 	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    2ea4:	090b1400 	stmdbeq	fp, {sl, ip}
    2ea8:	00000855 	andeq	r0, r0, r5, asr r8
    2eac:	00c5dd04 	sbceq	sp, r5, r4, lsl #26
    2eb0:	0b180000 	bleq	602eb8 <_start-0xbfa05148>
    2eb4:	0008d409 	andeq	sp, r8, r9, lsl #8
    2eb8:	c5de0400 	ldrbgt	r0, [lr, #1024]	; 0x400
    2ebc:	1c000000 	stcne	0, cr0, [r0], {-0}
    2ec0:	07c8090b 	strbeq	r0, [r8, fp, lsl #18]
    2ec4:	df040000 	svcle	0x00040000
    2ec8:	000000c5 	andeq	r0, r0, r5, asr #1
    2ecc:	a8090b20 	stmdage	r9, {r5, r8, r9, fp}
    2ed0:	0400000d 	streq	r0, [r0], #-13
    2ed4:	0000c5e0 	andeq	ip, r0, r0, ror #11
    2ed8:	090b2400 	stmdbeq	fp, {sl, sp}
    2edc:	000009e4 	andeq	r0, r0, r4, ror #19
    2ee0:	00c5e104 	sbceq	lr, r5, r4, lsl #2
    2ee4:	0b280000 	bleq	a02eec <_start-0xbf605114>
    2ee8:	00059309 	andeq	r9, r5, r9, lsl #6
    2eec:	c5e20400 	strbgt	r0, [r2, #1024]!	; 0x400
    2ef0:	2c000000 	stccs	0, cr0, [r0], {-0}
    2ef4:	0c69090b 			; <UNDEFINED> instruction: 0x0c69090b
    2ef8:	e3040000 	movw	r0, #16384	; 0x4000
    2efc:	000000c5 	andeq	r0, r0, r5, asr #1
    2f00:	ea090b30 	b	245bc8 <_start-0xbfdc2438>
    2f04:	0400000b 	streq	r0, [r0], #-11
    2f08:	0000c5e4 	andeq	ip, r0, r4, ror #11
    2f0c:	090b3400 	stmdbeq	fp, {sl, ip, sp}
    2f10:	000007a7 	andeq	r0, r0, r7, lsr #15
    2f14:	00c5e504 	sbceq	lr, r5, r4, lsl #10
    2f18:	0b380000 	bleq	e02f20 <_start-0xbf2050e0>
    2f1c:	00090609 	andeq	r0, r9, r9, lsl #12
    2f20:	c5e60400 	strbgt	r0, [r6, #1024]!	; 0x400
    2f24:	3c000000 	stccc	0, cr0, [r0], {-0}
    2f28:	057d090b 	ldrbeq	r0, [sp, #-2315]!	; 0xfffff6f5
    2f2c:	e7040000 	str	r0, [r4, -r0]
    2f30:	00000f2e 	andeq	r0, r0, lr, lsr #30
    2f34:	83090b40 	movwhi	r0, #39744	; 0x9b40
    2f38:	04000005 	streq	r0, [r0], #-5
    2f3c:	0000c5e8 	andeq	ip, r0, r8, ror #11
    2f40:	090b8000 	stmdbeq	fp, {pc}
    2f44:	0000082e 	andeq	r0, r0, lr, lsr #16
    2f48:	00c5e904 	sbceq	lr, r5, r4, lsl #18
    2f4c:	0b840000 	bleq	fe102f54 <__bss_end__+0x3e0f8312>
    2f50:	000b1a09 	andeq	r1, fp, r9, lsl #20
    2f54:	c5ea0400 	strbgt	r0, [sl, #1024]!	; 0x400
    2f58:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    2f5c:	0e48090b 	vmlaeq.f16	s1, s16, s22	; <UNPREDICTABLE>
    2f60:	eb040000 	bl	102f68 <_start-0xbff05098>
    2f64:	000000c5 	andeq	r0, r0, r5, asr #1
    2f68:	b4090b8c 	strlt	r0, [r9], #-2956	; 0xfffff474
    2f6c:	0400000a 	streq	r0, [r0], #-10
    2f70:	0000c5ec 	andeq	ip, r0, ip, ror #11
    2f74:	090b9000 	stmdbeq	fp, {ip, pc}
    2f78:	00000c79 	andeq	r0, r0, r9, ror ip
    2f7c:	00c5ed04 	sbceq	lr, r5, r4, lsl #26
    2f80:	0b940000 	bleq	fe502f88 <__bss_end__+0x3e4f8346>
    2f84:	000c5909 	andeq	r5, ip, r9, lsl #18
    2f88:	c5ee0400 	strbgt	r0, [lr, #1024]!	; 0x400
    2f8c:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
    2f90:	0d13090b 	vldreq.16	s0, [r3, #-22]	; 0xffffffea	; <UNPREDICTABLE>
    2f94:	ef040000 	svc	0x00040000
    2f98:	000000c5 	andeq	r0, r0, r5, asr #1
    2f9c:	97090b9c 			; <UNDEFINED> instruction: 0x97090b9c
    2fa0:	0400000b 	streq	r0, [r0], #-11
    2fa4:	0000c5f0 	strdeq	ip, [r0], -r0
    2fa8:	090ba000 	stmdbeq	fp, {sp, pc}
    2fac:	000010ba 	strheq	r1, [r0], -sl
    2fb0:	00c5f104 	sbceq	pc, r5, r4, lsl #2
    2fb4:	0ba40000 	bleq	fe902fbc <__bss_end__+0x3e8f837a>
    2fb8:	000c0a09 	andeq	r0, ip, r9, lsl #20
    2fbc:	c5f20400 	ldrbgt	r0, [r2, #1024]!	; 0x400
    2fc0:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
    2fc4:	0dfe090b 			; <UNDEFINED> instruction: 0x0dfe090b
    2fc8:	f3040000 	vhadd.u8	d0, d4, d0
    2fcc:	000000c5 	andeq	r0, r0, r5, asr #1
    2fd0:	b8090bac 	stmdalt	r9, {r2, r3, r5, r7, r8, r9, fp}
    2fd4:	04000007 	streq	r0, [r0], #-7
    2fd8:	0000c5f4 	strdeq	ip, [r0], -r4
    2fdc:	090bb000 	stmdbeq	fp, {ip, sp, pc}
    2fe0:	00000ce0 	andeq	r0, r0, r0, ror #25
    2fe4:	00c5f504 	sbceq	pc, r5, r4, lsl #10
    2fe8:	0bb40000 	bleq	fed02ff0 <__bss_end__+0x3ecf83ae>
    2fec:	00081d09 	andeq	r1, r8, r9, lsl #26
    2ff0:	c5f60400 	ldrbgt	r0, [r6, #1024]!	; 0x400
    2ff4:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
    2ff8:	0b33090b 	bleq	cc542c <_start-0xbf342bd4>
    2ffc:	f7040000 			; <UNDEFINED> instruction: 0xf7040000
    3000:	000000c5 	andeq	r0, r0, r5, asr #1
    3004:	44090bbc 	strmi	r0, [r9], #-3004	; 0xfffff444
    3008:	0400000f 	streq	r0, [r0], #-15
    300c:	000f2ef8 	strdeq	r2, [pc], -r8
    3010:	090bc000 	stmdbeq	fp, {lr, pc}
    3014:	000009a5 	andeq	r0, r0, r5, lsr #19
    3018:	00c5f904 	sbceq	pc, r5, r4, lsl #18
    301c:	0c000000 	stceq	0, cr0, [r0], {-0}
    3020:	00050e09 	andeq	r0, r5, r9, lsl #28
    3024:	19fa0400 	ldmibne	sl!, {sl}^
    3028:	0400000f 	streq	r0, [r0], #-15
    302c:	0925090c 	stmdbeq	r5!, {r2, r3, r8, fp}
    3030:	fb040000 	blx	10303a <_start-0xbff04fc6>
    3034:	000000c5 	andeq	r0, r0, r5, asr #1
    3038:	b2090c14 	andlt	r0, r9, #20, 24	; 0x1400
    303c:	04000010 	streq	r0, [r0], #-16
    3040:	0000c5fc 	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    3044:	090c1800 	stmdbeq	ip, {fp, ip}
    3048:	00000522 	andeq	r0, r0, r2, lsr #10
    304c:	0f6dfd04 	svceq	0x006dfd04
    3050:	0c1c0000 	ldceq	0, cr0, [ip], {-0}
    3054:	000d2c09 	andeq	r2, sp, r9, lsl #24
    3058:	c5fe0400 	ldrbgt	r0, [lr, #1024]!	; 0x400
    305c:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    3060:	44490a0f 	strbmi	r0, [r9], #-2575	; 0xfffff5f1
    3064:	ff040052 			; <UNDEFINED> instruction: 0xff040052
    3068:	000000c5 	andeq	r0, r0, r5, asr #1
    306c:	b10b0ff8 	strdlt	r0, [fp, -r8]
    3070:	04000009 	streq	r0, [r0], #-9
    3074:	00c50100 	sbceq	r0, r5, r0, lsl #2
    3078:	0ffc0000 	svceq	0x00fc0000
    307c:	00c50c00 	sbceq	r0, r5, r0, lsl #24
    3080:	0e470000 	cdpeq	0, 4, cr0, cr7, cr0, {0}
    3084:	be0d0000 	cdplt	0, 0, cr0, cr13, cr0, {0}
    3088:	01000000 	mrseq	r0, (UNDEF: 0)
    308c:	0e370600 	cfmsuba32eq	mvax0, mvax0, mvfx7, mvfx0
    3090:	c50c0000 	strgt	r0, [ip, #-0]
    3094:	5c000000 	stcpl	0, cr0, [r0], {-0}
    3098:	0d00000e 	stceq	0, cr0, [r0, #-56]	; 0xffffffc8
    309c:	000000be 	strheq	r0, [r0], -lr
    30a0:	4c060000 	stcmi	0, cr0, [r6], {-0}
    30a4:	0c00000e 	stceq	0, cr0, [r0], {14}
    30a8:	000000c5 	andeq	r0, r0, r5, asr #1
    30ac:	00000e71 	andeq	r0, r0, r1, ror lr
    30b0:	0000be0d 	andeq	fp, r0, sp, lsl #28
    30b4:	06000c00 	streq	r0, [r0], -r0, lsl #24
    30b8:	00000e61 	andeq	r0, r0, r1, ror #28
    30bc:	0000c50c 	andeq	ip, r0, ip, lsl #10
    30c0:	000e8600 	andeq	r8, lr, r0, lsl #12
    30c4:	00be0d00 	adcseq	r0, lr, r0, lsl #26
    30c8:	00050000 	andeq	r0, r5, r0
    30cc:	000e7606 	andeq	r7, lr, r6, lsl #12
    30d0:	00c50c00 	sbceq	r0, r5, r0, lsl #24
    30d4:	0e9b0000 	cdpeq	0, 9, cr0, cr11, cr0, {0}
    30d8:	be0d0000 	cdplt	0, 0, cr0, cr13, cr0, {0}
    30dc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    30e0:	0e8b0600 	cdpeq	6, 8, cr0, cr11, cr0, {0}
    30e4:	c50c0000 	strgt	r0, [ip, #-0]
    30e8:	b0000000 	andlt	r0, r0, r0
    30ec:	0d00000e 	stceq	0, cr0, [r0, #-56]	; 0xffffffc8
    30f0:	000000be 	strheq	r0, [r0], -lr
    30f4:	a0060009 	andge	r0, r6, r9
    30f8:	0c00000e 	stceq	0, cr0, [r0], {14}
    30fc:	000000c5 	andeq	r0, r0, r5, asr #1
    3100:	00000ec5 	andeq	r0, r0, r5, asr #29
    3104:	0000be0d 	andeq	fp, r0, sp, lsl #28
    3108:	06000d00 	streq	r0, [r0], -r0, lsl #26
    310c:	00000eb5 			; <UNDEFINED> instruction: 0x00000eb5
    3110:	0000c50c 	andeq	ip, r0, ip, lsl #10
    3114:	000eda00 	andeq	sp, lr, r0, lsl #20
    3118:	00be0d00 	adcseq	r0, lr, r0, lsl #26
    311c:	00150000 	andseq	r0, r5, r0
    3120:	000eca06 	andeq	ip, lr, r6, lsl #20
    3124:	00c50c00 	sbceq	r0, r5, r0, lsl #24
    3128:	0eef0000 	cdpeq	0, 14, cr0, cr15, cr0, {0}
    312c:	be0d0000 	cdplt	0, 0, cr0, cr13, cr0, {0}
    3130:	17000000 	strne	r0, [r0, -r0]
    3134:	0edf0600 	cdpeq	6, 13, cr0, cr15, cr0, {0}
    3138:	c50c0000 	strgt	r0, [ip, #-0]
    313c:	04000000 	streq	r0, [r0], #-0
    3140:	0d00000f 	stceq	0, cr0, [r0, #-60]	; 0xffffffc4
    3144:	000000be 	strheq	r0, [r0], -lr
    3148:	f40600f6 	vst4.<illegal width 64>	{d0-d3}, [r6 :256], r6
    314c:	0c00000e 	stceq	0, cr0, [r0], {14}
    3150:	000000c5 	andeq	r0, r0, r5, asr #1
    3154:	00000f19 	andeq	r0, r0, r9, lsl pc
    3158:	0000be0d 	andeq	fp, r0, sp, lsl #28
    315c:	06000300 	streq	r0, [r0], -r0, lsl #6
    3160:	00000f09 	andeq	r0, r0, r9, lsl #30
    3164:	0000c50c 	andeq	ip, r0, ip, lsl #10
    3168:	000f2e00 	andeq	r2, pc, r0, lsl #28
    316c:	00be0d00 	adcseq	r0, lr, r0, lsl #26
    3170:	000f0000 	andeq	r0, pc, r0
    3174:	000f1e06 	andeq	r1, pc, r6, lsl #28
    3178:	00c50c00 	sbceq	r0, r5, r0, lsl #24
    317c:	0f430000 	svceq	0x00430000
    3180:	be0d0000 	cdplt	0, 0, cr0, cr13, cr0, {0}
    3184:	11000000 	mrsne	r0, (UNDEF: 0)
    3188:	0f330600 	svceq	0x00330600
    318c:	c50c0000 	strgt	r0, [ip, #-0]
    3190:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
    3194:	0d00000f 	stceq	0, cr0, [r0, #-60]	; 0xffffffc4
    3198:	000000be 	strheq	r0, [r0], -lr
    319c:	48060013 	stmdami	r6, {r0, r1, r4}
    31a0:	0c00000f 	stceq	0, cr0, [r0], {15}
    31a4:	000000c5 	andeq	r0, r0, r5, asr #1
    31a8:	00000f6d 	andeq	r0, r0, sp, ror #30
    31ac:	0000be0d 	andeq	fp, r0, sp, lsl #28
    31b0:	0600f500 	streq	pc, [r0], -r0, lsl #10
    31b4:	00000f5d 	andeq	r0, r0, sp, asr pc
    31b8:	0008780e 	andeq	r7, r8, lr, lsl #16
    31bc:	01010400 	tsteq	r1, r0, lsl #8
    31c0:	00000185 	andeq	r0, r0, r5, lsl #3
    31c4:	000f8e0c 	andeq	r8, pc, ip, lsl #28
    31c8:	000f8e00 	andeq	r8, pc, r0, lsl #28
    31cc:	00be0d00 	adcseq	r0, lr, r0, lsl #26
    31d0:	00090000 	andeq	r0, r9, r0
    31d4:	e7080105 	str	r0, [r8, -r5, lsl #2]
    31d8:	0f000000 	svceq	0x00000000
    31dc:	00000f8e 	andeq	r0, r0, lr, lsl #31
    31e0:	00111a10 	andseq	r1, r1, r0, lsl sl
    31e4:	7e030100 	adfvcs	f0, f3, f0
    31e8:	1100000f 	tstne	r0, pc
    31ec:	000010e6 	andeq	r1, r0, r6, ror #1
    31f0:	0fcb5a01 	svceq	0x00cb5a01
    31f4:	a1300000 	teqge	r0, r0
    31f8:	00c8c000 	sbceq	ip, r8, r0
    31fc:	9c010000 	stcls	0, cr0, [r1], {-0}
    3200:	00000fcb 	andeq	r0, r0, fp, asr #31
    3204:	01006912 	tsteq	r0, r2, lsl r9
    3208:	000fd162 	andeq	sp, pc, r2, ror #2
    320c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    3210:	8e041300 	cdphi	3, 0, cr1, cr4, cr0, {0}
    3214:	1400000f 	strne	r0, [r0], #-15
    3218:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    321c:	f1150074 			; <UNDEFINED> instruction: 0xf1150074
    3220:	01000010 	tsteq	r0, r0, lsl r0
    3224:	000f8e4e 	andeq	r8, pc, lr, asr #28
    3228:	00a0e400 	adceq	lr, r0, r0, lsl #8
    322c:	00004cc0 	andeq	r4, r0, r0, asr #25
    3230:	009c0100 	addseq	r0, ip, r0, lsl #2
    3234:	12000010 	andne	r0, r0, #16
    3238:	00746572 	rsbseq	r6, r4, r2, ror r5
    323c:	0f8e5001 	svceq	0x008e5001
    3240:	91020000 	mrsls	r0, (UNDEF: 2)
    3244:	0616007b 			; <UNDEFINED> instruction: 0x0616007b
    3248:	01000011 	tsteq	r0, r1, lsl r0
    324c:	00a09c3a 	adceq	r9, r0, sl, lsr ip
    3250:	000048c0 	andeq	r4, r0, r0, asr #17
    3254:	249c0100 	ldrcs	r0, [ip], #256	; 0x100
    3258:	17000010 	smladne	r0, r0, r0, r0
    325c:	000010ea 	andeq	r1, r0, sl, ror #1
    3260:	10243a01 	eorne	r3, r4, r1, lsl #20
    3264:	91020000 	mrsls	r0, (UNDEF: 2)
    3268:	04130074 	ldreq	r0, [r3], #-116	; 0xffffff8c
    326c:	00000f95 	muleq	r0, r5, pc	; <UNPREDICTABLE>
    3270:	00111116 	andseq	r1, r1, r6, lsl r1
    3274:	20270100 	eorcs	r0, r7, r0, lsl #2
    3278:	7cc000a0 	stclvc	0, cr0, [r0], {160}	; 0xa0
    327c:	01000000 	mrseq	r0, (UNDEF: 0)
    3280:	00104e9c 	mulseq	r0, ip, lr
    3284:	74731800 	ldrbtvc	r1, [r3], #-2048	; 0xfffff800
    3288:	27010072 	smlsdxcs	r1, r2, r0, r0
    328c:	00000f95 	muleq	r0, r5, pc	; <UNPREDICTABLE>
    3290:	00749102 	rsbseq	r9, r4, r2, lsl #2
    3294:	00111f19 	andseq	r1, r1, r9, lsl pc
    3298:	6c050100 	stfvss	f0, [r5], {-0}
    329c:	b4c0009e 	strblt	r0, [r0], #158	; 0x9e
    32a0:	01000001 	tsteq	r0, r1
    32a4:	00a4009c 	umlaleq	r0, r4, ip, r0
    32a8:	00040000 	andeq	r0, r4, r0
    32ac:	000006b6 			; <UNDEFINED> instruction: 0x000006b6
    32b0:	00520104 	subseq	r0, r2, r4, lsl #2
    32b4:	2e0c0000 	cdpcs	0, 0, cr0, cr12, cr0, {0}
    32b8:	98000011 	stmdals	r0, {r0, r4}
    32bc:	f8000001 			; <UNDEFINED> instruction: 0xf8000001
    32c0:	88c000a1 	stmiahi	r0, {r0, r5, r7}^
    32c4:	d6000000 	strle	r0, [r0], -r0
    32c8:	02000006 	andeq	r0, r0, #6
    32cc:	00f10704 	rscseq	r0, r1, r4, lsl #14
    32d0:	3c030000 	stccc	0, cr0, [r3], {-0}
    32d4:	3c000000 	stccc	0, cr0, [r0], {-0}
    32d8:	04000000 	streq	r0, [r0], #-0
    32dc:	00000025 	andeq	r0, r0, r5, lsr #32
    32e0:	01020009 	tsteq	r2, r9
    32e4:	0000e708 	andeq	lr, r0, r8, lsl #14
    32e8:	111a0500 	tstne	sl, r0, lsl #10
    32ec:	04010000 	streq	r0, [r1], #-0
    32f0:	0000002c 	andeq	r0, r0, ip, lsr #32
    32f4:	ac380305 	ldcge	3, cr0, [r8], #-20	; 0xffffffec
    32f8:	3506c000 	strcc	ip, [r6, #-0]
    32fc:	01000011 	tsteq	r0, r1, lsl r0
    3300:	0000690d 	andeq	r6, r0, sp, lsl #18
    3304:	00a26800 	adceq	r6, r2, r0, lsl #16
    3308:	000018c0 	andeq	r1, r0, r0, asr #17
    330c:	079c0100 	ldreq	r0, [ip, r0, lsl #2]
    3310:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    3314:	3a080074 	bcc	2034ec <_start-0xbfe04b14>
    3318:	01000011 	tsteq	r0, r1, lsl r0
    331c:	00a1f805 	adceq	pc, r1, r5, lsl #16
    3320:	000070c0 	andeq	r7, r0, r0, asr #1
    3324:	099c0100 	ldmibeq	ip, {r8}
    3328:	0100736d 	tsteq	r0, sp, ror #6
    332c:	00006905 	andeq	r6, r0, r5, lsl #18
    3330:	70910200 	addsvc	r0, r1, r0, lsl #4
    3334:	0100690a 	tsteq	r0, sl, lsl #18
    3338:	00006907 	andeq	r6, r0, r7, lsl #18
    333c:	78910200 	ldmvc	r1, {r9}
    3340:	01006a0a 	tsteq	r0, sl, lsl #20
    3344:	00006907 	andeq	r6, r0, r7, lsl #18
    3348:	74910200 	ldrvc	r0, [r1], #512	; 0x200
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	10001101 	andne	r1, r0, r1, lsl #2
   4:	12011106 	andne	r1, r1, #-2147483647	; 0x80000001
   8:	1b080301 	blne	200c14 <_start-0xbfe073ec>
   c:	13082508 	movwne	r2, #34056	; 0x8508
  10:	00000005 	andeq	r0, r0, r5
  14:	10001101 	andne	r1, r0, r1, lsl #2
  18:	12011106 	andne	r1, r1, #-2147483647	; 0x80000001
  1c:	1b080301 	blne	200c28 <_start-0xbfe073d8>
  20:	13082508 	movwne	r2, #34056	; 0x8508
  24:	00000005 	andeq	r0, r0, r5
  28:	10001101 	andne	r1, r0, r1, lsl #2
  2c:	12011106 	andne	r1, r1, #-2147483647	; 0x80000001
  30:	1b080301 	blne	200c3c <_start-0xbfe073c4>
  34:	13082508 	movwne	r2, #34056	; 0x8508
  38:	00000005 	andeq	r0, r0, r5
  3c:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
  40:	030b130e 	movweq	r1, #45838	; 0xb30e
  44:	110e1b0e 	tstne	lr, lr, lsl #22
  48:	10061201 	andne	r1, r6, r1, lsl #4
  4c:	02000017 	andeq	r0, r0, #23
  50:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
  54:	0b3b0b3a 	bleq	ec2d44 <_start-0xbf1452bc>
  58:	00001349 	andeq	r1, r0, r9, asr #6
  5c:	0b000f03 	bleq	3c70 <_start-0xc0004390>
  60:	000e030b 	andeq	r0, lr, fp, lsl #6
  64:	01010400 	tsteq	r1, r0, lsl #8
  68:	13011349 	movwne	r1, #4937	; 0x1349
  6c:	21050000 	mrscs	r0, (UNDEF: 5)
  70:	2f134900 	svccs	0x00134900
  74:	0600000b 	streq	r0, [r0], -fp
  78:	0b0b0024 	bleq	2c0110 <_start-0xbfd47ef0>
  7c:	0e030b3e 	vmoveq.16	d3[0], r0
  80:	34070000 	strcc	r0, [r7], #-0
  84:	3a0e0300 	bcc	380c8c <_start-0xbfc87374>
  88:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  8c:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
  90:	08000018 	stmdaeq	r0, {r3, r4}
  94:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  98:	0b3a0e03 	bleq	e838ac <_start-0xbf184754>
  9c:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
  a0:	06120111 			; <UNDEFINED> instruction: 0x06120111
  a4:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  a8:	00130119 	andseq	r0, r3, r9, lsl r1
  ac:	00050900 	andeq	r0, r5, r0, lsl #18
  b0:	0b3a0803 	bleq	e820c4 <_start-0xbf185f3c>
  b4:	1349053b 	movtne	r0, #38203	; 0x953b
  b8:	00001802 	andeq	r1, r0, r2, lsl #16
  bc:	0000180a 	andeq	r1, r0, sl, lsl #16
  c0:	00340b00 	eorseq	r0, r4, r0, lsl #22
  c4:	0b3a0e03 	bleq	e838d8 <_start-0xbf184728>
  c8:	1349053b 	movtne	r0, #38203	; 0x953b
  cc:	00001802 	andeq	r1, r0, r2, lsl #16
  d0:	0b000f0c 	bleq	3d08 <_start-0xc00042f8>
  d4:	0013490b 	andseq	r4, r3, fp, lsl #18
  d8:	00260d00 	eoreq	r0, r6, r0, lsl #26
  dc:	00001349 	andeq	r1, r0, r9, asr #6
  e0:	3f012e0e 	svccc	0x00012e0e
  e4:	3a0e0319 	bcc	380d50 <_start-0xbfc872b0>
  e8:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
  ec:	11134919 	tstne	r3, r9, lsl r9
  f0:	40061201 	andmi	r1, r6, r1, lsl #4
  f4:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
  f8:	00001301 	andeq	r1, r0, r1, lsl #6
  fc:	0300340f 	movweq	r3, #1039	; 0x40f
 100:	3b0b3a08 	blcc	2ce928 <_start-0xbfd396d8>
 104:	02134905 	andseq	r4, r3, #81920	; 0x14000
 108:	10000018 	andne	r0, r0, r8, lsl r0
 10c:	0b0b0024 	bleq	2c01a4 <_start-0xbfd47e5c>
 110:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 114:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
 118:	03193f01 	tsteq	r9, #1, 30
 11c:	3b0b3a0e 	blcc	2ce95c <_start-0xbfd396a4>
 120:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
 124:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 128:	96184006 	ldrls	r4, [r8], -r6
 12c:	13011942 	movwne	r1, #6466	; 0x1942
 130:	05120000 	ldreq	r0, [r2, #-0]
 134:	3a080300 	bcc	200d3c <_start-0xbfe072c4>
 138:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 13c:	00180213 	andseq	r0, r8, r3, lsl r2
 140:	00051300 	andeq	r1, r5, r0, lsl #6
 144:	0b3a0e03 	bleq	e83958 <_start-0xbf1846a8>
 148:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 14c:	00001802 	andeq	r1, r0, r2, lsl #16
 150:	03003414 	movweq	r3, #1044	; 0x414
 154:	3b0b3a08 	blcc	2ce97c <_start-0xbfd39684>
 158:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 15c:	15000018 	strne	r0, [r0, #-24]	; 0xffffffe8
 160:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 164:	0b3b0b3a 	bleq	ec2e54 <_start-0xbf1451ac>
 168:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 16c:	0a160000 	beq	580174 <_start-0xbfa87e8c>
 170:	3a0e0300 	bcc	380d78 <_start-0xbfc87288>
 174:	110b3b0b 	tstne	fp, fp, lsl #22
 178:	17000001 	strne	r0, [r0, -r1]
 17c:	0111010b 	tsteq	r1, fp, lsl #2
 180:	13010612 	movwne	r0, #5650	; 0x1612
 184:	0b180000 	bleq	60018c <_start-0xbfa07e74>
 188:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
 18c:	19000006 	stmdbne	r0, {r1, r2}
 190:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 194:	0b3a0e03 	bleq	e839a8 <_start-0xbf184658>
 198:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 19c:	01111349 	tsteq	r1, r9, asr #6
 1a0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 1a4:	01194297 			; <UNDEFINED> instruction: 0x01194297
 1a8:	1a000013 	bne	1fc <_start-0xc0007e04>
 1ac:	0e03012e 	adfeqsp	f0, f3, #0.5
 1b0:	0b3b0b3a 	bleq	ec2ea0 <_start-0xbf145160>
 1b4:	13491927 	movtne	r1, #39207	; 0x9927
 1b8:	06120111 			; <UNDEFINED> instruction: 0x06120111
 1bc:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 1c0:	00130119 	andseq	r0, r3, r9, lsl r1
 1c4:	012e1b00 			; <UNDEFINED> instruction: 0x012e1b00
 1c8:	0b3a0e03 	bleq	e839dc <_start-0xbf184624>
 1cc:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 1d0:	01111349 	tsteq	r1, r9, asr #6
 1d4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 1d8:	01194297 			; <UNDEFINED> instruction: 0x01194297
 1dc:	1c000013 	stcne	0, cr0, [r0], {19}
 1e0:	0e03012e 	adfeqsp	f0, f3, #0.5
 1e4:	0b3b0b3a 	bleq	ec2ed4 <_start-0xbf14512c>
 1e8:	13491927 	movtne	r1, #39207	; 0x9927
 1ec:	06120111 			; <UNDEFINED> instruction: 0x06120111
 1f0:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 1f4:	00000019 	andeq	r0, r0, r9, lsl r0
 1f8:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 1fc:	030b130e 	movweq	r1, #45838	; 0xb30e
 200:	110e1b0e 	tstne	lr, lr, lsl #22
 204:	10061201 	andne	r1, r6, r1, lsl #4
 208:	02000017 	andeq	r0, r0, #23
 20c:	0b0b0113 	bleq	2c0660 <_start-0xbfd479a0>
 210:	0b3b0b3a 	bleq	ec2f00 <_start-0xbf145100>
 214:	00001301 	andeq	r1, r0, r1, lsl #6
 218:	03000d03 	movweq	r0, #3331	; 0xd03
 21c:	3b0b3a0e 	blcc	2cea5c <_start-0xbfd395a4>
 220:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 224:	0400000b 	streq	r0, [r0], #-11
 228:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 22c:	0b3b0b3a 	bleq	ec2f1c <_start-0xbf1450e4>
 230:	0b381349 	bleq	e04f5c <_start-0xbf2030a4>
 234:	24050000 	strcs	r0, [r5], #-0
 238:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 23c:	000e030b 	andeq	r0, lr, fp, lsl #6
 240:	00350600 	eorseq	r0, r5, r0, lsl #12
 244:	00001349 	andeq	r1, r0, r9, asr #6
 248:	03001607 	movweq	r1, #1543	; 0x607
 24c:	3b0b3a0e 	blcc	2cea8c <_start-0xbfd39574>
 250:	0013490b 	andseq	r4, r3, fp, lsl #18
 254:	012e0800 			; <UNDEFINED> instruction: 0x012e0800
 258:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 25c:	0b3b0b3a 	bleq	ec2f4c <_start-0xbf1450b4>
 260:	13491927 	movtne	r1, #39207	; 0x9927
 264:	06120111 			; <UNDEFINED> instruction: 0x06120111
 268:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 26c:	00130119 	andseq	r0, r3, r9, lsl r1
 270:	00340900 	eorseq	r0, r4, r0, lsl #18
 274:	0b3a0803 	bleq	e82288 <_start-0xbf185d78>
 278:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 27c:	00001802 	andeq	r1, r0, r2, lsl #16
 280:	4900260a 	stmdbmi	r0, {r1, r3, r9, sl, sp}
 284:	0b000013 	bleq	2d8 <_start-0xc0007d28>
 288:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 28c:	0b3a0e03 	bleq	e83aa0 <_start-0xbf184560>
 290:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 294:	06120111 			; <UNDEFINED> instruction: 0x06120111
 298:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 29c:	00130119 	andseq	r0, r3, r9, lsl r1
 2a0:	00050c00 	andeq	r0, r5, r0, lsl #24
 2a4:	0b3a0e03 	bleq	e83ab8 <_start-0xbf184548>
 2a8:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 2ac:	00001802 	andeq	r1, r0, r2, lsl #16
 2b0:	0b000f0d 	bleq	3eec <_start-0xc0004114>
 2b4:	0013490b 	andseq	r4, r3, fp, lsl #18
 2b8:	002e0e00 	eoreq	r0, lr, r0, lsl #28
 2bc:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 2c0:	0b3b0b3a 	bleq	ec2fb0 <_start-0xbf145050>
 2c4:	06120111 			; <UNDEFINED> instruction: 0x06120111
 2c8:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 2cc:	00000019 	andeq	r0, r0, r9, lsl r0
 2d0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 2d4:	030b130e 	movweq	r1, #45838	; 0xb30e
 2d8:	110e1b0e 	tstne	lr, lr, lsl #22
 2dc:	10061201 	andne	r1, r6, r1, lsl #4
 2e0:	02000017 	andeq	r0, r0, #23
 2e4:	0b0b0113 	bleq	2c0738 <_start-0xbfd478c8>
 2e8:	0b3b0b3a 	bleq	ec2fd8 <_start-0xbf145028>
 2ec:	00001301 	andeq	r1, r0, r1, lsl #6
 2f0:	03000d03 	movweq	r0, #3331	; 0xd03
 2f4:	3b0b3a0e 	blcc	2ceb34 <_start-0xbfd394cc>
 2f8:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 2fc:	0400000b 	streq	r0, [r0], #-11
 300:	0b0b0024 	bleq	2c0398 <_start-0xbfd47c68>
 304:	0e030b3e 	vmoveq.16	d3[0], r0
 308:	35050000 	strcc	r0, [r5, #-0]
 30c:	00134900 	andseq	r4, r3, r0, lsl #18
 310:	01010600 	tsteq	r1, r0, lsl #12
 314:	13011349 	movwne	r1, #4937	; 0x1349
 318:	21070000 	mrscs	r0, (UNDEF: 7)
 31c:	2f134900 	svccs	0x00134900
 320:	0800000b 	stmdaeq	r0, {r0, r1, r3}
 324:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
 328:	0b3b0b3a 	bleq	ec3018 <_start-0xbf144fe8>
 32c:	00001349 	andeq	r1, r0, r9, asr #6
 330:	0b011309 	bleq	44f5c <_start-0xbffc30a4>
 334:	3b0b3a05 	blcc	2ceb50 <_start-0xbfd394b0>
 338:	0013010b 	andseq	r0, r3, fp, lsl #2
 33c:	000d0a00 	andeq	r0, sp, r0, lsl #20
 340:	0b3a0803 	bleq	e82354 <_start-0xbf185cac>
 344:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 348:	00000b38 	andeq	r0, r0, r8, lsr fp
 34c:	03000d0b 	movweq	r0, #3339	; 0xd0b
 350:	3b0b3a0e 	blcc	2ceb90 <_start-0xbfd39470>
 354:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 358:	0c000005 	stceq	0, cr0, [r0], {5}
 35c:	13490021 	movtne	r0, #36897	; 0x9021
 360:	0000052f 	andeq	r0, r0, pc, lsr #10
 364:	0300340d 	movweq	r3, #1037	; 0x40d
 368:	3b0b3a08 	blcc	2ceb90 <_start-0xbfd39470>
 36c:	3f13490b 	svccc	0x0013490b
 370:	00180219 	andseq	r0, r8, r9, lsl r2
 374:	012e0e00 			; <UNDEFINED> instruction: 0x012e0e00
 378:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 37c:	0b3b0b3a 	bleq	ec306c <_start-0xbf144f94>
 380:	01111927 	tsteq	r1, r7, lsr #18
 384:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 388:	01194296 			; <UNDEFINED> instruction: 0x01194296
 38c:	0f000013 	svceq	0x00000013
 390:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 394:	0b3b0b3a 	bleq	ec3084 <_start-0xbf144f7c>
 398:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 39c:	24100000 	ldrcs	r0, [r0], #-0
 3a0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 3a4:	0008030b 	andeq	r0, r8, fp, lsl #6
 3a8:	11010000 	mrsne	r0, (UNDEF: 1)
 3ac:	130e2501 	movwne	r2, #58625	; 0xe501
 3b0:	1b0e030b 	blne	380fe4 <_start-0xbfc8701c>
 3b4:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
 3b8:	00171006 	andseq	r1, r7, r6
 3bc:	01130200 	tsteq	r3, r0, lsl #4
 3c0:	0b3a0b0b 	bleq	e82ff4 <_start-0xbf18500c>
 3c4:	13010b3b 	movwne	r0, #6971	; 0x1b3b
 3c8:	0d030000 	stceq	0, cr0, [r3, #-0]
 3cc:	3a0e0300 	bcc	380fd4 <_start-0xbfc8702c>
 3d0:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 3d4:	000b3813 	andeq	r3, fp, r3, lsl r8
 3d8:	000d0400 	andeq	r0, sp, r0, lsl #8
 3dc:	0b3a0803 	bleq	e823f0 <_start-0xbf185c10>
 3e0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 3e4:	00000b38 	andeq	r0, r0, r8, lsr fp
 3e8:	0b002405 	bleq	9404 <_start-0xbfffebfc>
 3ec:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 3f0:	0600000e 	streq	r0, [r0], -lr
 3f4:	13490035 	movtne	r0, #36917	; 0x9035
 3f8:	16070000 	strne	r0, [r7], -r0
 3fc:	3a0e0300 	bcc	381004 <_start-0xbfc86ffc>
 400:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 404:	08000013 	stmdaeq	r0, {r0, r1, r4}
 408:	0b3e0104 	bleq	f80820 <_start-0xbf0877e0>
 40c:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 410:	0b3b0b3a 	bleq	ec3100 <_start-0xbf144f00>
 414:	00001301 	andeq	r1, r0, r1, lsl #6
 418:	03002809 	movweq	r2, #2057	; 0x809
 41c:	000b1c0e 	andeq	r1, fp, lr, lsl #24
 420:	00280a00 	eoreq	r0, r8, r0, lsl #20
 424:	0b1c0803 	bleq	702438 <_start-0xbf905bc8>
 428:	2e0b0000 	cdpcs	0, 0, cr0, cr11, cr0, {0}
 42c:	03193f01 	tsteq	r9, #1, 30
 430:	3b0b3a0e 	blcc	2cec70 <_start-0xbfd39390>
 434:	1119270b 	tstne	r9, fp, lsl #14
 438:	40061201 	andmi	r1, r6, r1, lsl #4
 43c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 440:	00001301 	andeq	r1, r0, r1, lsl #6
 444:	0300050c 	movweq	r0, #1292	; 0x50c
 448:	3b0b3a0e 	blcc	2cec88 <_start-0xbfd39378>
 44c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 450:	0d000018 	stceq	0, cr0, [r0, #-96]	; 0xffffffa0
 454:	08030005 	stmdaeq	r3, {r0, r2}
 458:	0b3b0b3a 	bleq	ec3148 <_start-0xbf144eb8>
 45c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 460:	0f0e0000 	svceq	0x000e0000
 464:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
 468:	00000013 	andeq	r0, r0, r3, lsl r0
 46c:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 470:	030b130e 	movweq	r1, #45838	; 0xb30e
 474:	110e1b0e 	tstne	lr, lr, lsl #22
 478:	10061201 	andne	r1, r6, r1, lsl #4
 47c:	02000017 	andeq	r0, r0, #23
 480:	0b0b0113 	bleq	2c08d4 <_start-0xbfd4772c>
 484:	0b3b0b3a 	bleq	ec3174 <_start-0xbf144e8c>
 488:	00001301 	andeq	r1, r0, r1, lsl #6
 48c:	03000d03 	movweq	r0, #3331	; 0xd03
 490:	3b0b3a0e 	blcc	2cecd0 <_start-0xbfd39330>
 494:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 498:	0400000b 	streq	r0, [r0], #-11
 49c:	0b0b0024 	bleq	2c0534 <_start-0xbfd47acc>
 4a0:	0e030b3e 	vmoveq.16	d3[0], r0
 4a4:	35050000 	strcc	r0, [r5, #-0]
 4a8:	00134900 	andseq	r4, r3, r0, lsl #18
 4ac:	01010600 	tsteq	r1, r0, lsl #12
 4b0:	13011349 	movwne	r1, #4937	; 0x1349
 4b4:	21070000 	mrscs	r0, (UNDEF: 7)
 4b8:	2f134900 	svccs	0x00134900
 4bc:	0800000b 	stmdaeq	r0, {r0, r1, r3}
 4c0:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
 4c4:	0b3b0b3a 	bleq	ec31b4 <_start-0xbf144e4c>
 4c8:	00001349 	andeq	r1, r0, r9, asr #6
 4cc:	0b011309 	bleq	450f8 <_start-0xbffc2f08>
 4d0:	3b0b3a05 	blcc	2cecec <_start-0xbfd39314>
 4d4:	0013010b 	andseq	r0, r3, fp, lsl #2
 4d8:	000d0a00 	andeq	r0, sp, r0, lsl #20
 4dc:	0b3a0e03 	bleq	e83cf0 <_start-0xbf184310>
 4e0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 4e4:	00000538 	andeq	r0, r0, r8, lsr r5
 4e8:	03000d0b 	movweq	r0, #3339	; 0xd0b
 4ec:	3b0b3a08 	blcc	2ced14 <_start-0xbfd392ec>
 4f0:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 4f4:	0c00000b 	stceq	0, cr0, [r0], {11}
 4f8:	13490021 	movtne	r0, #36897	; 0x9021
 4fc:	0000052f 	andeq	r0, r0, pc, lsr #10
 500:	03000d0d 	movweq	r0, #3341	; 0xd0d
 504:	3b0b3a08 	blcc	2ced2c <_start-0xbfd392d4>
 508:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 50c:	0e000005 	cdpeq	0, 0, cr0, cr0, cr5, {0}
 510:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 514:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 518:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
 51c:	160f0000 	strne	r0, [pc], -r0
 520:	3a0e0300 	bcc	381128 <_start-0xbfc86ed8>
 524:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 528:	10000013 	andne	r0, r0, r3, lsl r0
 52c:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 530:	0b3a0e03 	bleq	e83d44 <_start-0xbf1842bc>
 534:	01110b3b 	tsteq	r1, fp, lsr fp
 538:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 53c:	00194297 	mulseq	r9, r7, r2
 540:	11010000 	mrsne	r0, (UNDEF: 1)
 544:	130e2501 	movwne	r2, #58625	; 0xe501
 548:	1b0e030b 	blne	38117c <_start-0xbfc86e84>
 54c:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
 550:	00171006 	andseq	r1, r7, r6
 554:	01130200 	tsteq	r3, r0, lsl #4
 558:	0b3a0b0b 	bleq	e8318c <_start-0xbf184e74>
 55c:	13010b3b 	movwne	r0, #6971	; 0x1b3b
 560:	0d030000 	stceq	0, cr0, [r3, #-0]
 564:	3a080300 	bcc	20116c <_start-0xbfe06e94>
 568:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 56c:	000b3813 	andeq	r3, fp, r3, lsl r8
 570:	000d0400 	andeq	r0, sp, r0, lsl #8
 574:	0b3a0e03 	bleq	e83d88 <_start-0xbf184278>
 578:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 57c:	00000b38 	andeq	r0, r0, r8, lsr fp
 580:	0b002405 	bleq	959c <_start-0xbfffea64>
 584:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 588:	0600000e 	streq	r0, [r0], -lr
 58c:	13490035 	movtne	r0, #36917	; 0x9035
 590:	16070000 	strne	r0, [r7], -r0
 594:	3a0e0300 	bcc	38119c <_start-0xbfc86e64>
 598:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 59c:	08000013 	stmdaeq	r0, {r0, r1, r4}
 5a0:	050b0113 	streq	r0, [fp, #-275]	; 0xfffffeed
 5a4:	0b3b0b3a 	bleq	ec3294 <_start-0xbf144d6c>
 5a8:	00001301 	andeq	r1, r0, r1, lsl #6
 5ac:	03000d09 	movweq	r0, #3337	; 0xd09
 5b0:	3b0b3a0e 	blcc	2cedf0 <_start-0xbfd39210>
 5b4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 5b8:	0a000005 	beq	5d4 <_start-0xc0007a2c>
 5bc:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 5c0:	0b3b0b3a 	bleq	ec32b0 <_start-0xbf144d50>
 5c4:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
 5c8:	0d0b0000 	stceq	0, cr0, [fp, #-0]
 5cc:	3a0e0300 	bcc	3811d4 <_start-0xbfc86e2c>
 5d0:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 5d4:	00053813 	andeq	r3, r5, r3, lsl r8
 5d8:	01010c00 	tsteq	r1, r0, lsl #24
 5dc:	13011349 	movwne	r1, #4937	; 0x1349
 5e0:	210d0000 	mrscs	r0, (UNDEF: 13)
 5e4:	2f134900 	svccs	0x00134900
 5e8:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
 5ec:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
 5f0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 5f4:	00001349 	andeq	r1, r0, r9, asr #6
 5f8:	4900260f 	stmdbmi	r0, {r0, r1, r2, r3, r9, sl, sp}
 5fc:	10000013 	andne	r0, r0, r3, lsl r0
 600:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 604:	0b3b0b3a 	bleq	ec32f4 <_start-0xbf144d0c>
 608:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
 60c:	0000193c 	andeq	r1, r0, ip, lsr r9
 610:	3f012e11 	svccc	0x00012e11
 614:	3a0e0319 	bcc	381280 <_start-0xbfc86d80>
 618:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 61c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 620:	96184006 	ldrls	r4, [r8], -r6
 624:	13011942 	movwne	r1, #6466	; 0x1942
 628:	34120000 	ldrcc	r0, [r2], #-0
 62c:	3a080300 	bcc	201234 <_start-0xbfe06dcc>
 630:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 634:	00180213 	andseq	r0, r8, r3, lsl r2
 638:	000f1300 	andeq	r1, pc, r0, lsl #6
 63c:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 640:	24140000 	ldrcs	r0, [r4], #-0
 644:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 648:	0008030b 	andeq	r0, r8, fp, lsl #6
 64c:	012e1500 			; <UNDEFINED> instruction: 0x012e1500
 650:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 654:	0b3b0b3a 	bleq	ec3344 <_start-0xbf144cbc>
 658:	01111349 	tsteq	r1, r9, asr #6
 65c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 660:	01194297 			; <UNDEFINED> instruction: 0x01194297
 664:	16000013 			; <UNDEFINED> instruction: 0x16000013
 668:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 66c:	0b3a0e03 	bleq	e83e80 <_start-0xbf184180>
 670:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 674:	06120111 			; <UNDEFINED> instruction: 0x06120111
 678:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 67c:	00130119 	andseq	r0, r3, r9, lsl r1
 680:	00051700 	andeq	r1, r5, r0, lsl #14
 684:	0b3a0e03 	bleq	e83e98 <_start-0xbf184168>
 688:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 68c:	00001802 	andeq	r1, r0, r2, lsl #16
 690:	03000518 	movweq	r0, #1304	; 0x518
 694:	3b0b3a08 	blcc	2ceebc <_start-0xbfd39144>
 698:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 69c:	19000018 	stmdbne	r0, {r3, r4}
 6a0:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 6a4:	0b3a0e03 	bleq	e83eb8 <_start-0xbf184148>
 6a8:	01110b3b 	tsteq	r1, fp, lsr fp
 6ac:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 6b0:	00194297 	mulseq	r9, r7, r2
 6b4:	11010000 	mrsne	r0, (UNDEF: 1)
 6b8:	130e2501 	movwne	r2, #58625	; 0xe501
 6bc:	1b0e030b 	blne	3812f0 <_start-0xbfc86d10>
 6c0:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
 6c4:	00171006 	andseq	r1, r7, r6
 6c8:	00240200 	eoreq	r0, r4, r0, lsl #4
 6cc:	0b3e0b0b 	bleq	f83300 <_start-0xbf084d00>
 6d0:	00000e03 	andeq	r0, r0, r3, lsl #28
 6d4:	49010103 	stmdbmi	r1, {r0, r1, r8}
 6d8:	00130113 	andseq	r0, r3, r3, lsl r1
 6dc:	00210400 	eoreq	r0, r1, r0, lsl #8
 6e0:	0b2f1349 	bleq	bc540c <_start-0xbf442bf4>
 6e4:	34050000 	strcc	r0, [r5], #-0
 6e8:	3a0e0300 	bcc	3812f0 <_start-0xbfc86d10>
 6ec:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 6f0:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
 6f4:	06000018 			; <UNDEFINED> instruction: 0x06000018
 6f8:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 6fc:	0b3a0e03 	bleq	e83f10 <_start-0xbf1840f0>
 700:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 704:	06120111 			; <UNDEFINED> instruction: 0x06120111
 708:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 70c:	07000019 	smladeq	r0, r9, r0, r0
 710:	0b0b0024 	bleq	2c07a8 <_start-0xbfd47858>
 714:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 718:	2e080000 	cdpcs	0, 0, cr0, cr8, cr0, {0}
 71c:	03193f01 	tsteq	r9, #1, 30
 720:	3b0b3a0e 	blcc	2cef60 <_start-0xbfd390a0>
 724:	1119270b 	tstne	r9, fp, lsl #14
 728:	40061201 	andmi	r1, r6, r1, lsl #4
 72c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 730:	05090000 	streq	r0, [r9, #-0]
 734:	3a080300 	bcc	20133c <_start-0xbfe06cc4>
 738:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 73c:	00180213 	andseq	r0, r8, r3, lsl r2
 740:	00340a00 	eorseq	r0, r4, r0, lsl #20
 744:	0b3a0803 	bleq	e82758 <_start-0xbf1858a8>
 748:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 74c:	00001802 	andeq	r1, r0, r2, lsl #16
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000001c 	andeq	r0, r0, ip, lsl r0
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	c0008000 	andgt	r8, r0, r0
  14:	00000218 	andeq	r0, r0, r8, lsl r2
	...
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	006c0002 	rsbeq	r0, ip, r2
  28:	00040000 	andeq	r0, r4, r0
  2c:	00000000 	andeq	r0, r0, r0
  30:	c0008218 	andgt	r8, r0, r8, lsl r2
  34:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
	...
  40:	0000001c 	andeq	r0, r0, ip, lsl r0
  44:	00e00002 	rsceq	r0, r0, r2
  48:	00040000 	andeq	r0, r4, r0
  4c:	00000000 	andeq	r0, r0, r0
  50:	c00082c8 	andgt	r8, r0, r8, asr #5
  54:	00000094 	muleq	r0, r4, r0
	...
  60:	0000001c 	andeq	r0, r0, ip, lsl r0
  64:	01540002 	cmpeq	r4, r2
  68:	00040000 	andeq	r0, r4, r0
  6c:	00000000 	andeq	r0, r0, r0
  70:	c000835c 	andgt	r8, r0, ip, asr r3
  74:	000010b8 	strheq	r1, [r0], -r8
	...
  80:	0000001c 	andeq	r0, r0, ip, lsl r0
  84:	05d60002 	ldrbeq	r0, [r6, #2]
  88:	00040000 	andeq	r0, r4, r0
  8c:	00000000 	andeq	r0, r0, r0
  90:	c0009414 	andgt	r9, r0, r4, lsl r4
  94:	000002dc 	ldrdeq	r0, [r0], -ip
	...
  a0:	0000001c 	andeq	r0, r0, ip, lsl r0
  a4:	07ee0002 	strbeq	r0, [lr, r2]!
  a8:	00040000 	andeq	r0, r4, r0
  ac:	00000000 	andeq	r0, r0, r0
  b0:	c00096f0 	strdgt	r9, [r0], -r0
  b4:	000001a0 	andeq	r0, r0, r0, lsr #3
	...
  c0:	0000001c 	andeq	r0, r0, ip, lsl r0
  c4:	0bf80002 	bleq	ffe000d4 <__bss_end__+0x3fdf5492>
  c8:	00040000 	andeq	r0, r4, r0
  cc:	00000000 	andeq	r0, r0, r0
  d0:	c0009890 	mulgt	r0, r0, r8
  d4:	000001e4 	andeq	r0, r0, r4, ror #3
	...
  e0:	0000001c 	andeq	r0, r0, ip, lsl r0
  e4:	0e290002 	cdpeq	0, 2, cr0, cr9, cr2, {0}
  e8:	00040000 	andeq	r0, r4, r0
  ec:	00000000 	andeq	r0, r0, r0
  f0:	c0009a74 	andgt	r9, r0, r4, ror sl
  f4:	000003f8 	strdeq	r0, [r0], -r8
	...
 100:	0000001c 	andeq	r0, r0, ip, lsl r0
 104:	22460002 	subcs	r0, r6, #2
 108:	00040000 	andeq	r0, r4, r0
 10c:	00000000 	andeq	r0, r0, r0
 110:	c0009e6c 	andgt	r9, r0, ip, ror #28
 114:	0000038c 	andeq	r0, r0, ip, lsl #7
	...
 120:	0000001c 	andeq	r0, r0, ip, lsl r0
 124:	32a60002 	adccc	r0, r6, #2
 128:	00040000 	andeq	r0, r4, r0
 12c:	00000000 	andeq	r0, r0, r0
 130:	c000a1f8 	strdgt	sl, [r0], -r8
 134:	00000088 	andeq	r0, r0, r8, lsl #1
	...

Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	69676964 	stmdbvs	r7!, {r2, r5, r6, r8, fp, sp, lr}^
       4:	5f007374 	svcpl	0x00007374
       8:	6975625f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r9, sp, lr}^
       c:	6e69746c 	cdpvs	4, 6, cr7, cr9, cr12, {3}
      10:	5f61765f 	svcpl	0x0061765f
      14:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
      18:	696b7300 	stmdbvs	fp!, {r8, r9, ip, sp, lr}^
      1c:	74615f70 	strbtvc	r5, [r1], #-3952	; 0xfffff090
      20:	7600696f 	strvc	r6, [r0], -pc, ror #18
      24:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
      28:	756f6300 	strbvc	r6, [pc, #-768]!	; fffffd30 <__bss_end__+0x3fff50ee>
      2c:	5f00746e 	svcpl	0x0000746e
      30:	756f745f 	strbvc	r7, [pc, #-1119]!	; fffffbd9 <__bss_end__+0x3fff4f97>
      34:	72657070 	rsbvc	r7, r5, #112	; 0x70
      38:	675f5f00 	ldrbvs	r5, [pc, -r0, lsl #30]
      3c:	5f63756e 	svcpl	0x0063756e
      40:	6c5f6176 	ldfvse	f6, [pc], {118}	; 0x76
      44:	00747369 	rsbseq	r7, r4, r9, ror #6
      48:	63657270 	cmnvs	r5, #112, 4
      4c:	6f697369 	svcvs	0x00697369
      50:	4e47006e 	cdpmi	0, 4, cr0, cr7, cr14, {3}
      54:	31432055 	qdaddcc	r2, r5, r3
      58:	2e372031 	mrccs	0, 1, r2, cr7, cr1, {1}
      5c:	20302e35 	eorscs	r2, r0, r5, lsr lr
      60:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
      64:	6d2d206d 	stcvs	0, cr2, [sp, #-436]!	; 0xfffffe4c
      68:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
      6c:	73637061 	cmnvc	r3, #97	; 0x61
      70:	756e672d 	strbvc	r6, [lr, #-1837]!	; 0xfffff8d3
      74:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
      78:	6e3d7570 	mrcvs	5, 1, r7, cr13, cr0, {3}
      7c:	206e6f65 	rsbcs	r6, lr, r5, ror #30
      80:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
      84:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
      88:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
      8c:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
      90:	2d207066 	stccs	0, cr7, [r0, #-408]!	; 0xfffffe68
      94:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
      98:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
      9c:	2d37766d 	ldccs	6, cr7, [r7, #-436]!	; 0xfffffe4c
      a0:	6d2d2061 	stcvs	0, cr2, [sp, #-388]!	; 0xfffffe7c
      a4:	656e7574 	strbvs	r7, [lr, #-1396]!	; 0xfffffa8c
      a8:	726f633d 	rsbvc	r6, pc, #-201326592	; 0xf4000000
      ac:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
      b0:	2d203961 			; <UNDEFINED> instruction: 0x2d203961
      b4:	736c746d 	cmnvc	ip, #1828716544	; 0x6d000000
      b8:	6169642d 	cmnvs	r9, sp, lsr #8
      bc:	7463656c 	strbtvc	r6, [r3], #-1388	; 0xfffffa94
      c0:	756e673d 	strbvc	r6, [lr, #-1853]!	; 0xfffff8c3
      c4:	20672d20 	rsbcs	r2, r7, r0, lsr #26
      c8:	20304f2d 	eorscs	r4, r0, sp, lsr #30
      cc:	6f6e662d 	svcvs	0x006e662d
      d0:	6975622d 	ldmdbvs	r5!, {r0, r2, r3, r5, r9, sp, lr}^
      d4:	6e69746c 	cdpvs	4, 6, cr7, cr9, cr12, {3}
      d8:	73616200 	cmnvc	r1, #0, 4
      dc:	6e750065 	cdpvs	0, 7, cr0, cr5, cr5, {3}
      e0:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
      e4:	63206465 			; <UNDEFINED> instruction: 0x63206465
      e8:	00726168 	rsbseq	r6, r2, r8, ror #2
      ec:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
      f0:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
      f4:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
      f8:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
      fc:	6e650074 	mcrvs	0, 3, r0, cr5, cr4, {3}
     100:	63007064 	movwvs	r7, #100	; 0x64
     104:	6f6d6d6f 	svcvs	0x006d6d6f
     108:	72732f6e 	rsbsvc	r2, r3, #440	; 0x1b8
     10c:	72702f63 	rsbsvc	r2, r0, #396	; 0x18c
     110:	66746e69 	ldrbtvs	r6, [r4], -r9, ror #28
     114:	6600632e 	strvs	r6, [r0], -lr, lsr #6
     118:	7367616c 	cmnvc	r7, #108, 2
     11c:	7a697300 	bvc	1a5cd24 <_start-0xbe5ab2dc>
     120:	75710065 	ldrbvc	r0, [r1, #-101]!	; 0xffffff9b
     124:	66696c61 	strbtvs	r6, [r9], -r1, ror #24
     128:	00726569 	rsbseq	r6, r2, r9, ror #10
     12c:	706d6973 	rsbvc	r6, sp, r3, ror r9
     130:	735f656c 	cmpvc	pc, #108, 10	; 0x1b000000
     134:	6f747274 	svcvs	0x00747274
     138:	72006c75 	andvc	r6, r0, #29952	; 0x7500
     13c:	6c757365 	ldclvs	3, cr7, [r5], #-404	; 0xfffffe6c
     140:	65720074 	ldrbvs	r0, [r2, #-116]!	; 0xffffff8c
     144:	74616570 	strbtvc	r6, [r1], #-1392	; 0xfffffa90
     148:	72747300 	rsbsvc	r7, r4, #0, 6
     14c:	6e656c6e 	cdpvs	12, 6, cr6, cr5, cr14, {3}
     150:	6d756e00 	ldclvs	14, cr6, [r5, #-0]
     154:	00726562 	rsbseq	r6, r2, r2, ror #10
     158:	706d6973 	rsbvc	r6, sp, r3, ror r9
     15c:	735f656c 	cmpvc	pc, #108, 10	; 0x1b000000
     160:	6f747274 	svcvs	0x00747274
     164:	635f006c 	cmpvs	pc, #108	; 0x6c
     168:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     16c:	69727000 	ldmdbvs	r2!, {ip, sp, lr}^
     170:	7562746e 	strbvc	r7, [r2, #-1134]!	; 0xfffffb92
     174:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
     178:	65696600 	strbvs	r6, [r9, #-1536]!	; 0xfffffa00
     17c:	775f646c 	ldrbvc	r6, [pc, -ip, ror #8]
     180:	68746469 	ldmdavs	r4!, {r0, r3, r5, r6, sl, sp, lr}^
     184:	67726100 	ldrbvs	r6, [r2, -r0, lsl #2]!
     188:	6f6c0073 	svcvs	0x006c0073
     18c:	6920676e 	stmdbvs	r0!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
     190:	7300746e 	movwvc	r7, #1134	; 0x46e
     194:	006e6769 	rsbeq	r6, lr, r9, ror #14
     198:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; e4 <_start-0xc0007f1c>
     19c:	696c2f65 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
     1a0:	2f78756e 	svccs	0x0078756e
     1a4:	73726166 	cmnvc	r2, #-2147483623	; 0x80000019
     1a8:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     1ac:	4d52412f 	ldfmie	f4, [r2, #-188]	; 0xffffff44
     1b0:	3243442f 	subcc	r4, r3, #788529152	; 0x2f000000
     1b4:	31313132 	teqcc	r1, r2, lsr r1
     1b8:	7961642f 	stmdbvc	r1!, {r0, r1, r2, r3, r5, sl, sp, lr}^
     1bc:	302f3730 	eorcc	r3, pc, r0, lsr r7	; <UNPREDICTABLE>
     1c0:	6e692d34 	mcrvs	13, 3, r2, cr9, cr4, {1}
     1c4:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
     1c8:	2d747075 	ldclcs	0, cr7, [r4, #-468]!	; 0xfffffe2c
     1cc:	5f5f0063 	svcpl	0x005f0063
     1d0:	00736572 	rsbseq	r6, r3, r2, ror r5
     1d4:	72707376 	rsbsvc	r7, r0, #-671088639	; 0xd8000001
     1d8:	66746e69 	ldrbtvs	r6, [r4], -r9, ror #28
     1dc:	755f5f00 	ldrbvc	r5, [pc, #-3840]	; fffff2e4 <__bss_end__+0x3fff46a2>
     1e0:	5f747261 	svcpl	0x00747261
     1e4:	63747570 	cmnvs	r4, #112, 10	; 0x1c000000
     1e8:	43455300 	movtmi	r5, #21248	; 0x5300
     1ec:	52474643 	subpl	r4, r7, #70254592	; 0x4300000
     1f0:	755f5f00 	ldrbvc	r5, [pc, #-3840]	; fffff2f8 <__bss_end__+0x3fff46b6>
     1f4:	5f747261 	svcpl	0x00747261
     1f8:	73747570 	cmnvc	r4, #112, 10	; 0x1c000000
     1fc:	74616400 	strbtvc	r6, [r1], #-1024	; 0xfffffc00
     200:	54520061 	ldrbpl	r0, [r2], #-97	; 0xffffff9f
     204:	4200524f 	andmi	r5, r0, #-268435452	; 0xf0000004
     208:	00525253 	subseq	r5, r2, r3, asr r2
     20c:	44505550 	ldrbmi	r5, [r0], #-1360	; 0xfffffab0
     210:	4f4d0052 	svcmi	0x004d0052
     214:	00524544 	subseq	r4, r2, r4, asr #10
     218:	4550534f 	ldrbmi	r5, [r0, #-847]	; 0xfffffcb1
     21c:	00524445 	subseq	r4, r2, r5, asr #8
     220:	52505447 	subspl	r5, r0, #1191182336	; 0x47000000
     224:	45525000 	ldrbmi	r5, [r2, #-0]
     228:	70004353 	andvc	r4, r0, r3, asr r3
     22c:	00727473 	rsbseq	r7, r2, r3, ror r4
     230:	61755f5f 	cmnvs	r5, pc, asr pc
     234:	695f7472 	ldmdbvs	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     238:	0074696e 	rsbseq	r6, r4, lr, ror #18
     23c:	6f697067 	svcvs	0x00697067
     240:	4c00745f 	cfstrsmi	mvf7, [r0], {95}	; 0x5f
     244:	00524b43 	subseq	r4, r2, r3, asr #22
     248:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
     24c:	4f00745f 	svcmi	0x0000745f
     250:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
     254:	46410052 			; <UNDEFINED> instruction: 0x46410052
     258:	5f004c52 	svcpl	0x00004c52
     25c:	7261755f 	rsbvc	r7, r1, #398458880	; 0x17c00000
     260:	65675f74 	strbvs	r5, [r7, #-3956]!	; 0xfffff08c
     264:	41006374 	tstmi	r0, r4, ror r3
     268:	00485246 	subeq	r5, r8, r6, asr #4
     26c:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
     270:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
     274:	752f6372 	strvc	r6, [pc, #-882]!	; ffffff0a <__bss_end__+0x3fff52c8>
     278:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
     27c:	45520063 	ldrbmi	r0, [r2, #-99]	; 0xffffff9d
     280:	52003853 	andpl	r3, r0, #5439488	; 0x530000
     284:	00395345 	eorseq	r5, r9, r5, asr #6
     288:	52504241 	subspl	r4, r0, #268435460	; 0x10000004
     28c:	53544600 	cmppl	r4, #0, 12
     290:	46003152 			; <UNDEFINED> instruction: 0x46003152
     294:	32525354 	subscc	r5, r2, #84, 6	; 0x50000001
     298:	53544600 	cmppl	r4, #0, 12
     29c:	53003352 	movwpl	r3, #850	; 0x352
     2a0:	52454957 	subpl	r4, r5, #1425408	; 0x15c000
     2a4:	57530031 	smmlarpl	r3, r1, r0, r0
     2a8:	32524549 	subscc	r4, r2, #306184192	; 0x12400000
     2ac:	49575300 	ldmdbmi	r7, {r8, r9, ip, lr}^
     2b0:	00335245 	eorseq	r5, r3, r5, asr #4
     2b4:	494f4541 	stmdbmi	pc, {r0, r6, r8, sl, lr}^	; <UNPREDICTABLE>
     2b8:	50460052 	subpl	r0, r6, r2, asr r0
     2bc:	46003152 			; <UNDEFINED> instruction: 0x46003152
     2c0:	00325250 	eorseq	r5, r2, r0, asr r2
     2c4:	33525046 	cmpcc	r2, #70	; 0x46
     2c8:	5f6f6400 	svcpl	0x006f6400
     2cc:	00717269 	rsbseq	r7, r1, r9, ror #4
     2d0:	63636967 	cmnvs	r3, #1687552	; 0x19c000
     2d4:	4500745f 	strmi	r7, [r0, #-1119]	; 0xfffffba1
     2d8:	43495458 	movtmi	r5, #37976	; 0x9458
     2dc:	45003152 	strmi	r3, [r0, #-338]	; 0xfffffeae
     2e0:	43495458 	movtmi	r5, #37976	; 0x9458
     2e4:	45003252 	strmi	r3, [r0, #-594]	; 0xfffffdae
     2e8:	43495458 	movtmi	r5, #37976	; 0x9458
     2ec:	45003352 	strmi	r3, [r0, #-850]	; 0xfffffcae
     2f0:	43495458 	movtmi	r5, #37976	; 0x9458
     2f4:	4e003452 	cfmvsrmi	mvf0, r3
     2f8:	52504153 	subspl	r4, r0, #-1073741804	; 0xc0000014
     2fc:	31430030 	cmpcc	r3, r0, lsr r0
     300:	31524d49 	cmpcc	r2, r9, asr #26
     304:	49314300 	ldmdbmi	r1!, {r8, r9, lr}
     308:	0032524d 	eorseq	r5, r2, sp, asr #4
     30c:	4d493143 	stfmie	f3, [r9, #-268]	; 0xfffffef4
     310:	49003352 	stmdbmi	r0, {r1, r4, r6, r8, r9, ip, sp}
     314:	00524449 	subseq	r4, r2, r9, asr #8
     318:	4d453243 	sfmmi	f3, 2, [r5, #-268]	; 0xfffffef4
     31c:	43003152 	movwmi	r3, #338	; 0x152
     320:	524d4532 	subpl	r4, sp, #209715200	; 0xc800000
     324:	32430032 	subcc	r0, r3, #50	; 0x32
     328:	33524d45 	cmpcc	r2, #4416	; 0x1140
     32c:	74786500 	ldrbtvc	r6, [r8], #-1280	; 0xfffffb00
     330:	00745f69 	rsbseq	r5, r4, r9, ror #30
     334:	52535452 	subspl	r5, r3, #1375731712	; 0x52000000
     338:	54520031 	ldrbpl	r0, [r2], #-49	; 0xffffffcf
     33c:	00325253 	eorseq	r5, r2, r3, asr r2
     340:	52535452 	subspl	r5, r3, #1375731712	; 0x52000000
     344:	49440033 	stmdbmi	r4, {r0, r1, r4, r5}^
     348:	52494452 	subpl	r4, r9, #1375731712	; 0x52000000
     34c:	45314300 	ldrmi	r4, [r1, #-768]!	; 0xfffffd00
     350:	0031524d 	eorseq	r5, r1, sp, asr #4
     354:	4d453143 	stfmie	f3, [r5, #-268]	; 0xfffffef4
     358:	43003252 	movwmi	r3, #594	; 0x252
     35c:	524d4531 	subpl	r4, sp, #205520896	; 0xc400000
     360:	48410033 	stmdami	r1, {r0, r1, r4, r5}^
     364:	52495050 	subpl	r5, r9, #80	; 0x50
     368:	41494100 	mrsmi	r4, (UNDEF: 89)
     36c:	54430052 	strbpl	r0, [r3], #-82	; 0xffffffae
     370:	69004c52 	stmdbvs	r0, {r1, r4, r6, sl, fp, lr}
     374:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     378:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
     37c:	006f6e5f 	rsbeq	r6, pc, pc, asr lr	; <UNPREDICTABLE>
     380:	31525052 	cmpcc	r2, r2, asr r0
     384:	52505200 	subspl	r5, r0, #0, 4
     388:	50520032 	subspl	r0, r2, r2, lsr r0
     38c:	73003352 	movwvc	r3, #850	; 0x352
     390:	642f6372 	strtvs	r6, [pc], #-882	; 398 <_start-0xc0007c68>
     394:	72695f6f 	rsbvc	r5, r9, #444	; 0x1bc
     398:	00632e71 	rsbeq	r2, r3, r1, ror lr
     39c:	31534552 	cmpcc	r3, r2, asr r5
     3a0:	5a540030 	bpl	1500468 <_start-0xbeb07b98>
     3a4:	31524e45 	cmpcc	r2, r5, asr #28
     3a8:	455a5400 	ldrbmi	r5, [sl, #-1024]	; 0xfffffc00
     3ac:	0032524e 	eorseq	r5, r2, lr, asr #4
     3b0:	4e455a54 			; <UNDEFINED> instruction: 0x4e455a54
     3b4:	43003352 	movwmi	r3, #850	; 0x352
     3b8:	524d4932 	subpl	r4, sp, #819200	; 0xc8000
     3bc:	32430031 	subcc	r0, r3, #49	; 0x31
     3c0:	32524d49 	subscc	r4, r2, #4672	; 0x1240
     3c4:	49324300 	ldmdbmi	r2!, {r8, r9, lr}
     3c8:	0033524d 	eorseq	r5, r3, sp, asr #4
     3cc:	31534552 	cmpcc	r3, r2, asr r5
     3d0:	53455200 	movtpl	r5, #20992	; 0x5200
     3d4:	45520032 	ldrbmi	r0, [r2, #-50]	; 0xffffffce
     3d8:	52003353 	andpl	r3, r0, #1275068417	; 0x4c000001
     3dc:	00345345 	eorseq	r5, r4, r5, asr #6
     3e0:	35534552 	ldrbcc	r4, [r3, #-1362]	; 0xfffffaae
     3e4:	53455200 	movtpl	r5, #20992	; 0x5200
     3e8:	45520036 	ldrbmi	r0, [r2, #-54]	; 0xffffffca
     3ec:	67003753 	smlsdvs	r0, r3, r7, r3
     3f0:	5f6f6970 	svcpl	0x006f6970
     3f4:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
     3f8:	00745f72 	rsbseq	r5, r4, r2, ror pc
     3fc:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
     400:	50470072 	subpl	r0, r7, r2, ror r0
     404:	535f4f49 	cmppl	pc, #292	; 0x124
     408:	545f5445 	ldrbpl	r5, [pc], #-1093	; 410 <_start-0xc0007bf0>
     40c:	69706700 	ldmdbvs	r0!, {r8, r9, sl, sp, lr}^
     410:	4e00786f 	cdpmi	8, 0, cr7, cr0, cr15, {3}
     414:	55505f4f 	ldrbpl	r5, [r0, #-3919]	; 0xfffff0b1
     418:	47004450 	smlsdmi	r0, r0, r4, r4
     41c:	5f4f4950 	svcpl	0x004f4950
     420:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     424:	00545f54 	subseq	r5, r4, r4, asr pc
     428:	6f697067 	svcvs	0x00697067
     42c:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
     430:	00745f74 	rsbseq	r5, r4, r4, ror pc
     434:	4944454d 	stmdbmi	r4, {r0, r2, r3, r6, r8, sl, lr}^
     438:	6f004d55 	svcvs	0x00004d55
     43c:	65657073 	strbvs	r7, [r5, #-115]!	; 0xffffff8d
     440:	73007264 	movwvc	r7, #612	; 0x264
     444:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0xfffffe8c
     448:	4e490073 	mcrmi	0, 2, r0, cr9, cr3, {3}
     44c:	00545550 	subseq	r5, r4, r0, asr r5
     450:	7079746f 	rsbsvc	r7, r9, pc, ror #8
     454:	68007265 	stmdavs	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
     458:	675f6c61 	ldrbvs	r6, [pc, -r1, ror #24]
     45c:	5f6f6970 	svcpl	0x006f6970
     460:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
     464:	72730065 	rsbsvc	r0, r3, #101	; 0x65
     468:	70672f63 	rsbvc	r2, r7, r3, ror #30
     46c:	632e6f69 			; <UNDEFINED> instruction: 0x632e6f69
     470:	69706700 	ldmdbvs	r0!, {r8, r9, sl, sp, lr}^
     474:	736f5f6f 	cmnvc	pc, #444	; 0x1bc
     478:	64656570 	strbtvs	r6, [r5], #-1392	; 0xfffffa90
     47c:	00745f72 	rsbseq	r5, r4, r2, ror pc
     480:	64707570 	ldrbtvs	r7, [r0], #-1392	; 0xfffffa90
     484:	61680072 	smcvs	32770	; 0x8002
     488:	70675f6c 	rsbvc	r5, r7, ip, ror #30
     48c:	695f6f69 	ldmdbvs	pc, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     490:	0074696e 	rsbseq	r6, r4, lr, ror #18
     494:	6f697067 	svcvs	0x00697067
     498:	79746f5f 	ldmdbvc	r4!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, sp, lr}^
     49c:	5f726570 	svcpl	0x00726570
     4a0:	70670074 	rsbvc	r0, r7, r4, ror r0
     4a4:	6f5f6f69 	svcvs	0x005f6f69
     4a8:	745f7264 	ldrbvc	r7, [pc], #-612	; 4b0 <_start-0xc0007b50>
     4ac:	54554f00 	ldrbpl	r4, [r5], #-3840	; 0xfffff100
     4b0:	00545550 	subseq	r5, r4, r0, asr r5
     4b4:	6f697067 	svcvs	0x00697067
     4b8:	7075705f 	rsbsvc	r7, r5, pc, asr r0
     4bc:	745f7264 	ldrbvc	r7, [pc], #-612	; 4c4 <_start-0xc0007b3c>
     4c0:	52455600 	subpl	r5, r5, #0, 12
     4c4:	49485f59 	stmdbmi	r8, {r0, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     4c8:	41004847 	tstmi	r0, r7, asr #16
     4cc:	4f4c414e 	svcmi	0x004c414e
     4d0:	504d0047 	subpl	r0, sp, r7, asr #32
     4d4:	415a545f 	cmpmi	sl, pc, asr r4
     4d8:	45364248 	ldrmi	r4, [r6, #-584]!	; 0xfffffdb8
     4dc:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
     4e0:	504d0052 	subpl	r0, sp, r2, asr r0
     4e4:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
     4e8:	434e4532 	movtmi	r4, #58674	; 0xe532
     4ec:	0052524c 	subseq	r5, r2, ip, asr #4
     4f0:	415f504d 	cmpmi	pc, sp, asr #32
     4f4:	4c354250 	lfmmi	f4, 4, [r5], #-320	; 0xfffffec0
     4f8:	434e4550 	movtmi	r4, #58704	; 0xe550
     4fc:	0052524c 	subseq	r5, r2, ip, asr #4
     500:	415f504d 	cmpmi	pc, sp, asr #32
     504:	45354248 	ldrmi	r4, [r5, #-584]!	; 0xfffffdb8
     508:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
     50c:	65720052 	ldrbvs	r0, [r2, #-82]!	; 0xffffffae
     510:	00373273 	eorseq	r3, r7, r3, ror r2
     514:	415f504d 	cmpmi	pc, sp, asr #32
     518:	45334250 	ldrmi	r4, [r3, #-592]!	; 0xfffffdb0
     51c:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
     520:	65720052 	ldrbvs	r0, [r2, #-82]!	; 0xffffffae
     524:	00383273 	eorseq	r3, r8, r3, ror r2
     528:	44495841 	strbmi	r5, [r9], #-2113	; 0xfffff7bf
     52c:	00525649 	subseq	r5, r2, r9, asr #12
     530:	31736572 	cmncc	r3, r2, ror r5
     534:	65720031 	ldrbvs	r0, [r2, #-49]!	; 0xffffffcf
     538:	00323173 	eorseq	r3, r2, r3, ror r1
     53c:	31736572 	cmncc	r3, r2, ror r5
     540:	65720033 	ldrbvs	r0, [r2, #-51]!	; 0xffffffcd
     544:	00343173 	eorseq	r3, r4, r3, ror r1
     548:	31736572 	cmncc	r3, r2, ror r5
     54c:	65720035 	ldrbvs	r0, [r2, #-53]!	; 0xffffffcb
     550:	00363173 	eorseq	r3, r6, r3, ror r1
     554:	31736572 	cmncc	r3, r2, ror r5
     558:	65720037 	ldrbvs	r0, [r2, #-55]!	; 0xffffffc9
     55c:	00393173 	eorseq	r3, r9, r3, ror r1
     560:	425f504d 	subsmi	r5, pc, #77	; 0x4d
     564:	43544f4f 	cmpmi	r4, #316	; 0x13c
     568:	50410052 	subpl	r0, r1, r2, asr r0
     56c:	53523442 	cmppl	r2, #1107296256	; 0x42000000
     570:	524c4354 	subpl	r4, ip, #84, 6	; 0x50000001
     574:	69670052 	stmdbvs	r7!, {r1, r4, r6}^
     578:	745f6463 	ldrbvc	r6, [pc], #-1123	; 580 <_start-0xc0007a80>
     57c:	73657200 	cmnvc	r5, #0, 4
     580:	4d003532 	cfstr32mi	mvfx3, [r0, #-200]	; 0xffffff38
     584:	50415f43 	subpl	r5, r1, r3, asr #30
     588:	504c3142 	subpl	r3, ip, r2, asr #2
     58c:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
     590:	4d005254 	sfmmi	f5, 4, [r0, #-336]	; 0xfffffeb0
     594:	48415f50 	stmdami	r1, {r4, r6, r8, r9, sl, fp, ip, lr}^
     598:	504c3442 	subpl	r3, ip, r2, asr #8
     59c:	4c434e45 	mcrrmi	14, 4, r4, r3, cr5
     5a0:	4d005252 	sfmmi	f5, 4, [r0, #-328]	; 0xfffffeb8
     5a4:	48415f43 	stmdami	r1, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
     5a8:	4e453242 	cdpmi	2, 4, cr3, cr5, cr2, {2}
     5ac:	52524c43 	subspl	r4, r2, #17152	; 0x4300
     5b0:	42504100 	subsmi	r4, r0, #0, 2
     5b4:	54535231 	ldrbpl	r5, [r3], #-561	; 0xfffffdcf
     5b8:	52524c43 	subspl	r4, r2, #17152	; 0x4300
     5bc:	4d445300 	stclmi	3, cr5, [r4, #-0]
     5c0:	4333434d 	teqmi	r3, #872415233	; 0x34000001
     5c4:	4c45534b 	mcrrmi	3, 4, r5, r5, cr11
     5c8:	504d0052 	subpl	r0, sp, r2, asr r0
     5cc:	4649435f 			; <UNDEFINED> instruction: 0x4649435f
     5d0:	504d0052 	subpl	r0, sp, r2, asr r0
     5d4:	4250415f 	subsmi	r4, r0, #-1073741801	; 0xc0000017
     5d8:	434e4535 	movtmi	r4, #58677	; 0xe535
     5dc:	0052524c 	subseq	r5, r2, ip, asr #4
     5e0:	525f5242 	subspl	r5, pc, #536870916	; 0x20000004
     5e4:	43535453 	cmpmi	r3, #1392508928	; 0x53000000
     5e8:	0052524c 	subseq	r5, r2, ip, asr #4
     5ec:	4954504c 	ldmdbmi	r4, {r2, r3, r6, ip, lr}^
     5f0:	4b43314d 	blmi	10ccb2c <_start-0xbef3b4d4>
     5f4:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
     5f8:	5f434d00 	svcpl	0x00434d00
     5fc:	32425041 	subcc	r5, r2, #65	; 0x41
     600:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
     604:	55005254 	strpl	r5, [r0, #-596]	; 0xfffffdac
     608:	31545241 	cmpcc	r4, r1, asr #4
     60c:	45534b43 	ldrbmi	r4, [r3, #-2883]	; 0xfffff4bd
     610:	4d00524c 	sfmmi	f5, 4, [r0, #-304]	; 0xfffffed0
     614:	48415f50 	stmdami	r1, {r4, r6, r8, r9, sl, fp, ip, lr}^
     618:	4e453642 	cdpmi	6, 4, cr3, cr5, cr2, {2}
     61c:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
     620:	49415300 	stmdbmi	r1, {r8, r9, ip, lr}^
     624:	534b4331 	movtpl	r4, #45873	; 0xb331
     628:	00524c45 	subseq	r4, r2, r5, asr #24
     62c:	324c4c50 	subcc	r4, ip, #80, 24	; 0x5000
     630:	52474643 	subpl	r4, r7, #70254592	; 0x4300000
     634:	504d0031 	subpl	r0, sp, r1, lsr r0
     638:	5453525f 	ldrbpl	r5, [r3], #-607	; 0xfffffda1
     63c:	4d005253 	sfmmi	f5, 4, [r0, #-332]	; 0xfffffeb4
     640:	50415f43 	subpl	r5, r1, r3, asr #30
     644:	4e453442 	cdpmi	4, 4, cr3, cr5, cr2, {2}
     648:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
     64c:	42484100 	submi	r4, r8, #0, 2
     650:	54535235 	ldrbpl	r5, [r3], #-565	; 0xfffffdcb
     654:	52524c43 	subspl	r4, r2, #17152	; 0x4300
     658:	49505300 	ldmdbmi	r0, {r8, r9, ip, lr}^
     65c:	534b4336 	movtpl	r4, #45878	; 0xb336
     660:	00524c45 	subseq	r4, r2, r5, asr #24
     664:	32736572 	rsbscc	r6, r3, #478150656	; 0x1c800000
     668:	65720030 	ldrbvs	r0, [r2, #-48]!	; 0xffffffd0
     66c:	00313273 	eorseq	r3, r1, r3, ror r2
     670:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
     674:	4b433837 	blmi	10ce758 <_start-0xbef398a8>
     678:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
     67c:	73657200 	cmnvc	r5, #0, 4
     680:	54003332 	strpl	r3, [r0], #-818	; 0xfffffcce
     684:	4248415a 	submi	r4, r8, #-2147483626	; 0x80000016
     688:	54535236 	ldrbpl	r5, [r3], #-566	; 0xfffffdca
     68c:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
     690:	5f504d00 	svcpl	0x00504d00
     694:	48414c4d 	stmdami	r1, {r0, r2, r3, r6, sl, fp, lr}^
     698:	534e4542 	movtpl	r4, #58690	; 0xe542
     69c:	00525445 	subseq	r5, r2, r5, asr #8
     6a0:	32425041 	subcc	r5, r2, #65	; 0x41
     6a4:	43545352 	cmpmi	r4, #1207959553	; 0x48000001
     6a8:	0052524c 	subseq	r5, r2, ip, asr #4
     6ac:	31425041 	cmpcc	r2, r1, asr #32
     6b0:	52564944 	subspl	r4, r6, #68, 18	; 0x110000
     6b4:	4b435000 	blmi	10d46bc <_start-0xbef33944>
     6b8:	45533231 	ldrbmi	r3, [r3, #-561]	; 0xfffffdcf
     6bc:	5000524c 	andpl	r5, r0, ip, asr #4
     6c0:	46314c4c 	ldrtmi	r4, [r1], -ip, asr #24
     6c4:	52434152 	subpl	r4, r3, #-2147483628	; 0x80000014
     6c8:	73657200 	cmnvc	r5, #0, 4
     6cc:	65720031 	ldrbvs	r0, [r2, #-49]!	; 0xffffffcf
     6d0:	72003273 	andvc	r3, r0, #805306375	; 0x30000007
     6d4:	00337365 	eorseq	r7, r3, r5, ror #6
     6d8:	34736572 	ldrbtcc	r6, [r3], #-1394	; 0xfffffa8e
     6dc:	73657200 	cmnvc	r5, #0, 4
     6e0:	65720035 	ldrbvs	r0, [r2, #-53]!	; 0xffffffcb
     6e4:	72003673 	andvc	r3, r0, #120586240	; 0x7300000
     6e8:	00377365 	eorseq	r7, r7, r5, ror #6
     6ec:	38736572 	ldmdacc	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
     6f0:	73657200 	cmnvc	r5, #0, 4
     6f4:	48410039 	stmdami	r1, {r0, r3, r4, r5}^
     6f8:	53523442 	cmppl	r2, #1107296256	; 0x42000000
     6fc:	524c4354 	subpl	r4, ip, #84, 6	; 0x50000001
     700:	434d0052 	movtmi	r0, #53330	; 0xd052
     704:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
     708:	434e4536 	movtmi	r4, #58678	; 0xe536
     70c:	0052524c 	subseq	r5, r2, ip, asr #4
     710:	344c4c50 	strbcc	r4, [ip], #-3152	; 0xfffff3b0
     714:	52475343 	subpl	r5, r7, #201326593	; 0xc000001
     718:	53534d00 	cmppl	r3, #0, 26
     71c:	45534b43 	ldrbmi	r4, [r3, #-2883]	; 0xfffff4bd
     720:	4c00524c 	sfmmi	f5, 4, [r0], {76}	; 0x4c
     724:	4d495450 	cfstrdmi	mvd5, [r9, #-320]	; 0xfffffec0
     728:	4b433534 	blmi	10cdc00 <_start-0xbef3a400>
     72c:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
     730:	6c616800 	stclvs	8, cr6, [r1], #-0
     734:	7478655f 	ldrbtvc	r6, [r8], #-1375	; 0xfffffaa1
     738:	6e695f69 	cdpvs	15, 6, cr5, cr9, cr9, {3}
     73c:	4d007469 	cfstrsmi	mvf7, [r0, #-420]	; 0xfffffe5c
     740:	4c4d5f43 	mcrrmi	15, 4, r5, sp, cr3
     744:	45424841 	strbmi	r4, [r2, #-2113]	; 0xfffff7bf
     748:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
     74c:	53440052 	movtpl	r0, #16466	; 0x4052
     750:	534b4349 	movtpl	r4, #45897	; 0xb349
     754:	00524c45 	subseq	r4, r2, r5, asr #24
     758:	545f504d 	ldrbpl	r5, [pc], #-77	; 760 <_start-0xc00078a0>
     75c:	4248415a 	submi	r4, r8, #-2147483626	; 0x80000016
     760:	45504c36 	ldrbmi	r4, [r0, #-3126]	; 0xfffff3ca
     764:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
     768:	54450052 	strbpl	r0, [r5], #-82	; 0xffffffae
     76c:	534b4348 	movtpl	r4, #45896	; 0xb348
     770:	00524c45 	subseq	r4, r2, r5, asr #24
     774:	32425041 	subcc	r5, r2, #65	; 0x41
     778:	53545352 	cmppl	r4, #1207959553	; 0x48000001
     77c:	00525445 	subseq	r5, r2, r5, asr #8
     780:	4e45434f 	cdpmi	3, 4, cr4, cr5, cr15, {2}
     784:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
     788:	5f504d00 	svcpl	0x00504d00
     78c:	34425041 	strbcc	r5, [r2], #-65	; 0xffffffbf
     790:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     794:	52524c43 	subspl	r4, r2, #17152	; 0x4300
     798:	5f504d00 	svcpl	0x00504d00
     79c:	34424841 	strbcc	r4, [r2], #-2113	; 0xfffff7bf
     7a0:	4c434e45 	mcrrmi	14, 4, r4, r3, cr5
     7a4:	4d005252 	sfmmi	f5, 4, [r0, #-328]	; 0xfffffeb8
     7a8:	4c4d5f50 	mcrrmi	15, 5, r5, sp, cr0
     7ac:	4c424841 	mcrrmi	8, 4, r4, r2, cr1
     7b0:	534e4550 	movtpl	r4, #58704	; 0xe550
     7b4:	00525445 	subseq	r5, r2, r5, asr #8
     7b8:	415f434d 	cmpmi	pc, sp, asr #6
     7bc:	4c4d4958 	mcrrmi	9, 5, r4, sp, cr8	; <UNPREDICTABLE>
     7c0:	534e4550 	movtpl	r4, #58704	; 0xe550
     7c4:	00525445 	subseq	r5, r2, r5, asr #8
     7c8:	415f504d 	cmpmi	pc, sp, asr #32
     7cc:	4c334248 	lfmmi	f4, 4, [r3], #-288	; 0xfffffee0
     7d0:	534e4550 	movtpl	r4, #58704	; 0xe550
     7d4:	00525445 	subseq	r5, r2, r5, asr #8
     7d8:	415f434d 	cmpmi	pc, sp, asr #6
     7dc:	454d4958 	strbmi	r4, [sp, #-2392]	; 0xfffff6a8
     7e0:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
     7e4:	434d0052 	movtmi	r0, #53330	; 0xd052
     7e8:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
     7ec:	434e4534 	movtmi	r4, #58676	; 0xe534
     7f0:	0052524c 	subseq	r5, r2, ip, asr #4
     7f4:	32424841 	subcc	r4, r2, #4259840	; 0x410000
     7f8:	53545352 	cmppl	r4, #1207959553	; 0x48000001
     7fc:	00525445 	subseq	r5, r2, r5, asr #8
     800:	344b4352 	strbcc	r4, [fp], #-850	; 0xfffffcae
     804:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
     808:	5f504d00 	svcpl	0x00504d00
     80c:	34425041 	strbcc	r5, [r2], #-65	; 0xffffffbf
     810:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
     814:	72005254 	andvc	r5, r0, #84, 4	; 0x40000005
     818:	30317365 	eorscc	r7, r1, r5, ror #6
     81c:	5f434d00 	svcpl	0x00434d00
     820:	48414c4d 	stmdami	r1, {r0, r2, r3, r6, sl, fp, lr}^
     824:	45504c42 	ldrbmi	r4, [r0, #-3138]	; 0xfffff3be
     828:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
     82c:	434d0052 	movtmi	r0, #53330	; 0xd052
     830:	4250415f 	subsmi	r4, r0, #-1073741801	; 0xc0000017
     834:	45504c31 	ldrbmi	r4, [r0, #-3121]	; 0xfffff3cf
     838:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
     83c:	4c500052 	mrrcmi	0, 5, r0, r0, cr2	; <UNPREDICTABLE>
     840:	5246324c 	subpl	r3, r6, #76, 4	; 0xc0000004
     844:	00524341 	subseq	r4, r2, r1, asr #6
     848:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
     84c:	4b433432 	blmi	10cd91c <_start-0xbef3a6e4>
     850:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
     854:	5f504d00 	svcpl	0x00504d00
     858:	32424841 	subcc	r4, r2, #4259840	; 0x410000
     85c:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     860:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
     864:	4f434d00 	svcmi	0x00434d00
     868:	47464331 	smlaldxmi	r4, r6, r1, r3
     86c:	53490052 	movtpl	r0, #36946	; 0x9052
     870:	49544341 	ldmdbmi	r4, {r0, r6, r8, r9, lr}^
     874:	00524556 	subseq	r4, r2, r6, asr r5
     878:	5f636372 	svcpl	0x00636372
     87c:	434d0074 	movtmi	r0, #53364	; 0xd074
     880:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
     884:	45504c36 	ldrbmi	r4, [r0, #-3126]	; 0xfffff3ca
     888:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
     88c:	65720052 	ldrbvs	r0, [r2, #-82]!	; 0xffffffae
     890:	00383173 	eorseq	r3, r8, r3, ror r1
     894:	314c4c50 	cmpcc	ip, r0, asr ip
     898:	52475343 	subpl	r5, r7, #201326593	; 0xc000001
     89c:	43444600 	movtmi	r4, #17920	; 0x4600
     8a0:	4b434e41 	blmi	10d41ac <_start-0xbef33e54>
     8a4:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
     8a8:	63727300 	cmnvs	r2, #0, 6
     8ac:	79656b2f 	stmdbvc	r5!, {r0, r1, r2, r3, r5, r8, r9, fp, sp, lr}^
     8b0:	5100632e 	tstpl	r0, lr, lsr #6
     8b4:	43495053 	movtmi	r5, #36947	; 0x9053
     8b8:	4c45534b 	mcrrmi	3, 4, r5, r5, cr11
     8bc:	47490052 	smlsldmi	r0, r9, r2, r0
     8c0:	50554f52 	subspl	r4, r5, r2, asr pc
     8c4:	504d0052 	subpl	r0, sp, r2, asr r0
     8c8:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
     8cc:	434e4536 	movtmi	r4, #58678	; 0xe536
     8d0:	0052524c 	subseq	r5, r2, ip, asr #4
     8d4:	415f504d 	cmpmi	pc, sp, asr #32
     8d8:	4c324248 	lfmmi	f4, 4, [r2], #-288	; 0xfffffee0
     8dc:	434e4550 	movtmi	r4, #58704	; 0xe550
     8e0:	0052524c 	subseq	r5, r2, ip, asr #4
     8e4:	415f504d 	cmpmi	pc, sp, asr #32
     8e8:	45344248 	ldrmi	r4, [r4, #-584]!	; 0xfffffdb8
     8ec:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
     8f0:	41530052 	cmpmi	r3, r2, asr r0
     8f4:	4b433349 	blmi	10cd620 <_start-0xbef3a9e0>
     8f8:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
     8fc:	43504d00 	cmpmi	r0, #0, 26
     900:	4c45534b 	mcrrmi	3, 4, r5, r5, cr11
     904:	504d0052 	subpl	r0, sp, r2, asr r0
     908:	414c4d5f 	cmpmi	ip, pc, asr sp
     90c:	504c4248 	subpl	r4, ip, r8, asr #4
     910:	4c434e45 	mcrrmi	14, 4, r4, r3, cr5
     914:	4d005252 	sfmmi	f5, 4, [r0, #-328]	; 0xfffffeb8
     918:	50415f43 	subpl	r5, r1, r3, asr #30
     91c:	4e453442 	cdpmi	4, 4, cr3, cr5, cr2, {2}
     920:	52524c43 	subspl	r4, r2, #17152	; 0x4300
     924:	5f434d00 	svcpl	0x00434d00
     928:	52454943 	subpl	r4, r5, #1097728	; 0x10c000
     92c:	42504100 	subsmi	r4, r0, #0, 2
     930:	56494434 			; <UNDEFINED> instruction: 0x56494434
     934:	53480052 	movtpl	r0, #32850	; 0x8052
     938:	47464349 	strbmi	r4, [r6, -r9, asr #6]
     93c:	4e520052 	mrcmi	0, 2, r0, cr2, cr2, {2}
     940:	4b433247 	blmi	10cd264 <_start-0xbef3ad9c>
     944:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
     948:	5f504d00 	svcpl	0x00504d00
     94c:	48414c4d 	stmdami	r1, {r0, r2, r3, r6, sl, fp, lr}^
     950:	434e4542 	movtmi	r4, #58690	; 0xe542
     954:	0052524c 	subseq	r5, r2, ip, asr #4
     958:	5f6c6168 	svcpl	0x006c6168
     95c:	63636967 	cmnvs	r3, #1687552	; 0x19c000
     960:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
     964:	48410074 	stmdami	r1, {r2, r4, r5, r6}^
     968:	53523542 	cmppl	r2, #276824064	; 0x10800000
     96c:	54455354 	strbpl	r5, [r5], #-852	; 0xfffffcac
     970:	50410052 	subpl	r0, r1, r2, asr r0
     974:	53523342 	cmppl	r2, #134217729	; 0x8000001
     978:	54455354 	strbpl	r5, [r5], #-852	; 0xfffffcac
     97c:	434d0052 	movtmi	r0, #53330	; 0xd052
     980:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
     984:	45504c35 	ldrbmi	r4, [r0, #-3125]	; 0xfffff3cb
     988:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
     98c:	57500052 			; <UNDEFINED> instruction: 0x57500052
     990:	44504c52 	ldrbmi	r4, [r0], #-3154	; 0xfffff3ae
     994:	5243594c 	subpl	r5, r3, #76, 18	; 0x130000
     998:	42484100 	submi	r4, r8, #0, 2
     99c:	54535233 	ldrbpl	r5, [r3], #-563	; 0xfffffdcd
     9a0:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
     9a4:	5f434d00 	svcpl	0x00434d00
     9a8:	53545352 	cmppl	r4, #1207959553	; 0x48000001
     9ac:	52524c43 	subspl	r4, r2, #17152	; 0x4300
     9b0:	44495300 	strbmi	r5, [r9], #-768	; 0xfffffd00
     9b4:	48410052 	stmdami	r1, {r1, r4, r6}^
     9b8:	53523442 	cmppl	r2, #1107296256	; 0x42000000
     9bc:	54455354 	strbpl	r5, [r5], #-852	; 0xfffffcac
     9c0:	32490052 	subcc	r0, r9, #82	; 0x52
     9c4:	43353343 	teqmi	r5, #201326593	; 0xc000001
     9c8:	4c45534b 	mcrrmi	3, 4, r5, r5, cr11
     9cc:	504d0052 	subpl	r0, sp, r2, asr r0
     9d0:	5352475f 	cmppl	r2, #24903680	; 0x17c0000
     9d4:	45534354 	ldrbmi	r4, [r3, #-852]	; 0xfffffcac
     9d8:	41005254 	tstmi	r0, r4, asr r2
     9dc:	44334250 	ldrtmi	r4, [r3], #-592	; 0xfffffdb0
     9e0:	00525649 	subseq	r5, r2, r9, asr #12
     9e4:	415f504d 	cmpmi	pc, sp, asr #32
     9e8:	4c344248 	lfmmi	f4, 4, [r4], #-288	; 0xfffffee0
     9ec:	534e4550 	movtpl	r4, #58704	; 0xe550
     9f0:	00525445 	subseq	r5, r2, r5, asr #8
     9f4:	31433249 	cmpcc	r3, r9, asr #4
     9f8:	534b4332 	movtpl	r4, #45874	; 0xb332
     9fc:	00524c45 	subseq	r4, r2, r5, asr #24
     a00:	4d5f434d 	ldclmi	3, cr4, [pc, #-308]	; 8d4 <_start-0xc000772c>
     a04:	4248414c 	submi	r4, r8, #76, 2
     a08:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
     a0c:	4d005254 	sfmmi	f5, 4, [r0, #-336]	; 0xfffffeb0
     a10:	48415f43 	stmdami	r1, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
     a14:	4e453342 	cdpmi	3, 4, cr3, cr5, cr2, {2}
     a18:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
     a1c:	4c4c5000 	marmi	acc0, r5, ip
     a20:	47464331 	smlaldxmi	r4, r6, r1, r3
     a24:	50003152 	andpl	r3, r0, r2, asr r1
     a28:	43314c4c 	teqmi	r1, #76, 24	; 0x4c00
     a2c:	32524746 	subscc	r4, r2, #18350080	; 0x1180000
     a30:	5f504d00 	svcpl	0x00504d00
     a34:	31425041 	cmpcc	r2, r1, asr #32
     a38:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
     a3c:	54005254 	strpl	r5, [r0], #-596	; 0xfffffdac
     a40:	4248415a 	submi	r4, r8, #-2147483626	; 0x80000016
     a44:	54535236 	ldrbpl	r5, [r3], #-566	; 0xfffffdca
     a48:	52524c43 	subspl	r4, r2, #17152	; 0x4300
     a4c:	42484100 	submi	r4, r8, #0, 2
     a50:	54535233 	ldrbpl	r5, [r3], #-563	; 0xfffffdcd
     a54:	52524c43 	subspl	r4, r2, #17152	; 0x4300
     a58:	5f504d00 	svcpl	0x00504d00
     a5c:	48415a54 	stmdami	r1, {r2, r4, r6, r9, fp, ip, lr}^
     a60:	504c3642 	subpl	r3, ip, r2, asr #12
     a64:	4c434e45 	mcrrmi	14, 4, r4, r3, cr5
     a68:	4d005252 	sfmmi	f5, 4, [r0, #-328]	; 0xfffffeb8
     a6c:	48415f43 	stmdami	r1, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
     a70:	4e453542 	cdpmi	5, 4, cr3, cr5, cr2, {2}
     a74:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
     a78:	5f504d00 	svcpl	0x00504d00
     a7c:	36424841 	strbcc	r4, [r2], -r1, asr #16
     a80:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     a84:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
     a88:	49505300 	ldmdbmi	r0, {r8, r9, ip, lr}^
     a8c:	33325332 	teqcc	r2, #-939524096	; 0xc8000000
     a90:	45534b43 	ldrbmi	r4, [r3, #-2883]	; 0xfffff4bd
     a94:	4100524c 	tstmi	r0, ip, asr #4
     a98:	52334250 	eorspl	r4, r3, #80, 4
     a9c:	4c435453 	cfstrdmi	mvd5, [r3], {83}	; 0x53
     aa0:	4f005252 	svcmi	0x00005252
     aa4:	434e4543 	movtmi	r4, #58691	; 0xe543
     aa8:	0052524c 	subseq	r5, r2, ip, asr #4
     aac:	43474244 	movtmi	r4, #29252	; 0x7244
     ab0:	00524746 	subseq	r4, r2, r6, asr #14
     ab4:	415f434d 	cmpmi	pc, sp, asr #6
     ab8:	4c334250 	lfmmi	f4, 4, [r3], #-320	; 0xfffffec0
     abc:	534e4550 	movtpl	r4, #58704	; 0xe550
     ac0:	00525445 	subseq	r5, r2, r5, asr #8
     ac4:	324f434d 	subcc	r4, pc, #872415233	; 0x34000001
     ac8:	52474643 	subpl	r4, r7, #70254592	; 0x4300000
     acc:	5f504d00 	svcpl	0x00504d00
     ad0:	47445749 	strbmi	r5, [r4, -r9, asr #14]
     ad4:	45535a46 	ldrbmi	r5, [r3, #-2630]	; 0xfffff5ba
     ad8:	52005254 	andpl	r5, r0, #84, 4	; 0x40000005
     adc:	49444354 	stmdbmi	r4, {r2, r4, r6, r8, r9, lr}^
     ae0:	53005256 	movwpl	r5, #598	; 0x256
     ae4:	4e454754 	mcrmi	7, 2, r4, cr5, cr4, {2}
     ae8:	45534b43 	ldrbmi	r4, [r3, #-2883]	; 0xfffff4bd
     aec:	4d00524c 	sfmmi	f5, 4, [r0, #-304]	; 0xfffffed0
     af0:	50415f43 	subpl	r5, r1, r3, asr #30
     af4:	504c3442 	subpl	r3, ip, r2, asr #8
     af8:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
     afc:	55005254 	strpl	r5, [r0, #-596]	; 0xfffffdac
     b00:	33545241 	cmpcc	r4, #268435460	; 0x10000004
     b04:	534b4335 	movtpl	r4, #45877	; 0xb335
     b08:	00524c45 	subseq	r4, r2, r5, asr #24
     b0c:	415f504d 	cmpmi	pc, sp, asr #32
     b10:	45344250 	ldrmi	r4, [r4, #-592]!	; 0xfffffdb0
     b14:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
     b18:	434d0052 	movtmi	r0, #53330	; 0xd052
     b1c:	4250415f 	subsmi	r4, r0, #-1073741801	; 0xc0000017
     b20:	45504c32 	ldrbmi	r4, [r0, #-3122]	; 0xfffff3ce
     b24:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
     b28:	50410052 	subpl	r0, r1, r2, asr r0
     b2c:	49443242 	stmdbmi	r4, {r1, r6, r9, ip, sp}^
     b30:	4d005256 	sfmmi	f5, 4, [r0, #-344]	; 0xfffffea8
     b34:	4c4d5f43 	mcrrmi	15, 4, r5, sp, cr3
     b38:	4c424841 	mcrrmi	8, 4, r4, r2, cr1
     b3c:	434e4550 	movtmi	r4, #58704	; 0xe550
     b40:	0052524c 	subseq	r5, r2, ip, asr #4
     b44:	415f434d 	cmpmi	pc, sp, asr #6
     b48:	45334250 	ldrmi	r4, [r3, #-592]!	; 0xfffffdb0
     b4c:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
     b50:	49540052 	ldmdbmi	r4, {r1, r4, r6}^
     b54:	5032474d 	eorspl	r4, r2, sp, asr #14
     b58:	00524552 	subseq	r4, r2, r2, asr r5
     b5c:	334c4c50 	movtcc	r4, #52304	; 0xcc50
     b60:	4d005243 	sfmmi	f5, 4, [r0, #-268]	; 0xfffffef4
     b64:	50415f50 	subpl	r5, r1, r0, asr pc
     b68:	4e453242 	cdpmi	2, 4, cr3, cr5, cr2, {2}
     b6c:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
     b70:	4c4c5000 	marmi	acc0, r5, ip
     b74:	41524634 	cmpmi	r2, r4, lsr r6
     b78:	4d005243 	sfmmi	f5, 4, [r0, #-268]	; 0xfffffef4
     b7c:	50415f50 	subpl	r5, r1, r0, asr pc
     b80:	504c3242 	subpl	r3, ip, r2, asr #4
     b84:	4c434e45 	mcrrmi	14, 4, r4, r3, cr5
     b88:	41005252 	tstmi	r0, r2, asr r2
     b8c:	52314250 	eorspl	r4, r1, #80, 4
     b90:	45535453 	ldrbmi	r5, [r3, #-1107]	; 0xfffffbad
     b94:	4d005254 	sfmmi	f5, 4, [r0, #-336]	; 0xfffffeb0
     b98:	48415f43 	stmdami	r1, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
     b9c:	504c3342 	subpl	r3, ip, r2, asr #6
     ba0:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
     ba4:	4d005254 	sfmmi	f5, 4, [r0, #-336]	; 0xfffffeb0
     ba8:	48415f43 	stmdami	r1, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
     bac:	504c3642 	subpl	r3, ip, r2, asr #12
     bb0:	4c434e45 	mcrrmi	14, 4, r4, r3, cr5
     bb4:	52005252 	andpl	r5, r0, #536870917	; 0x20000005
     bb8:	49534c44 	ldmdbmi	r3, {r2, r6, sl, fp, lr}^
     bbc:	50005243 	andpl	r5, r0, r3, asr #4
     bc0:	43344c4c 	teqmi	r4, #76, 24	; 0x4c00
     bc4:	53490052 	movtpl	r0, #36946	; 0x9052
     bc8:	42414e45 	submi	r4, r1, #1104	; 0x450
     bcc:	0052454c 	subseq	r4, r2, ip, asr #10
     bd0:	324c4c50 	subcc	r4, ip, #80, 24	; 0x5000
     bd4:	52474643 	subpl	r4, r7, #70254592	; 0x4300000
     bd8:	4c500032 	mrrcmi	0, 3, r0, r0, cr2	; <UNPREDICTABLE>
     bdc:	4643344c 	strbmi	r3, [r3], -ip, asr #8
     be0:	00315247 	eorseq	r5, r1, r7, asr #4
     be4:	32736572 	rsbscc	r6, r3, #478150656	; 0x1c800000
     be8:	504d0034 	subpl	r0, sp, r4, lsr r0
     bec:	4958415f 	ldmdbmi	r8, {r0, r1, r2, r3, r4, r6, r8, lr}^
     bf0:	45504c4d 	ldrbmi	r4, [r0, #-3149]	; 0xfffff3b3
     bf4:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
     bf8:	504d0052 	subpl	r0, sp, r2, asr r0
     bfc:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
     c00:	45504c35 	ldrbmi	r4, [r0, #-3125]	; 0xfffff3cb
     c04:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
     c08:	434d0052 	movtmi	r0, #53330	; 0xd052
     c0c:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
     c10:	45504c34 	ldrbmi	r4, [r0, #-3124]	; 0xfffff3cc
     c14:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
     c18:	504d0052 	subpl	r0, sp, r2, asr r0
     c1c:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
     c20:	534e4533 	movtpl	r4, #58675	; 0xe533
     c24:	00525445 	subseq	r5, r2, r5, asr #8
     c28:	334c4c50 	movtcc	r4, #52304	; 0xcc50
     c2c:	52475343 	subpl	r5, r7, #201326593	; 0xc000001
     c30:	6c616800 	stclvs	8, cr6, [r1], #-0
     c34:	6369675f 	cmnvs	r9, #24903680	; 0x17c0000
     c38:	6e695f64 	cdpvs	15, 6, cr5, cr9, cr4, {3}
     c3c:	4d007469 	cfstrsmi	mvf7, [r0, #-420]	; 0xfffffe5c
     c40:	52535f50 	subspl	r5, r3, #80, 30	; 0x140
     c44:	45535145 	ldrbmi	r5, [r3, #-325]	; 0xfffffebb
     c48:	53005254 	movwpl	r5, #596	; 0x254
     c4c:	434d4d44 	movtmi	r4, #56644	; 0xdd44
     c50:	4b433231 	blmi	10cd51c <_start-0xbef3aae4>
     c54:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
     c58:	5f434d00 	svcpl	0x00434d00
     c5c:	32424841 	subcc	r4, r2, #4259840	; 0x410000
     c60:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     c64:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
     c68:	5f504d00 	svcpl	0x00504d00
     c6c:	4d495841 	stclmi	8, cr5, [r9, #-260]	; 0xfffffefc
     c70:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     c74:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
     c78:	5f434d00 	svcpl	0x00434d00
     c7c:	33425041 	movtcc	r5, #8257	; 0x2041
     c80:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     c84:	52524c43 	subspl	r4, r2, #17152	; 0x4300
     c88:	73657200 	cmnvc	r5, #0, 4
     c8c:	4d003232 	sfmmi	f3, 4, [r0, #-200]	; 0xffffff38
     c90:	444b4350 	strbmi	r4, [fp], #-848	; 0xfffffcb0
     c94:	00525649 	subseq	r5, r2, r9, asr #12
     c98:	49524444 	ldmdbmi	r2, {r2, r6, sl, lr}^
     c9c:	52434654 	subpl	r4, r3, #84, 12	; 0x5400000
     ca0:	45504300 	ldrbmi	r4, [r0, #-768]	; 0xfffffd00
     ca4:	534b4352 	movtpl	r4, #45906	; 0xb352
     ca8:	00524c45 	subseq	r4, r2, r5, asr #24
     cac:	43434543 	movtmi	r4, #13635	; 0x3543
     cb0:	4c45534b 	mcrrmi	3, 4, r5, r5, cr11
     cb4:	504d0052 	subpl	r0, sp, r2, asr r0
     cb8:	4549435f 	strbmi	r4, [r9, #-863]	; 0xfffffca1
     cbc:	44410052 	strbmi	r0, [r1], #-82	; 0xffffffae
     cc0:	534b4343 	movtpl	r4, #45891	; 0xb343
     cc4:	00524c45 	subseq	r4, r2, r5, asr #24
     cc8:	415f434d 	cmpmi	pc, sp, asr #6
     ccc:	45334250 	ldrmi	r4, [r3, #-592]!	; 0xfffffdb0
     cd0:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
     cd4:	4c500052 	mrrcmi	0, 5, r0, r0, cr2	; <UNPREDICTABLE>
     cd8:	5246334c 	subpl	r3, r6, #76, 6	; 0x30000001
     cdc:	00524341 	subseq	r4, r2, r1, asr #6
     ce0:	415f434d 	cmpmi	pc, sp, asr #6
     ce4:	4c4d4958 	mcrrmi	9, 5, r4, sp, cr8	; <UNPREDICTABLE>
     ce8:	434e4550 	movtmi	r4, #58704	; 0xe550
     cec:	0052524c 	subseq	r5, r2, ip, asr #4
     cf0:	36424841 	strbcc	r4, [r2], -r1, asr #16
     cf4:	53545352 	cmppl	r4, #1207959553	; 0x48000001
     cf8:	00525445 	subseq	r5, r2, r5, asr #8
     cfc:	415f504d 	cmpmi	pc, sp, asr #32
     d00:	54535250 	ldrbpl	r5, [r3], #-592	; 0xfffffdb0
     d04:	41005243 	tstmi	r0, r3, asr #4
     d08:	52354250 	eorspl	r4, r5, #80, 4
     d0c:	45535453 	ldrbmi	r5, [r3, #-1107]	; 0xfffffbad
     d10:	4d005254 	sfmmi	f5, 4, [r0, #-336]	; 0xfffffeb0
     d14:	48415f43 	stmdami	r1, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
     d18:	504c3242 	subpl	r3, ip, r2, asr #4
     d1c:	4c434e45 	mcrrmi	14, 4, r4, r3, cr5
     d20:	52005252 	andpl	r5, r0, #536870917	; 0x20000005
     d24:	53334b43 	teqpl	r3, #68608	; 0x10c00
     d28:	00524c45 	subseq	r4, r2, r5, asr #24
     d2c:	52524556 	subspl	r4, r2, #360710144	; 0x15800000
     d30:	5f434d00 	svcpl	0x00434d00
     d34:	35425041 	strbcc	r5, [r2, #-65]	; 0xffffffbf
     d38:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
     d3c:	4d005254 	sfmmi	f5, 4, [r0, #-336]	; 0xfffffeb0
     d40:	48415f43 	stmdami	r1, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
     d44:	4e453242 	cdpmi	2, 4, cr3, cr5, cr2, {2}
     d48:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
     d4c:	5f434d00 	svcpl	0x00434d00
     d50:	35425041 	strbcc	r5, [r2, #-65]	; 0xffffffbf
     d54:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     d58:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
     d5c:	5f434d00 	svcpl	0x00434d00
     d60:	33424841 	movtcc	r4, #10305	; 0x2841
     d64:	4c434e45 	mcrrmi	14, 4, r4, r3, cr5
     d68:	4d005252 	sfmmi	f5, 4, [r0, #-328]	; 0xfffffeb8
     d6c:	49445543 	stmdbmi	r4, {r0, r1, r6, r8, sl, ip, lr}^
     d70:	4d005256 	sfmmi	f5, 4, [r0, #-344]	; 0xfffffea8
     d74:	50415f50 	subpl	r5, r1, r0, asr pc
     d78:	4e453142 	dvfmism	f3, f5, f2
     d7c:	52524c43 	subspl	r4, r2, #17152	; 0x4300
     d80:	5f504d00 	svcpl	0x00504d00
     d84:	00524347 	subseq	r4, r2, r7, asr #6
     d88:	32495053 	subcc	r5, r9, #83	; 0x53
     d8c:	4b433153 	blmi	10cd2e0 <_start-0xbef3ad20>
     d90:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
     d94:	42504100 	subsmi	r4, r0, #0, 2
     d98:	56494435 			; <UNDEFINED> instruction: 0x56494435
     d9c:	4c500052 	mrrcmi	0, 5, r0, r0, cr2	; <UNPREDICTABLE>
     da0:	4643334c 	strbmi	r3, [r3], -ip, asr #6
     da4:	00325247 	eorseq	r5, r2, r7, asr #4
     da8:	415f504d 	cmpmi	pc, sp, asr #32
     dac:	4c334248 	lfmmi	f4, 4, [r3], #-288	; 0xfffffee0
     db0:	434e4550 	movtmi	r4, #58704	; 0xe550
     db4:	0052524c 	subseq	r5, r2, ip, asr #4
     db8:	32424841 	subcc	r4, r2, #4259840	; 0x410000
     dbc:	43545352 	cmpmi	r4, #1207959553	; 0x48000001
     dc0:	0052524c 	subseq	r5, r2, ip, asr #4
     dc4:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
     dc8:	534b4336 	movtpl	r4, #45878	; 0xb336
     dcc:	00524c45 	subseq	r4, r2, r5, asr #24
     dd0:	415f434d 	cmpmi	pc, sp, asr #6
     dd4:	45354248 	ldrmi	r4, [r5, #-584]!	; 0xfffffdb8
     dd8:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
     ddc:	504d0052 	subpl	r0, sp, r2, asr r0
     de0:	4250415f 	subsmi	r4, r0, #-1073741801	; 0xc0000017
     de4:	45504c33 	ldrbmi	r4, [r0, #-3123]	; 0xfffff3cd
     de8:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
     dec:	504d0052 	subpl	r0, sp, r2, asr r0
     df0:	415a545f 	cmpmi	sl, pc, asr r4
     df4:	45364248 	ldrmi	r4, [r6, #-584]!	; 0xfffffdb8
     df8:	4c45534e 	mcrrmi	3, 4, r5, r5, cr14
     dfc:	434d0052 	movtmi	r0, #53330	; 0xd052
     e00:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
     e04:	45504c34 	ldrbmi	r4, [r0, #-3124]	; 0xfffff3cc
     e08:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
     e0c:	504d0052 	subpl	r0, sp, r2, asr r0
     e10:	4250415f 	subsmi	r4, r0, #-1073741801	; 0xc0000017
     e14:	434e4532 	movtmi	r4, #58674	; 0xe532
     e18:	0052524c 	subseq	r5, r2, ip, asr #4
     e1c:	324c4c50 	subcc	r4, ip, #80, 24	; 0x5000
     e20:	53005243 	movwpl	r5, #579	; 0x243
     e24:	46494450 			; <UNDEFINED> instruction: 0x46494450
     e28:	45534b43 	ldrbmi	r4, [r3, #-2883]	; 0xfffff4bd
     e2c:	4c00524c 	sfmmi	f5, 4, [r0], {76}	; 0x4c
     e30:	4d495450 	cfstrdmi	mvd5, [r9, #-320]	; 0xfffffec0
     e34:	4b433332 	blmi	10cdb04 <_start-0xbef3a4fc>
     e38:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
     e3c:	52504900 	subspl	r4, r0, #0, 18
     e40:	49524f49 	ldmdbmi	r2, {r0, r3, r6, r8, r9, sl, fp, lr}^
     e44:	00525954 	subseq	r5, r2, r4, asr r9
     e48:	415f434d 	cmpmi	pc, sp, asr #6
     e4c:	4c324250 	lfmmi	f4, 4, [r2], #-320	; 0xfffffec0
     e50:	434e4550 	movtmi	r4, #58704	; 0xe550
     e54:	0052524c 	subseq	r5, r2, ip, asr #4
     e58:	45505349 	ldrbmi	r5, [r0, #-841]	; 0xfffffcb7
     e5c:	0052444e 	subseq	r4, r2, lr, asr #8
     e60:	415f504d 	cmpmi	pc, sp, asr #32
     e64:	4c334250 	lfmmi	f4, 4, [r3], #-320	; 0xfffffec0
     e68:	534e4550 	movtpl	r4, #58704	; 0xe550
     e6c:	00525445 	subseq	r5, r2, r5, asr #8
     e70:	495f504d 	ldmdbmi	pc, {r0, r2, r3, r6, ip, lr}^	; <UNPREDICTABLE>
     e74:	46474457 			; <UNDEFINED> instruction: 0x46474457
     e78:	524c435a 	subpl	r4, ip, #1744830465	; 0x68000001
     e7c:	504d0052 	subpl	r0, sp, r2, asr r0
     e80:	5250415f 	subspl	r4, r0, #-1073741801	; 0xc0000017
     e84:	52535453 	subspl	r5, r3, #1392508928	; 0x53000000
     e88:	5f434d00 	svcpl	0x00434d00
     e8c:	34425041 	strbcc	r5, [r2], #-65	; 0xffffffbf
     e90:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     e94:	52524c43 	subspl	r4, r2, #17152	; 0x4300
     e98:	5f504d00 	svcpl	0x00504d00
     e9c:	32424841 	subcc	r4, r2, #4259840	; 0x410000
     ea0:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
     ea4:	4d005254 	sfmmi	f5, 4, [r0, #-336]	; 0xfffffeb0
     ea8:	50415f50 	subpl	r5, r1, r0, asr pc
     eac:	504c3542 	subpl	r3, ip, r2, asr #10
     eb0:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
     eb4:	4d005254 	sfmmi	f5, 4, [r0, #-336]	; 0xfffffeb0
     eb8:	48415f43 	stmdami	r1, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
     ebc:	504c3542 	subpl	r3, ip, r2, asr #10
     ec0:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
     ec4:	4d005254 	sfmmi	f5, 4, [r0, #-336]	; 0xfffffeb0
     ec8:	50415f50 	subpl	r5, r1, r0, asr pc
     ecc:	4e453342 	cdpmi	3, 4, cr3, cr5, cr2, {2}
     ed0:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
     ed4:	50434900 	subpl	r4, r3, r0, lsl #18
     ed8:	52444e45 	subpl	r4, r4, #1104	; 0x450
     edc:	45434900 	strbmi	r4, [r3, #-2304]	; 0xfffff700
     ee0:	4c42414e 	stfmie	f4, [r2], {78}	; 0x4e
     ee4:	4d005245 	sfmmi	f5, 4, [r0, #-276]	; 0xfffffeec
     ee8:	50415f50 	subpl	r5, r1, r0, asr pc
     eec:	4e453542 	cdpmi	5, 4, cr3, cr5, cr2, {2}
     ef0:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
     ef4:	4c4c5000 	marmi	acc0, r5, ip
     ef8:	47464334 	smlaldxmi	r4, r6, r4, r3
     efc:	4d003252 	sfmmi	f3, 4, [r0, #-328]	; 0xfffffeb8
     f00:	48415f50 	stmdami	r1, {r4, r6, r8, r9, sl, fp, ip, lr}^
     f04:	504c3542 	subpl	r3, ip, r2, asr #10
     f08:	4c434e45 	mcrrmi	14, 4, r4, r3, cr5
     f0c:	4d005252 	sfmmi	f5, 4, [r0, #-328]	; 0xfffffeb8
     f10:	53525f50 	cmppl	r2, #80, 30	; 0x140
     f14:	00535354 	subseq	r5, r3, r4, asr r3
     f18:	415f504d 	cmpmi	pc, sp, asr #32
     f1c:	45334248 	ldrmi	r4, [r3, #-584]!	; 0xfffffdb8
     f20:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
     f24:	53430052 	movtpl	r0, #12370	; 0x3052
     f28:	47464349 	strbmi	r4, [r6, -r9, asr #6]
     f2c:	504d0052 	subpl	r0, sp, r2, asr r0
     f30:	4552535f 	ldrbmi	r5, [r2, #-863]	; 0xfffffca1
     f34:	524c4351 	subpl	r4, ip, #1140850689	; 0x44000001
     f38:	54490052 	strbpl	r0, [r9], #-82	; 0xffffffae
     f3c:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
     f40:	00525354 	subseq	r5, r2, r4, asr r3
     f44:	32736572 	rsbscc	r6, r3, #478150656	; 0x1c800000
     f48:	504d0036 	subpl	r0, sp, r6, lsr r0
     f4c:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
     f50:	434e4535 	movtmi	r4, #58677	; 0xe535
     f54:	0052524c 	subseq	r5, r2, ip, asr #4
     f58:	415f504d 	cmpmi	pc, sp, asr #32
     f5c:	4c344250 	lfmmi	f4, 4, [r4], #-320	; 0xfffffec0
     f60:	534e4550 	movtpl	r4, #58704	; 0xe550
     f64:	00525445 	subseq	r5, r2, r5, asr #8
     f68:	32494153 	subcc	r4, r9, #-1073741804	; 0xc0000014
     f6c:	45534b43 	ldrbmi	r4, [r3, #-2883]	; 0xfffff4bd
     f70:	4900524c 	stmdbmi	r0, {r2, r3, r6, r9, ip, lr}
     f74:	54434143 	strbpl	r4, [r3], #-323	; 0xfffffebd
     f78:	52455649 	subpl	r5, r5, #76546048	; 0x4900000
     f7c:	5f434d00 	svcpl	0x00434d00
     f80:	4d495841 	stclmi	8, cr5, [r9, #-260]	; 0xfffffefc
     f84:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
     f88:	53005254 	movwpl	r5, #596	; 0x254
     f8c:	35344950 	ldrcc	r4, [r4, #-2384]!	; 0xfffff6b0
     f90:	45534b43 	ldrbmi	r4, [r3, #-2883]	; 0xfffff4bd
     f94:	4d00524c 	sfmmi	f5, 4, [r0, #-304]	; 0xfffffed0
     f98:	50415f50 	subpl	r5, r1, r0, asr pc
     f9c:	504c3142 	subpl	r3, ip, r2, asr #2
     fa0:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
     fa4:	42005254 	andmi	r5, r0, #84, 4	; 0x40000005
     fa8:	00524344 	subseq	r4, r2, r4, asr #6
     fac:	35425041 	strbcc	r5, [r2, #-65]	; 0xffffffbf
     fb0:	43545352 	cmpmi	r4, #1207959553	; 0x48000001
     fb4:	0052524c 	subseq	r5, r2, ip, asr #4
     fb8:	31474e52 	cmpcc	r7, r2, asr lr
     fbc:	45534b43 	ldrbmi	r4, [r3, #-2883]	; 0xfffff4bd
     fc0:	5300524c 	movwpl	r5, #588	; 0x24c
     fc4:	43344941 	teqmi	r4, #1064960	; 0x104000
     fc8:	4c45534b 	mcrrmi	3, 4, r5, r5, cr11
     fcc:	32490052 	subcc	r0, r9, #82	; 0x52
     fd0:	43363443 	teqmi	r6, #1124073472	; 0x43000000
     fd4:	4c45534b 	mcrrmi	3, 4, r5, r5, cr11
     fd8:	434d0052 	movtmi	r0, #53330	; 0xd052
     fdc:	4250415f 	subsmi	r4, r0, #-1073741801	; 0xc0000017
     fe0:	434e4535 	movtmi	r4, #58677	; 0xe535
     fe4:	0052524c 	subseq	r5, r2, ip, asr #4
     fe8:	43425355 	movtmi	r5, #9045	; 0x2355
     fec:	4c45534b 	mcrrmi	3, 4, r5, r5, cr11
     ff0:	53410052 	movtpl	r0, #4178	; 0x1052
     ff4:	534b4353 	movtpl	r4, #45907	; 0xb353
     ff8:	00524c45 	subseq	r4, r2, r5, asr #24
     ffc:	415f434d 	cmpmi	pc, sp, asr #6
    1000:	4c354250 	lfmmi	f4, 4, [r5], #-320	; 0xfffffec0
    1004:	434e4550 	movtmi	r4, #58704	; 0xe550
    1008:	0052524c 	subseq	r5, r2, ip, asr #4
    100c:	314c4c50 	cmpcc	ip, r0, asr ip
    1010:	54005243 	strpl	r5, [r0], #-579	; 0xfffffdbd
    1014:	31474d49 	cmpcc	r7, r9, asr #26
    1018:	52455250 	subpl	r5, r5, #80, 4
    101c:	53455200 	movtpl	r5, #20992	; 0x5200
    1020:	50003131 	andpl	r3, r0, r1, lsr r1
    1024:	43334c4c 	teqmi	r3, #76, 24	; 0x4c00
    1028:	31524746 	cmpcc	r2, r6, asr #14
    102c:	435a5400 	cmpmi	sl, #0, 8
    1030:	434f0052 	movtmi	r0, #61522	; 0xf052
    1034:	52594452 	subspl	r4, r9, #1375731712	; 0x52000000
    1038:	5f434d00 	svcpl	0x00434d00
    103c:	31425041 	cmpcc	r2, r1, asr #32
    1040:	4c434e45 	mcrrmi	14, 4, r4, r3, cr5
    1044:	4d005252 	sfmmi	f5, 4, [r0, #-328]	; 0xfffffeb8
    1048:	50415f50 	subpl	r5, r1, r0, asr pc
    104c:	504c3142 	subpl	r3, ip, r2, asr #2
    1050:	4c434e45 	mcrrmi	14, 4, r4, r3, cr5
    1054:	4d005252 	sfmmi	f5, 4, [r0, #-328]	; 0xfffffeb8
    1058:	50415f50 	subpl	r5, r1, r0, asr pc
    105c:	504c3242 	subpl	r3, ip, r2, asr #4
    1060:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
    1064:	41005254 	tstmi	r0, r4, asr r2
    1068:	52344250 	eorspl	r4, r4, #80, 4
    106c:	45535453 	ldrbmi	r5, [r3, #-1107]	; 0xfffffbad
    1070:	4d005254 	sfmmi	f5, 4, [r0, #-336]	; 0xfffffeb0
    1074:	48415f43 	stmdami	r1, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
    1078:	4e453442 	cdpmi	4, 4, cr3, cr5, cr2, {2}
    107c:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
    1080:	434d4600 	movtmi	r4, #54784	; 0xd600
    1084:	45534b43 	ldrbmi	r4, [r3, #-2883]	; 0xfffff4bd
    1088:	4d00524c 	sfmmi	f5, 4, [r0, #-304]	; 0xfffffed0
    108c:	50415f43 	subpl	r5, r1, r3, asr #30
    1090:	4e453242 	cdpmi	2, 4, cr3, cr5, cr2, {2}
    1094:	52524c43 	subspl	r4, r2, #17152	; 0x4300
    1098:	4c4c5000 	marmi	acc0, r5, ip
    109c:	47534332 	smmlarmi	r3, r2, r3, r4
    10a0:	504d0052 	subpl	r0, sp, r2, asr r0
    10a4:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
    10a8:	45504c36 	ldrbmi	r4, [r0, #-3126]	; 0xfffff3ca
    10ac:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
    10b0:	434d0052 	movtmi	r0, #53330	; 0xd052
    10b4:	4649435f 			; <UNDEFINED> instruction: 0x4649435f
    10b8:	434d0052 	movtmi	r0, #53330	; 0xd052
    10bc:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
    10c0:	45504c33 	ldrbmi	r4, [r0, #-3123]	; 0xfffff3cd
    10c4:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
    10c8:	434d0052 	movtmi	r0, #53330	; 0xd052
    10cc:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
    10d0:	534e4536 	movtpl	r4, #58678	; 0xe536
    10d4:	00525445 	subseq	r5, r2, r5, asr #8
    10d8:	415f434d 	cmpmi	pc, sp, asr #6
    10dc:	45314250 	ldrmi	r4, [r1, #-592]!	; 0xfffffdb0
    10e0:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
    10e4:	65670052 	strbvs	r0, [r7, #-82]!	; 0xffffffae
    10e8:	74735f74 	ldrbtvc	r5, [r3], #-3956	; 0xfffff08c
    10ec:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
    10f0:	74656700 	strbtvc	r6, [r5], #-1792	; 0xfffff900
    10f4:	6168635f 	cmnvs	r8, pc, asr r3
    10f8:	72730072 	rsbsvc	r0, r3, #114	; 0x72
    10fc:	61752f63 	cmnvs	r5, r3, ror #30
    1100:	2e347472 	mrccs	4, 1, r7, cr4, cr2, {3}
    1104:	75700063 	ldrbvc	r0, [r0, #-99]!	; 0xffffff9d
    1108:	74735f74 	ldrbtvc	r5, [r3], #-3956	; 0xfffff08c
    110c:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
    1110:	74757000 	ldrbtvc	r7, [r5], #-0
    1114:	6168635f 	cmnvs	r8, pc, asr r3
    1118:	75620072 	strbvc	r0, [r2, #-114]!	; 0xffffff8e
    111c:	68006666 	stmdavs	r0, {r1, r2, r5, r6, r9, sl, sp, lr}
    1120:	755f6c61 	ldrbvc	r6, [pc, #-3169]	; 4c7 <_start-0xc0007b39>
    1124:	34747261 	ldrbtcc	r7, [r4], #-609	; 0xfffffd9f
    1128:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    112c:	616d0074 	smcvs	53252	; 0xd004
    1130:	632e6e69 			; <UNDEFINED> instruction: 0x632e6e69
    1134:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
    1138:	6564006e 	strbvs	r0, [r4, #-110]!	; 0xffffff92
    113c:	5f79616c 	svcpl	0x0079616c
    1140:	Address 0x00001140 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000001c 	andeq	r0, r0, ip, lsl r0
  14:	00000000 	andeq	r0, r0, r0
  18:	c000835c 	andgt	r8, r0, ip, asr r3
  1c:	00000050 	andeq	r0, r0, r0, asr r0
  20:	8b040e42 	blhi	103930 <_start-0xbff046d0>
  24:	0b0d4201 	bleq	350830 <_start-0xbfcb77d0>
  28:	420d0d60 	andmi	r0, sp, #96, 26	; 0x1800
  2c:	00000ecb 	andeq	r0, r0, fp, asr #29
  30:	0000001c 	andeq	r0, r0, ip, lsl r0
  34:	00000000 	andeq	r0, r0, r0
  38:	c00083ac 	andgt	r8, r0, ip, lsr #7
  3c:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
  40:	8b080e42 	blhi	203950 <_start-0xbfe046b0>
  44:	42018e02 	andmi	r8, r1, #2, 28
  48:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
  4c:	080d0cd6 	stmdaeq	sp, {r1, r2, r4, r6, r7, sl, fp}
  50:	0000001c 	andeq	r0, r0, ip, lsl r0
  54:	00000000 	andeq	r0, r0, r0
  58:	c0008564 	andgt	r8, r0, r4, ror #10
  5c:	0000006c 	andeq	r0, r0, ip, rrx
  60:	8b080e42 	blhi	203970 <_start-0xbfe04690>
  64:	42018e02 	andmi	r8, r1, #2, 28
  68:	70040b0c 	andvc	r0, r4, ip, lsl #22
  6c:	00080d0c 	andeq	r0, r8, ip, lsl #26
  70:	0000001c 	andeq	r0, r0, ip, lsl r0
  74:	00000000 	andeq	r0, r0, r0
  78:	c00085d0 	ldrdgt	r8, [r0], -r0
  7c:	00000094 	muleq	r0, r4, r0
  80:	8b040e42 	blhi	103990 <_start-0xbff04670>
  84:	0b0d4201 	bleq	350890 <_start-0xbfcb7770>
  88:	0d0d4202 	sfmeq	f4, 4, [sp, #-8]
  8c:	000ecb42 	andeq	ip, lr, r2, asr #22
  90:	00000020 	andeq	r0, r0, r0, lsr #32
  94:	00000000 	andeq	r0, r0, r0
  98:	c0008664 	andgt	r8, r0, r4, ror #12
  9c:	000003e4 	andeq	r0, r0, r4, ror #7
  a0:	8b080e42 	blhi	2039b0 <_start-0xbfe04650>
  a4:	42018e02 	andmi	r8, r1, #2, 28
  a8:	03040b0c 	movweq	r0, #19212	; 0x4b0c
  ac:	0d0c01ec 	stfeqs	f0, [ip, #-944]	; 0xfffffc50
  b0:	00000008 	andeq	r0, r0, r8
  b4:	0000001c 	andeq	r0, r0, ip, lsl r0
  b8:	00000000 	andeq	r0, r0, r0
  bc:	c0008a48 	andgt	r8, r0, r8, asr #20
  c0:	0000006c 	andeq	r0, r0, ip, rrx
  c4:	8b040e42 	blhi	1039d4 <_start-0xbff0462c>
  c8:	0b0d4201 	bleq	3508d4 <_start-0xbfcb772c>
  cc:	420d0d6e 	andmi	r0, sp, #7040	; 0x1b80
  d0:	00000ecb 	andeq	r0, r0, fp, asr #29
  d4:	00000020 	andeq	r0, r0, r0, lsr #32
  d8:	00000000 	andeq	r0, r0, r0
  dc:	c0008ab4 			; <UNDEFINED> instruction: 0xc0008ab4
  e0:	000008c8 	andeq	r0, r0, r8, asr #17
  e4:	8b080e42 	blhi	2039f4 <_start-0xbfe0460c>
  e8:	42018e02 	andmi	r8, r1, #2, 28
  ec:	03040b0c 	movweq	r0, #19212	; 0x4b0c
  f0:	0d0c045e 	cfstrseq	mvf0, [ip, #-376]	; 0xfffffe88
  f4:	00000008 	andeq	r0, r0, r8
  f8:	00000030 	andeq	r0, r0, r0, lsr r0
  fc:	00000000 	andeq	r0, r0, r0
 100:	c000937c 	andgt	r9, r0, ip, ror r3
 104:	0000004c 	andeq	r0, r0, ip, asr #32
 108:	810c0e42 	tsthi	ip, r2, asr #28
 10c:	83028203 	movwhi	r8, #8707	; 0x2203
 110:	140e4201 	strne	r4, [lr], #-513	; 0xfffffdff
 114:	048e058b 	streq	r0, [lr], #1419	; 0x58b
 118:	100b0c42 	andne	r0, fp, r2, asr #24
 11c:	140d0c5a 	strne	r0, [sp], #-3162	; 0xfffff3a6
 120:	0ecbce42 	cdpeq	14, 12, cr12, cr11, cr2, {2}
 124:	c2c3420c 	sbcgt	r4, r3, #12, 4	; 0xc0000000
 128:	00000ec1 	andeq	r0, r0, r1, asr #29
 12c:	00000034 	andeq	r0, r0, r4, lsr r0
 130:	00000000 	andeq	r0, r0, r0
 134:	c00093c8 	andgt	r9, r0, r8, asr #7
 138:	0000004c 	andeq	r0, r0, ip, asr #32
 13c:	80100e42 	andshi	r0, r0, r2, asr #28
 140:	82038104 	andhi	r8, r3, #4, 2
 144:	42018302 	andmi	r8, r1, #134217728	; 0x8000000
 148:	068b180e 	streq	r1, [fp], lr, lsl #16
 14c:	0c42058e 	cfstr64eq	mvdx0, [r2], {142}	; 0x8e
 150:	0c5a140b 	cfldrdeq	mvd1, [sl], {11}
 154:	ce42180d 	cdpgt	8, 4, cr1, cr2, cr13, {0}
 158:	42100ecb 	andsmi	r0, r0, #3248	; 0xcb0
 15c:	c0c1c2c3 	sbcgt	ip, r1, r3, asr #5
 160:	0000000e 	andeq	r0, r0, lr
 164:	0000000c 	andeq	r0, r0, ip
 168:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 16c:	7c020001 	stcvc	0, cr0, [r2], {1}
 170:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 174:	0000001c 	andeq	r0, r0, ip, lsl r0
 178:	00000164 	andeq	r0, r0, r4, ror #2
 17c:	c0009414 	andgt	r9, r0, r4, lsl r4
 180:	000001e8 	andeq	r0, r0, r8, ror #3
 184:	8b040e42 	blhi	103a94 <_start-0xbff0456c>
 188:	0b0d4201 	bleq	350994 <_start-0xbfcb766c>
 18c:	0d0dec02 	stceq	12, cr14, [sp, #-8]
 190:	000ecb42 	andeq	ip, lr, r2, asr #22
 194:	0000001c 	andeq	r0, r0, ip, lsl r0
 198:	00000164 	andeq	r0, r0, r4, ror #2
 19c:	c00095fc 	strdgt	r9, [r0], -ip
 1a0:	00000060 	andeq	r0, r0, r0, rrx
 1a4:	8b080e42 	blhi	203ab4 <_start-0xbfe0454c>
 1a8:	42018e02 	andmi	r8, r1, #2, 28
 1ac:	6a040b0c 	bvs	102de4 <_start-0xbff0521c>
 1b0:	00080d0c 	andeq	r0, r8, ip, lsl #26
 1b4:	0000001c 	andeq	r0, r0, ip, lsl r0
 1b8:	00000164 	andeq	r0, r0, r4, ror #2
 1bc:	c000965c 	andgt	r9, r0, ip, asr r6
 1c0:	00000048 	andeq	r0, r0, r8, asr #32
 1c4:	8b080e42 	blhi	203ad4 <_start-0xbfe0452c>
 1c8:	42018e02 	andmi	r8, r1, #2, 28
 1cc:	5e040b0c 	vmlapl.f64	d0, d4, d12
 1d0:	00080d0c 	andeq	r0, r8, ip, lsl #26
 1d4:	0000001c 	andeq	r0, r0, ip, lsl r0
 1d8:	00000164 	andeq	r0, r0, r4, ror #2
 1dc:	c00096a4 	andgt	r9, r0, r4, lsr #13
 1e0:	0000004c 	andeq	r0, r0, ip, asr #32
 1e4:	8b040e42 	blhi	103af4 <_start-0xbff0450c>
 1e8:	0b0d4201 	bleq	3509f4 <_start-0xbfcb760c>
 1ec:	420d0d5e 	andmi	r0, sp, #6016	; 0x1780
 1f0:	00000ecb 	andeq	r0, r0, fp, asr #29
 1f4:	0000000c 	andeq	r0, r0, ip
 1f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 1fc:	7c020001 	stcvc	0, cr0, [r2], {1}
 200:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 204:	0000001c 	andeq	r0, r0, ip, lsl r0
 208:	000001f4 	strdeq	r0, [r0], -r4
 20c:	c00096f0 	strdgt	r9, [r0], -r0
 210:	000001a0 	andeq	r0, r0, r0, lsr #3
 214:	8b080e42 	blhi	203b24 <_start-0xbfe044dc>
 218:	42018e02 	andmi	r8, r1, #2, 28
 21c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
 220:	080d0cca 	stmdaeq	sp, {r1, r3, r6, r7, sl, fp}
 224:	0000000c 	andeq	r0, r0, ip
 228:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 22c:	7c020001 	stcvc	0, cr0, [r2], {1}
 230:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 234:	0000001c 	andeq	r0, r0, ip, lsl r0
 238:	00000224 	andeq	r0, r0, r4, lsr #4
 23c:	c0009890 	mulgt	r0, r0, r8
 240:	0000015c 	andeq	r0, r0, ip, asr r1
 244:	8b040e42 	blhi	103b54 <_start-0xbff044ac>
 248:	0b0d4201 	bleq	350a54 <_start-0xbfcb75ac>
 24c:	0d0da602 	stceq	6, cr10, [sp, #-8]
 250:	000ecb42 	andeq	ip, lr, r2, asr #22
 254:	0000001c 	andeq	r0, r0, ip, lsl r0
 258:	00000224 	andeq	r0, r0, r4, lsr #4
 25c:	c00099ec 	andgt	r9, r0, ip, ror #19
 260:	00000088 	andeq	r0, r0, r8, lsl #1
 264:	8b040e42 	blhi	103b74 <_start-0xbff0448c>
 268:	0b0d4201 	bleq	350a74 <_start-0xbfcb758c>
 26c:	420d0d7c 	andmi	r0, sp, #124, 26	; 0x1f00
 270:	00000ecb 	andeq	r0, r0, fp, asr #29
 274:	0000000c 	andeq	r0, r0, ip
 278:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 27c:	7c020001 	stcvc	0, cr0, [r2], {1}
 280:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 284:	00000020 	andeq	r0, r0, r0, lsr #32
 288:	00000274 	andeq	r0, r0, r4, ror r2
 28c:	c0009a74 	andgt	r9, r0, r4, ror sl
 290:	00000224 	andeq	r0, r0, r4, lsr #4
 294:	8b040e42 	blhi	103ba4 <_start-0xbff0445c>
 298:	0b0d4201 	bleq	350aa4 <_start-0xbfcb755c>
 29c:	0d010a03 	vstreq	s0, [r1, #-12]
 2a0:	0ecb420d 	cdpeq	2, 12, cr4, cr11, cr13, {0}
 2a4:	00000000 	andeq	r0, r0, r0
 2a8:	0000001c 	andeq	r0, r0, ip, lsl r0
 2ac:	00000274 	andeq	r0, r0, r4, ror r2
 2b0:	c0009c98 	mulgt	r0, r8, ip
 2b4:	00000184 	andeq	r0, r0, r4, lsl #3
 2b8:	8b040e42 	blhi	103bc8 <_start-0xbff04438>
 2bc:	0b0d4201 	bleq	350ac8 <_start-0xbfcb7538>
 2c0:	0d0dba02 	vstreq	s22, [sp, #-8]
 2c4:	000ecb42 	andeq	ip, lr, r2, asr #22
 2c8:	0000001c 	andeq	r0, r0, ip, lsl r0
 2cc:	00000274 	andeq	r0, r0, r4, ror r2
 2d0:	c0009e1c 	andgt	r9, r0, ip, lsl lr
 2d4:	00000050 	andeq	r0, r0, r0, asr r0
 2d8:	8b040e42 	blhi	103be8 <_start-0xbff04418>
 2dc:	0b0d4201 	bleq	350ae8 <_start-0xbfcb7518>
 2e0:	420d0d60 	andmi	r0, sp, #96, 26	; 0x1800
 2e4:	00000ecb 	andeq	r0, r0, fp, asr #29
 2e8:	0000000c 	andeq	r0, r0, ip
 2ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 2f0:	7c020001 	stcvc	0, cr0, [r2], {1}
 2f4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 2f8:	0000001c 	andeq	r0, r0, ip, lsl r0
 2fc:	000002e8 	andeq	r0, r0, r8, ror #5
 300:	c0009e6c 	andgt	r9, r0, ip, ror #28
 304:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
 308:	8b040e42 	blhi	103c18 <_start-0xbff043e8>
 30c:	0b0d4201 	bleq	350b18 <_start-0xbfcb74e8>
 310:	0d0dd202 	sfmeq	f5, 1, [sp, #-8]
 314:	000ecb42 	andeq	ip, lr, r2, asr #22
 318:	0000001c 	andeq	r0, r0, ip, lsl r0
 31c:	000002e8 	andeq	r0, r0, r8, ror #5
 320:	c000a020 	andgt	sl, r0, r0, lsr #32
 324:	0000007c 	andeq	r0, r0, ip, ror r0
 328:	8b080e42 	blhi	203c38 <_start-0xbfe043c8>
 32c:	42018e02 	andmi	r8, r1, #2, 28
 330:	78040b0c 	stmdavc	r4, {r2, r3, r8, r9, fp}
 334:	00080d0c 	andeq	r0, r8, ip, lsl #26
 338:	0000001c 	andeq	r0, r0, ip, lsl r0
 33c:	000002e8 	andeq	r0, r0, r8, ror #5
 340:	c000a09c 	mulgt	r0, ip, r0
 344:	00000048 	andeq	r0, r0, r8, asr #32
 348:	8b080e42 	blhi	203c58 <_start-0xbfe043a8>
 34c:	42018e02 	andmi	r8, r1, #2, 28
 350:	5e040b0c 	vmlapl.f64	d0, d4, d12
 354:	00080d0c 	andeq	r0, r8, ip, lsl #26
 358:	0000001c 	andeq	r0, r0, ip, lsl r0
 35c:	000002e8 	andeq	r0, r0, r8, ror #5
 360:	c000a0e4 	andgt	sl, r0, r4, ror #1
 364:	0000004c 	andeq	r0, r0, ip, asr #32
 368:	8b040e42 	blhi	103c78 <_start-0xbff04388>
 36c:	0b0d4201 	bleq	350b78 <_start-0xbfcb7488>
 370:	420d0d5e 	andmi	r0, sp, #6016	; 0x1780
 374:	00000ecb 	andeq	r0, r0, fp, asr #29
 378:	0000001c 	andeq	r0, r0, ip, lsl r0
 37c:	000002e8 	andeq	r0, r0, r8, ror #5
 380:	c000a130 	andgt	sl, r0, r0, lsr r1
 384:	000000c8 	andeq	r0, r0, r8, asr #1
 388:	8b080e42 	blhi	203c98 <_start-0xbfe04368>
 38c:	42018e02 	andmi	r8, r1, #2, 28
 390:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
 394:	080d0c5e 	stmdaeq	sp, {r1, r2, r3, r4, r6, sl, fp}
 398:	0000000c 	andeq	r0, r0, ip
 39c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 3a0:	7c020001 	stcvc	0, cr0, [r2], {1}
 3a4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 3a8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3ac:	00000398 	muleq	r0, r8, r3
 3b0:	c000a1f8 	strdgt	sl, [r0], -r8
 3b4:	00000070 	andeq	r0, r0, r0, ror r0
 3b8:	8b040e42 	blhi	103cc8 <_start-0xbff04338>
 3bc:	0b0d4201 	bleq	350bc8 <_start-0xbfcb7438>
 3c0:	420d0d70 	andmi	r0, sp, #112, 26	; 0x1c00
 3c4:	00000ecb 	andeq	r0, r0, fp, asr #29
 3c8:	00000018 	andeq	r0, r0, r8, lsl r0
 3cc:	00000398 	muleq	r0, r8, r3
 3d0:	c000a268 	andgt	sl, r0, r8, ror #4
 3d4:	00000018 	andeq	r0, r0, r8, lsl r0
 3d8:	8b080e42 	blhi	203ce8 <_start-0xbfe04318>
 3dc:	42018e02 	andmi	r8, r1, #2, 28
 3e0:	00040b0c 	andeq	r0, r4, ip, lsl #22
