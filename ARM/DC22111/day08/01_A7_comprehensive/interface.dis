
interface.elf:     file format elf32-littlearm


Disassembly of section .text:

c0008000 <_start>:
.text

	.global	_start
_start:
@ 异常向量表
	b reset
c0008000:	ea00000d 	b	c000803c <reset>
	ldr pc, _undefined_instruction
c0008004:	e59ff014 	ldr	pc, [pc, #20]	; c0008020 <_undefined_instruction>
	ldr pc, _software_interrupt
c0008008:	e59ff014 	ldr	pc, [pc, #20]	; c0008024 <_software_interrupt>
	ldr pc, _prefetch_abort
c000800c:	e59ff014 	ldr	pc, [pc, #20]	; c0008028 <_prefetch_abort>
	ldr pc, _data_abort
c0008010:	e59ff014 	ldr	pc, [pc, #20]	; c000802c <_data_abort>
	ldr pc, _not_used
c0008014:	e59ff014 	ldr	pc, [pc, #20]	; c0008030 <_not_used>
	ldr pc, _irq
c0008018:	e59ff014 	ldr	pc, [pc, #20]	; c0008034 <_irq>
	ldr pc, _fiq
c000801c:	e59ff014 	ldr	pc, [pc, #20]	; c0008038 <_fiq>

c0008020 <_undefined_instruction>:
c0008020:	c0008140 	andgt	r8, r0, r0, asr #2

c0008024 <_software_interrupt>:
c0008024:	c0008160 	andgt	r8, r0, r0, ror #2

c0008028 <_prefetch_abort>:
c0008028:	c0008180 	andgt	r8, r0, r0, lsl #3

c000802c <_data_abort>:
c000802c:	c00081a0 	andgt	r8, r0, r0, lsr #3

c0008030 <_not_used>:
c0008030:	c00081c0 	andgt	r8, r0, r0, asr #3

c0008034 <_irq>:
c0008034:	c00081e0 	andgt	r8, r0, r0, ror #3

c0008038 <_fiq>:
c0008038:	c0008200 	andgt	r8, r0, r0, lsl #4

c000803c <reset>:

 /* The actual reset code */
reset:
	@ 重新映射异常向量表的入口地址
	/* Set Vector Base Address Register */
	mrc p15, 0, r0, c1, c0, 0
c000803c:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
	bic r0, #(1<<13)
c0008040:	e3c00a02 	bic	r0, r0, #8192	; 0x2000
	mcr p15, 0, r0, c1, c0, 0
c0008044:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
	ldr	r0,=0xc0008000
c0008048:	e59f01b8 	ldr	r0, [pc, #440]	; c0008208 <stacktop+0x4>
	mcr	p15,0,r0,c12,c0,0		@ Vector Base Address Register
c000804c:	ee0c0f10 	mcr	15, 0, r0, cr12, cr0, {0}

	/* Set the cpu to svc32 mode */
	mrs r0, cpsr
c0008050:	e10f0000 	mrs	r0, CPSR
	bic r0, r0, #0x1f
c0008054:	e3c0001f 	bic	r0, r0, #31
	orr r0, r0, #0xd3
c0008058:	e38000d3 	orr	r0, r0, #211	; 0xd3
	msr cpsr, r0
c000805c:	e129f000 	msr	CPSR_fc, r0

	/* Enable NEON/VFP unit */
	mrc p15, #0, r1, c1, c0, #2
c0008060:	ee111f50 	mrc	15, 0, r1, cr1, cr0, {2}
	orr r1, r1, #(0xf << 20)
c0008064:	e381160f 	orr	r1, r1, #15728640	; 0xf00000
	mcr p15, #0, r1, c1, c0, #2
c0008068:	ee011f50 	mcr	15, 0, r1, cr1, cr0, {2}
	mov r1, #0
c000806c:	e3a01000 	mov	r1, #0
	mcr p15, #0, r1, c7, c5, #4
c0008070:	ee071f95 	mcr	15, 0, r1, cr7, cr5, {4}
	mov r0, #0x40000000
c0008074:	e3a00101 	mov	r0, #1073741824	; 0x40000000
	fmxr fpexc, r0
c0008078:	eee80a10 	vmsr	fpexc, r0

	/* Cache init */
	mrc	p15, 0, r0, c0, c0, 0
c000807c:	ee100f10 	mrc	15, 0, r0, cr0, cr0, {0}
	and	r1, r0, #0x00f00000
c0008080:	e200160f 	and	r1, r0, #15728640	; 0xf00000
	and	r2, r0, #0x0000000f
c0008084:	e200200f 	and	r2, r0, #15
	orr r2, r2, r1, lsr #20-4
c0008088:	e1822821 	orr	r2, r2, r1, lsr #16
	cmp r2, #0x30
c000808c:	e3520030 	cmp	r2, #48	; 0x30
	mrceq p15, 0, r0, c1, c0, 1
c0008090:	0e110f30 	mrceq	15, 0, r0, cr1, cr0, {1}
	orreq r0, r0, #0x6
c0008094:	03800006 	orreq	r0, r0, #6
	mcreq p15, 0, r0, c1, c0, 1
c0008098:	0e010f30 	mcreq	15, 0, r0, cr1, cr0, {1}

	/* Invalidate L1 I/D */
	mov r0, #0
c000809c:	e3a00000 	mov	r0, #0
	mcr	p15, 0, r0, c8, c7, 0
c00080a0:	ee080f17 	mcr	15, 0, r0, cr8, cr7, {0}
	mcr	p15, 0, r0, c7, c5, 0
c00080a4:	ee070f15 	mcr	15, 0, r0, cr7, cr5, {0}

	/* Disable mmu stuff and caches */
	mrc p15, 0, r0, c1, c0, 0
c00080a8:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
	bic r0, r0, #0x00002000
c00080ac:	e3c00a02 	bic	r0, r0, #8192	; 0x2000
	bic r0, r0, #0x00000007
c00080b0:	e3c00007 	bic	r0, r0, #7
	orr r0, r0, #0x00001000
c00080b4:	e3800a01 	orr	r0, r0, #4096	; 0x1000
	orr r0, r0, #0x00000002
c00080b8:	e3800002 	orr	r0, r0, #2
	orr r0, r0, #0x00000800
c00080bc:	e3800b02 	orr	r0, r0, #2048	; 0x800
	mcr p15, 0, r0, c1, c0, 0
c00080c0:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}

c00080c4 <init_stack>:

	/* Initialize stacks */
	@ 初始化各种模式下的占空间
init_stack:
	ldr	r0, stacktop        /*get stack top pointer*/
c00080c4:	e59f0138 	ldr	r0, [pc, #312]	; c0008204 <stacktop>

	/********svc mode stack********/
	mov	sp, r0
c00080c8:	e1a0d000 	mov	sp, r0
	sub	r0, #128*4          /*512 byte  for irq mode of stack*/
c00080cc:	e2400c02 	sub	r0, r0, #512	; 0x200
	/********irq mode stack********/
	msr	cpsr, #0xd2
c00080d0:	e329f0d2 	msr	CPSR_fc, #210	; 0xd2
	mov	sp, r0
c00080d4:	e1a0d000 	mov	sp, r0
	sub	r0, #128*4          /*512 byte  for fiq mode of stack*/
c00080d8:	e2400c02 	sub	r0, r0, #512	; 0x200
	/********fiq mode stack********/
	msr	cpsr, #0xd1
c00080dc:	e329f0d1 	msr	CPSR_fc, #209	; 0xd1
	mov	sp, r0
c00080e0:	e1a0d000 	mov	sp, r0
	sub	r0, #0
c00080e4:	e2400000 	sub	r0, r0, #0
	/********abort mode stack******/
	msr	cpsr, #0xd7
c00080e8:	e329f0d7 	msr	CPSR_fc, #215	; 0xd7
	mov	sp, r0
c00080ec:	e1a0d000 	mov	sp, r0
	sub	r0, #0
c00080f0:	e2400000 	sub	r0, r0, #0
	/********undefine mode stack**/
	msr	cpsr, #0xdb
c00080f4:	e329f0db 	msr	CPSR_fc, #219	; 0xdb
	mov	sp, r0
c00080f8:	e1a0d000 	mov	sp, r0
	sub	r0, #0
c00080fc:	e2400000 	sub	r0, r0, #0
    /***sys mode and usr mode stack***/
	msr	cpsr, #0x10
c0008100:	e329f010 	msr	CPSR_fc, #16
	mov	sp, r0             /*1024 byte  for user mode of stack*/
c0008104:	e1a0d000 	mov	sp, r0

    /******clear bss section********/
	@ 清除BSS段
	ldr	r0, =__bss_start	/* this is auto-relocated! */
c0008108:	e59f00fc 	ldr	r0, [pc, #252]	; c000820c <stacktop+0x8>
	ldr	r1, =__bss_end__	/* this is auto-relocated! */
c000810c:	e59f10fc 	ldr	r1, [pc, #252]	; c0008210 <stacktop+0xc>
	mov	r2, #0x00000000		/* prepare zero to clear BSS */
c0008110:	e3a02000 	mov	r2, #0

c0008114 <clbss_l>:

clbss_l: cmp r0, r1			/* while not at end of BSS */
c0008114:	e1500001 	cmp	r0, r1
	strlo r2, [r0]			/* clear 32-bit BSS word */
c0008118:	35802000 	strcc	r2, [r0]
	addlo r0, r0, #4		/* move to next */
c000811c:	32800004 	addcc	r0, r0, #4
	blo	clbss_l
c0008120:	3afffffb 	bcc	c0008114 <clbss_l>

	/* Call _main */
	ldr pc, =main     @ 汇编调用C  跳转到main.c文件的main函数中
c0008124:	e59ff0e8 	ldr	pc, [pc, #232]	; c0008214 <stacktop+0x10>
c0008128:	e320f000 	nop	{0}
c000812c:	e320f000 	nop	{0}
c0008130:	e320f000 	nop	{0}
c0008134:	e320f000 	nop	{0}
c0008138:	e320f000 	nop	{0}
c000813c:	e320f000 	nop	{0}

c0008140 <undefined_instruction>:
/*
 * Exception handlers
 */
	.align 5  // 2的5次方，=32bit 也就是4字节对其
undefined_instruction:
	b	.
c0008140:	eafffffe 	b	c0008140 <undefined_instruction>
c0008144:	e320f000 	nop	{0}
c0008148:	e320f000 	nop	{0}
c000814c:	e320f000 	nop	{0}
c0008150:	e320f000 	nop	{0}
c0008154:	e320f000 	nop	{0}
c0008158:	e320f000 	nop	{0}
c000815c:	e320f000 	nop	{0}

c0008160 <software_interrupt>:

	.align 5
software_interrupt:
	b	.
c0008160:	eafffffe 	b	c0008160 <software_interrupt>
c0008164:	e320f000 	nop	{0}
c0008168:	e320f000 	nop	{0}
c000816c:	e320f000 	nop	{0}
c0008170:	e320f000 	nop	{0}
c0008174:	e320f000 	nop	{0}
c0008178:	e320f000 	nop	{0}
c000817c:	e320f000 	nop	{0}

c0008180 <prefetch_abort>:

	.align 5
prefetch_abort:
	b	.
c0008180:	eafffffe 	b	c0008180 <prefetch_abort>
c0008184:	e320f000 	nop	{0}
c0008188:	e320f000 	nop	{0}
c000818c:	e320f000 	nop	{0}
c0008190:	e320f000 	nop	{0}
c0008194:	e320f000 	nop	{0}
c0008198:	e320f000 	nop	{0}
c000819c:	e320f000 	nop	{0}

c00081a0 <data_abort>:

	.align 5
data_abort:
	b	.
c00081a0:	eafffffe 	b	c00081a0 <data_abort>
c00081a4:	e320f000 	nop	{0}
c00081a8:	e320f000 	nop	{0}
c00081ac:	e320f000 	nop	{0}
c00081b0:	e320f000 	nop	{0}
c00081b4:	e320f000 	nop	{0}
c00081b8:	e320f000 	nop	{0}
c00081bc:	e320f000 	nop	{0}

c00081c0 <not_used>:

	.align 5
not_used:
	b	.
c00081c0:	eafffffe 	b	c00081c0 <not_used>
c00081c4:	e320f000 	nop	{0}
c00081c8:	e320f000 	nop	{0}
c00081cc:	e320f000 	nop	{0}
c00081d0:	e320f000 	nop	{0}
c00081d4:	e320f000 	nop	{0}
c00081d8:	e320f000 	nop	{0}
c00081dc:	e320f000 	nop	{0}

c00081e0 <irq>:

	.align 5
	.global irq
irq:
	sub  lr, lr, #4
c00081e0:	e24ee004 	sub	lr, lr, #4
	stmfd sp!, {r0-r12, lr}
c00081e4:	e92d5fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	bl do_irq
c00081e8:	eb000540 	bl	c00096f0 <do_irq>
	ldmfd sp!, {r0-r12, pc}^
c00081ec:	e8fd9fff 	ldm	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}^
c00081f0:	e320f000 	nop	{0}
c00081f4:	e320f000 	nop	{0}
c00081f8:	e320f000 	nop	{0}
c00081fc:	e320f000 	nop	{0}

c0008200 <fiq>:

	.align 5
	.global fiq
fiq:
	b .
c0008200:	eafffffe 	b	c0008200 <fiq>

c0008204 <stacktop>:
c0008204:	c000a814 	andgt	sl, r0, r4, lsl r8
	ldr	r0,=0xc0008000
c0008208:	c0008000 	andgt	r8, r0, r0
	ldr	r0, =__bss_start	/* this is auto-relocated! */
c000820c:	c000a98c 	andgt	sl, r0, ip, lsl #19
	ldr	r1, =__bss_end__	/* this is auto-relocated! */
c0008210:	c000a9c8 	andgt	sl, r0, r8, asr #19
	ldr pc, =main     @ 汇编调用C  跳转到main.c文件的main函数中
c0008214:	c0009e30 	andgt	r9, r0, r0, lsr lr

c0008218 <__umodsi3>:
	.text
	.globl	 __umodsi3
	.type  __umodsi3       ,function
	.align 0
 __umodsi3      :
	cmp	divisor, #0
c0008218:	e3510000 	cmp	r1, #0
	beq	Ldiv0
c000821c:	0a000026 	beq	c00082bc <Ldiv0>
	mov	curbit, #1
c0008220:	e3a03001 	mov	r3, #1
	cmp	dividend, divisor
c0008224:	e1500001 	cmp	r0, r1
	movcc	pc, lr
c0008228:	31a0f00e 	movcc	pc, lr

c000822c <Loop1>:
Loop1:
	@ Unless the divisor is very big, shift it up in multiples of
	@ four bits, since this is the amount of unwinding in the main
	@ division loop.  Continue shifting until the divisor is
	@ larger than the dividend.
	cmp	divisor, #0x10000000
c000822c:	e3510201 	cmp	r1, #268435456	; 0x10000000
	cmpcc	divisor, dividend
c0008230:	31510000 	cmpcc	r1, r0
	movcc	divisor, divisor, lsl #4
c0008234:	31a01201 	lslcc	r1, r1, #4
	movcc	curbit, curbit, lsl #4
c0008238:	31a03203 	lslcc	r3, r3, #4
	bcc	Loop1
c000823c:	3afffffa 	bcc	c000822c <Loop1>

c0008240 <Lbignum>:
Lbignum:
	@ For very big divisors, we must shift it a bit at a time, or
	@ we will be in danger of overflowing.
	cmp	divisor, #0x80000000
c0008240:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
	cmpcc	divisor, dividend
c0008244:	31510000 	cmpcc	r1, r0
	movcc	divisor, divisor, lsl #1
c0008248:	31a01081 	lslcc	r1, r1, #1
	movcc	curbit, curbit, lsl #1
c000824c:	31a03083 	lslcc	r3, r3, #1
	bcc	Lbignum
c0008250:	3afffffa 	bcc	c0008240 <Lbignum>

c0008254 <Loop3>:
Loop3:
	@ Test for possible subtractions.  On the final pass, this may
	@ subtract too much from the dividend, so keep track of which
	@ subtractions are done, we can fix them up afterwards...
	mov	overdone, #0
c0008254:	e3a02000 	mov	r2, #0
	cmp	dividend, divisor
c0008258:	e1500001 	cmp	r0, r1
	subcs	dividend, dividend, divisor
c000825c:	20400001 	subcs	r0, r0, r1
	cmp	dividend, divisor, lsr #1
c0008260:	e15000a1 	cmp	r0, r1, lsr #1
	subcs	dividend, dividend, divisor, lsr #1
c0008264:	204000a1 	subcs	r0, r0, r1, lsr #1
	orrcs	overdone, overdone, curbit, ror #1
c0008268:	218220e3 	orrcs	r2, r2, r3, ror #1
	cmp	dividend, divisor, lsr #2
c000826c:	e1500121 	cmp	r0, r1, lsr #2
	subcs	dividend, dividend, divisor, lsr #2
c0008270:	20400121 	subcs	r0, r0, r1, lsr #2
	orrcs	overdone, overdone, curbit, ror #2
c0008274:	21822163 	orrcs	r2, r2, r3, ror #2
	cmp	dividend, divisor, lsr #3
c0008278:	e15001a1 	cmp	r0, r1, lsr #3
	subcs	dividend, dividend, divisor, lsr #3
c000827c:	204001a1 	subcs	r0, r0, r1, lsr #3
	orrcs	overdone, overdone, curbit, ror #3
c0008280:	218221e3 	orrcs	r2, r2, r3, ror #3
	mov	ip, curbit
c0008284:	e1a0c003 	mov	ip, r3
	cmp	dividend, #0			@ Early termination?
c0008288:	e3500000 	cmp	r0, #0
	movnes	curbit, curbit, lsr #4		@ No, any more bits to do?
c000828c:	11b03223 	lsrsne	r3, r3, #4
	movne	divisor, divisor, lsr #4
c0008290:	11a01221 	lsrne	r1, r1, #4
	bne	Loop3
c0008294:	1affffee 	bne	c0008254 <Loop3>
	@ the top three bits of "overdone".  Exactly which were not needed
	@ are governed by the position of the bit, stored in ip.
	@ If we terminated early, because dividend became zero,
	@ then none of the below will match, since the bit in ip will not be
	@ in the bottom nibble.
	ands	overdone, overdone, #0xe0000000
c0008298:	e212220e 	ands	r2, r2, #-536870912	; 0xe0000000
	moveq	pc, lr				@ No fixups needed
c000829c:	01a0f00e 	moveq	pc, lr
	tst	overdone, ip, ror #3
c00082a0:	e11201ec 	tst	r2, ip, ror #3
	addne	dividend, dividend, divisor, lsr #3
c00082a4:	108001a1 	addne	r0, r0, r1, lsr #3
	tst	overdone, ip, ror #2
c00082a8:	e112016c 	tst	r2, ip, ror #2
	addne	dividend, dividend, divisor, lsr #2
c00082ac:	10800121 	addne	r0, r0, r1, lsr #2
	tst	overdone, ip, ror #1
c00082b0:	e11200ec 	tst	r2, ip, ror #1
	addne	dividend, dividend, divisor, lsr #1
c00082b4:	108000a1 	addne	r0, r0, r1, lsr #1
	mov	pc, lr
c00082b8:	e1a0f00e 	mov	pc, lr

c00082bc <Ldiv0>:
Ldiv0:
	str	lr, [sp, #-4]!
c00082bc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
@	bl	 __div0       (PLT)
	mov	r0, #0			@ about as wrong as it could be
c00082c0:	e3a00000 	mov	r0, #0
	ldmia	sp!, {pc}
c00082c4:	e8bd8000 	ldmfd	sp!, {pc}

c00082c8 <__udivsi3>:
	.text
	.globl	 __udivsi3
	.type  __udivsi3       ,function
	.align	0
 __udivsi3      :
	cmp	divisor, #0
c00082c8:	e3510000 	cmp	r1, #0
	beq	Ldiv0
c00082cc:	0a00001f 	beq	c0008350 <Ldiv0>
	mov	curbit, #1
c00082d0:	e3a03001 	mov	r3, #1
	mov	result, #0
c00082d4:	e3a02000 	mov	r2, #0
	cmp	dividend, divisor
c00082d8:	e1500001 	cmp	r0, r1
	bcc	Lgot_result
c00082dc:	3a000019 	bcc	c0008348 <Lgot_result>

c00082e0 <Loop1>:
Loop1:
	@ Unless the divisor is very big, shift it up in multiples of
	@ four bits, since this is the amount of unwinding in the main
	@ division loop.  Continue shifting until the divisor is
	@ larger than the dividend.
	cmp	divisor, #0x10000000
c00082e0:	e3510201 	cmp	r1, #268435456	; 0x10000000
	cmpcc	divisor, dividend
c00082e4:	31510000 	cmpcc	r1, r0
	movcc	divisor, divisor, lsl #4
c00082e8:	31a01201 	lslcc	r1, r1, #4
	movcc	curbit, curbit, lsl #4
c00082ec:	31a03203 	lslcc	r3, r3, #4
	bcc	Loop1
c00082f0:	3afffffa 	bcc	c00082e0 <Loop1>

c00082f4 <Lbignum>:
Lbignum:
	@ For very big divisors, we must shift it a bit at a time, or
	@ we will be in danger of overflowing.
	cmp	divisor, #0x80000000
c00082f4:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
	cmpcc	divisor, dividend
c00082f8:	31510000 	cmpcc	r1, r0
	movcc	divisor, divisor, lsl #1
c00082fc:	31a01081 	lslcc	r1, r1, #1
	movcc	curbit, curbit, lsl #1
c0008300:	31a03083 	lslcc	r3, r3, #1
	bcc	Lbignum
c0008304:	3afffffa 	bcc	c00082f4 <Lbignum>

c0008308 <Loop3>:
Loop3:
	@ Test for possible subtractions, and note which bits
	@ are done in the result.  On the final pass, this may subtract
	@ too much from the dividend, but the result will be ok, since the
	@ "bit" will have been shifted out at the bottom.
	cmp	dividend, divisor
c0008308:	e1500001 	cmp	r0, r1
	subcs	dividend, dividend, divisor
c000830c:	20400001 	subcs	r0, r0, r1
	orrcs	result, result, curbit
c0008310:	21822003 	orrcs	r2, r2, r3
	cmp	dividend, divisor, lsr #1
c0008314:	e15000a1 	cmp	r0, r1, lsr #1
	subcs	dividend, dividend, divisor, lsr #1
c0008318:	204000a1 	subcs	r0, r0, r1, lsr #1
	orrcs	result, result, curbit, lsr #1
c000831c:	218220a3 	orrcs	r2, r2, r3, lsr #1
	cmp	dividend, divisor, lsr #2
c0008320:	e1500121 	cmp	r0, r1, lsr #2
	subcs	dividend, dividend, divisor, lsr #2
c0008324:	20400121 	subcs	r0, r0, r1, lsr #2
	orrcs	result, result, curbit, lsr #2
c0008328:	21822123 	orrcs	r2, r2, r3, lsr #2
	cmp	dividend, divisor, lsr #3
c000832c:	e15001a1 	cmp	r0, r1, lsr #3
	subcs	dividend, dividend, divisor, lsr #3
c0008330:	204001a1 	subcs	r0, r0, r1, lsr #3
	orrcs	result, result, curbit, lsr #3
c0008334:	218221a3 	orrcs	r2, r2, r3, lsr #3
	cmp	dividend, #0			@ Early termination?
c0008338:	e3500000 	cmp	r0, #0
	movnes	curbit, curbit, lsr #4		@ No, any more bits to do?
c000833c:	11b03223 	lsrsne	r3, r3, #4
	movne	divisor, divisor, lsr #4
c0008340:	11a01221 	lsrne	r1, r1, #4
	bne	Loop3
c0008344:	1affffef 	bne	c0008308 <Loop3>

c0008348 <Lgot_result>:
Lgot_result:
	mov	r0, result
c0008348:	e1a00002 	mov	r0, r2
	mov	pc, lr
c000834c:	e1a0f00e 	mov	pc, lr

c0008350 <Ldiv0>:
Ldiv0:
	str	lr, [sp, #-4]!
c0008350:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
	@bl	 __div0       (PLT)
	mov	r0, #0			@ about as wrong as it could be
c0008354:	e3a00000 	mov	r0, #0
	ldmia	sp!, {pc}
c0008358:	e8bd8000 	ldmfd	sp!, {pc}

c000835c <__toupper>:
		c -= 'A'-'a';
	return c;
}

static inline unsigned char __toupper(unsigned char c)
{
c000835c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c0008360:	e28db000 	add	fp, sp, #0
c0008364:	e24dd004 	sub	sp, sp, #4
c0008368:	e1a03000 	mov	r3, r0
c000836c:	e54b3004 	strb	r3, [fp, #-4]
	if (islower(c))
c0008370:	e55b2004 	ldrb	r2, [fp, #-4]
c0008374:	e30a3814 	movw	r3, #43028	; 0xa814
c0008378:	e34c3000 	movt	r3, #49152	; 0xc000
c000837c:	e7d33002 	ldrb	r3, [r3, r2]
c0008380:	e2033002 	and	r3, r3, #2
c0008384:	e3530000 	cmp	r3, #0
c0008388:	0a000002 	beq	c0008398 <__toupper+0x3c>
		c -= 'a'-'A';
c000838c:	e55b3004 	ldrb	r3, [fp, #-4]
c0008390:	e2433020 	sub	r3, r3, #32
c0008394:	e54b3004 	strb	r3, [fp, #-4]
	return c;
c0008398:	e55b3004 	ldrb	r3, [fp, #-4]
}
c000839c:	e1a00003 	mov	r0, r3
c00083a0:	e28bd000 	add	sp, fp, #0
c00083a4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c00083a8:	e12fff1e 	bx	lr

c00083ac <simple_strtoul>:
#include <ctype.h>
#include "uart.h"
#define size_t unsigned int

unsigned long simple_strtoul(const char *cp,char **endp,unsigned int base)
{
c00083ac:	e92d4800 	push	{fp, lr}
c00083b0:	e28db004 	add	fp, sp, #4
c00083b4:	e24dd014 	sub	sp, sp, #20
c00083b8:	e50b0010 	str	r0, [fp, #-16]
c00083bc:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
c00083c0:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
	unsigned long result = 0,value;
c00083c4:	e3a03000 	mov	r3, #0
c00083c8:	e50b3008 	str	r3, [fp, #-8]

	if (*cp == '0') {
c00083cc:	e51b3010 	ldr	r3, [fp, #-16]
c00083d0:	e5d33000 	ldrb	r3, [r3]
c00083d4:	e3530030 	cmp	r3, #48	; 0x30
c00083d8:	1a00001a 	bne	c0008448 <simple_strtoul+0x9c>
		cp++;
c00083dc:	e51b3010 	ldr	r3, [fp, #-16]
c00083e0:	e2833001 	add	r3, r3, #1
c00083e4:	e50b3010 	str	r3, [fp, #-16]
		if ((*cp == 'x') && isxdigit(cp[1])) {
c00083e8:	e51b3010 	ldr	r3, [fp, #-16]
c00083ec:	e5d33000 	ldrb	r3, [r3]
c00083f0:	e3530078 	cmp	r3, #120	; 0x78
c00083f4:	1a00000e 	bne	c0008434 <simple_strtoul+0x88>
c00083f8:	e51b3010 	ldr	r3, [fp, #-16]
c00083fc:	e2833001 	add	r3, r3, #1
c0008400:	e5d33000 	ldrb	r3, [r3]
c0008404:	e1a02003 	mov	r2, r3
c0008408:	e30a3814 	movw	r3, #43028	; 0xa814
c000840c:	e34c3000 	movt	r3, #49152	; 0xc000
c0008410:	e7d33002 	ldrb	r3, [r3, r2]
c0008414:	e2033044 	and	r3, r3, #68	; 0x44
c0008418:	e3530000 	cmp	r3, #0
c000841c:	0a000004 	beq	c0008434 <simple_strtoul+0x88>
			base = 16;
c0008420:	e3a03010 	mov	r3, #16
c0008424:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
			cp++;
c0008428:	e51b3010 	ldr	r3, [fp, #-16]
c000842c:	e2833001 	add	r3, r3, #1
c0008430:	e50b3010 	str	r3, [fp, #-16]
		}
		if (!base) {
c0008434:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
c0008438:	e3530000 	cmp	r3, #0
c000843c:	1a000001 	bne	c0008448 <simple_strtoul+0x9c>
			base = 8;
c0008440:	e3a03008 	mov	r3, #8
c0008444:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
		}
	}
	if (!base) {
c0008448:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
c000844c:	e3530000 	cmp	r3, #0
c0008450:	1a00000b 	bne	c0008484 <simple_strtoul+0xd8>
		base = 10;
c0008454:	e3a0300a 	mov	r3, #10
c0008458:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
	}
	while (isxdigit(*cp) && (value = isdigit(*cp) ? *cp-'0' : (islower(*cp)
c000845c:	ea000008 	b	c0008484 <simple_strtoul+0xd8>
	    ? toupper(*cp) : *cp)-'A'+10) < base) {
		result = result*base + value;
c0008460:	e51b3008 	ldr	r3, [fp, #-8]
c0008464:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
c0008468:	e0030392 	mul	r3, r2, r3
c000846c:	e51b200c 	ldr	r2, [fp, #-12]
c0008470:	e0823003 	add	r3, r2, r3
c0008474:	e50b3008 	str	r3, [fp, #-8]
		cp++;
c0008478:	e51b3010 	ldr	r3, [fp, #-16]
c000847c:	e2833001 	add	r3, r3, #1
c0008480:	e50b3010 	str	r3, [fp, #-16]
	while (isxdigit(*cp) && (value = isdigit(*cp) ? *cp-'0' : (islower(*cp)
c0008484:	e51b3010 	ldr	r3, [fp, #-16]
c0008488:	e5d33000 	ldrb	r3, [r3]
c000848c:	e1a02003 	mov	r2, r3
c0008490:	e30a3814 	movw	r3, #43028	; 0xa814
c0008494:	e34c3000 	movt	r3, #49152	; 0xc000
c0008498:	e7d33002 	ldrb	r3, [r3, r2]
c000849c:	e2033044 	and	r3, r3, #68	; 0x44
c00084a0:	e3530000 	cmp	r3, #0
c00084a4:	0a000024 	beq	c000853c <simple_strtoul+0x190>
c00084a8:	e51b3010 	ldr	r3, [fp, #-16]
c00084ac:	e5d33000 	ldrb	r3, [r3]
c00084b0:	e1a02003 	mov	r2, r3
c00084b4:	e30a3814 	movw	r3, #43028	; 0xa814
c00084b8:	e34c3000 	movt	r3, #49152	; 0xc000
c00084bc:	e7d33002 	ldrb	r3, [r3, r2]
c00084c0:	e2033004 	and	r3, r3, #4
c00084c4:	e3530000 	cmp	r3, #0
c00084c8:	0a000003 	beq	c00084dc <simple_strtoul+0x130>
c00084cc:	e51b3010 	ldr	r3, [fp, #-16]
c00084d0:	e5d33000 	ldrb	r3, [r3]
c00084d4:	e2433030 	sub	r3, r3, #48	; 0x30
c00084d8:	ea000012 	b	c0008528 <simple_strtoul+0x17c>
c00084dc:	e51b3010 	ldr	r3, [fp, #-16]
c00084e0:	e5d33000 	ldrb	r3, [r3]
c00084e4:	e1a02003 	mov	r2, r3
c00084e8:	e30a3814 	movw	r3, #43028	; 0xa814
c00084ec:	e34c3000 	movt	r3, #49152	; 0xc000
c00084f0:	e7d33002 	ldrb	r3, [r3, r2]
c00084f4:	e2033002 	and	r3, r3, #2
c00084f8:	e3530000 	cmp	r3, #0
c00084fc:	0a000006 	beq	c000851c <simple_strtoul+0x170>
	    ? toupper(*cp) : *cp)-'A'+10) < base) {
c0008500:	e51b3010 	ldr	r3, [fp, #-16]
c0008504:	e5d33000 	ldrb	r3, [r3]
c0008508:	e1a00003 	mov	r0, r3
c000850c:	ebffff92 	bl	c000835c <__toupper>
c0008510:	e1a03000 	mov	r3, r0
c0008514:	e2433037 	sub	r3, r3, #55	; 0x37
c0008518:	ea000002 	b	c0008528 <simple_strtoul+0x17c>
c000851c:	e51b3010 	ldr	r3, [fp, #-16]
c0008520:	e5d33000 	ldrb	r3, [r3]
c0008524:	e2433037 	sub	r3, r3, #55	; 0x37
	while (isxdigit(*cp) && (value = isdigit(*cp) ? *cp-'0' : (islower(*cp)
c0008528:	e50b300c 	str	r3, [fp, #-12]
c000852c:	e51b200c 	ldr	r2, [fp, #-12]
c0008530:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
c0008534:	e1520003 	cmp	r2, r3
c0008538:	3affffc8 	bcc	c0008460 <simple_strtoul+0xb4>
	}
	if (endp)
c000853c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c0008540:	e3530000 	cmp	r3, #0
c0008544:	0a000002 	beq	c0008554 <simple_strtoul+0x1a8>
		*endp = (char *)cp;
c0008548:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c000854c:	e51b2010 	ldr	r2, [fp, #-16]
c0008550:	e5832000 	str	r2, [r3]
	return result;
c0008554:	e51b3008 	ldr	r3, [fp, #-8]
}
c0008558:	e1a00003 	mov	r0, r3
c000855c:	e24bd004 	sub	sp, fp, #4
c0008560:	e8bd8800 	pop	{fp, pc}

c0008564 <simple_strtol>:

long simple_strtol(const char *cp,char **endp,unsigned int base)
{
c0008564:	e92d4800 	push	{fp, lr}
c0008568:	e28db004 	add	fp, sp, #4
c000856c:	e24dd00c 	sub	sp, sp, #12
c0008570:	e50b0008 	str	r0, [fp, #-8]
c0008574:	e50b100c 	str	r1, [fp, #-12]
c0008578:	e50b2010 	str	r2, [fp, #-16]
	if(*cp=='-')
c000857c:	e51b3008 	ldr	r3, [fp, #-8]
c0008580:	e5d33000 	ldrb	r3, [r3]
c0008584:	e353002d 	cmp	r3, #45	; 0x2d
c0008588:	1a000008 	bne	c00085b0 <simple_strtol+0x4c>
		return -simple_strtoul(cp+1,endp,base);
c000858c:	e51b3008 	ldr	r3, [fp, #-8]
c0008590:	e2833001 	add	r3, r3, #1
c0008594:	e51b2010 	ldr	r2, [fp, #-16]
c0008598:	e51b100c 	ldr	r1, [fp, #-12]
c000859c:	e1a00003 	mov	r0, r3
c00085a0:	ebffff81 	bl	c00083ac <simple_strtoul>
c00085a4:	e1a03000 	mov	r3, r0
c00085a8:	e2633000 	rsb	r3, r3, #0
c00085ac:	ea000004 	b	c00085c4 <simple_strtol+0x60>
	return simple_strtoul(cp,endp,base);
c00085b0:	e51b2010 	ldr	r2, [fp, #-16]
c00085b4:	e51b100c 	ldr	r1, [fp, #-12]
c00085b8:	e51b0008 	ldr	r0, [fp, #-8]
c00085bc:	ebffff7a 	bl	c00083ac <simple_strtoul>
c00085c0:	e1a03000 	mov	r3, r0
}
c00085c4:	e1a00003 	mov	r0, r3
c00085c8:	e24bd004 	sub	sp, fp, #4
c00085cc:	e8bd8800 	pop	{fp, pc}

c00085d0 <skip_atoi>:

/* we use this so that we can do without the ctype library */
#define is_digit(c)	((c) >= '0' && (c) <= '9')

static int skip_atoi(const char **s)
{
c00085d0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c00085d4:	e28db000 	add	fp, sp, #0
c00085d8:	e24dd008 	sub	sp, sp, #8
c00085dc:	e50b0008 	str	r0, [fp, #-8]
	int i=0;
c00085e0:	e3a03000 	mov	r3, #0
c00085e4:	e50b3004 	str	r3, [fp, #-4]

	while (is_digit(**s))
c00085e8:	ea00000e 	b	c0008628 <skip_atoi+0x58>
		i = i*10 + *((*s)++) - '0';
c00085ec:	e51b2004 	ldr	r2, [fp, #-4]
c00085f0:	e1a03002 	mov	r3, r2
c00085f4:	e1a03103 	lsl	r3, r3, #2
c00085f8:	e0833002 	add	r3, r3, r2
c00085fc:	e1a03083 	lsl	r3, r3, #1
c0008600:	e1a00003 	mov	r0, r3
c0008604:	e51b3008 	ldr	r3, [fp, #-8]
c0008608:	e5933000 	ldr	r3, [r3]
c000860c:	e2831001 	add	r1, r3, #1
c0008610:	e51b2008 	ldr	r2, [fp, #-8]
c0008614:	e5821000 	str	r1, [r2]
c0008618:	e5d33000 	ldrb	r3, [r3]
c000861c:	e0803003 	add	r3, r0, r3
c0008620:	e2433030 	sub	r3, r3, #48	; 0x30
c0008624:	e50b3004 	str	r3, [fp, #-4]
	while (is_digit(**s))
c0008628:	e51b3008 	ldr	r3, [fp, #-8]
c000862c:	e5933000 	ldr	r3, [r3]
c0008630:	e5d33000 	ldrb	r3, [r3]
c0008634:	e353002f 	cmp	r3, #47	; 0x2f
c0008638:	9a000004 	bls	c0008650 <skip_atoi+0x80>
c000863c:	e51b3008 	ldr	r3, [fp, #-8]
c0008640:	e5933000 	ldr	r3, [r3]
c0008644:	e5d33000 	ldrb	r3, [r3]
c0008648:	e3530039 	cmp	r3, #57	; 0x39
c000864c:	9affffe6 	bls	c00085ec <skip_atoi+0x1c>
	return i;
c0008650:	e51b3004 	ldr	r3, [fp, #-4]
}
c0008654:	e1a00003 	mov	r0, r3
c0008658:	e28bd000 	add	sp, fp, #0
c000865c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c0008660:	e12fff1e 	bx	lr

c0008664 <number>:
#ifdef CFG_64BIT_VSPRINTF
static char * number(char * str, long long num, unsigned int base, int size, int precision ,int type)
#else
static char * number(char * str, long num, unsigned int base, int size, int precision ,int type)
#endif
{
c0008664:	e92d4800 	push	{fp, lr}
c0008668:	e28db004 	add	fp, sp, #4
c000866c:	e24dd068 	sub	sp, sp, #104	; 0x68
c0008670:	e50b0060 	str	r0, [fp, #-96]	; 0xffffffa0
c0008674:	e50b1064 	str	r1, [fp, #-100]	; 0xffffff9c
c0008678:	e50b2068 	str	r2, [fp, #-104]	; 0xffffff98
c000867c:	e50b306c 	str	r3, [fp, #-108]	; 0xffffff94
	char c,sign,tmp[66];
	const char *digits="0123456789abcdefghijklmnopqrstuvwxyz";
c0008680:	e3093f74 	movw	r3, #40820	; 0x9f74
c0008684:	e34c3000 	movt	r3, #49152	; 0xc000
c0008688:	e50b300c 	str	r3, [fp, #-12]
	int i;

	if (type & LARGE)
c000868c:	e59b3008 	ldr	r3, [fp, #8]
c0008690:	e2033040 	and	r3, r3, #64	; 0x40
c0008694:	e3530000 	cmp	r3, #0
c0008698:	0a000002 	beq	c00086a8 <number+0x44>
		digits = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
c000869c:	e3093f9c 	movw	r3, #40860	; 0x9f9c
c00086a0:	e34c3000 	movt	r3, #49152	; 0xc000
c00086a4:	e50b300c 	str	r3, [fp, #-12]
	if (type & LEFT)
c00086a8:	e59b3008 	ldr	r3, [fp, #8]
c00086ac:	e2033010 	and	r3, r3, #16
c00086b0:	e3530000 	cmp	r3, #0
c00086b4:	0a000002 	beq	c00086c4 <number+0x60>
		type &= ~ZEROPAD;
c00086b8:	e59b3008 	ldr	r3, [fp, #8]
c00086bc:	e3c33001 	bic	r3, r3, #1
c00086c0:	e58b3008 	str	r3, [fp, #8]
	if (base < 2 || base > 36)
c00086c4:	e51b3068 	ldr	r3, [fp, #-104]	; 0xffffff98
c00086c8:	e3530001 	cmp	r3, #1
c00086cc:	9a000002 	bls	c00086dc <number+0x78>
c00086d0:	e51b3068 	ldr	r3, [fp, #-104]	; 0xffffff98
c00086d4:	e3530024 	cmp	r3, #36	; 0x24
c00086d8:	9a000001 	bls	c00086e4 <number+0x80>
		return 0;
c00086dc:	e3a03000 	mov	r3, #0
c00086e0:	ea0000d5 	b	c0008a3c <number+0x3d8>
	c = (type & ZEROPAD) ? '0' : ' ';
c00086e4:	e59b3008 	ldr	r3, [fp, #8]
c00086e8:	e2033001 	and	r3, r3, #1
c00086ec:	e3530000 	cmp	r3, #0
c00086f0:	0a000001 	beq	c00086fc <number+0x98>
c00086f4:	e3a03030 	mov	r3, #48	; 0x30
c00086f8:	ea000000 	b	c0008700 <number+0x9c>
c00086fc:	e3a03020 	mov	r3, #32
c0008700:	e54b3011 	strb	r3, [fp, #-17]	; 0xffffffef
	sign = 0;
c0008704:	e3a03000 	mov	r3, #0
c0008708:	e54b3005 	strb	r3, [fp, #-5]
	if (type & SIGN) {
c000870c:	e59b3008 	ldr	r3, [fp, #8]
c0008710:	e2033002 	and	r3, r3, #2
c0008714:	e3530000 	cmp	r3, #0
c0008718:	0a00001e 	beq	c0008798 <number+0x134>
		if (num < 0) {
c000871c:	e51b3064 	ldr	r3, [fp, #-100]	; 0xffffff9c
c0008720:	e3530000 	cmp	r3, #0
c0008724:	aa000008 	bge	c000874c <number+0xe8>
			sign = '-';
c0008728:	e3a0302d 	mov	r3, #45	; 0x2d
c000872c:	e54b3005 	strb	r3, [fp, #-5]
			num = -num;
c0008730:	e51b3064 	ldr	r3, [fp, #-100]	; 0xffffff9c
c0008734:	e2633000 	rsb	r3, r3, #0
c0008738:	e50b3064 	str	r3, [fp, #-100]	; 0xffffff9c
			size--;
c000873c:	e51b306c 	ldr	r3, [fp, #-108]	; 0xffffff94
c0008740:	e2433001 	sub	r3, r3, #1
c0008744:	e50b306c 	str	r3, [fp, #-108]	; 0xffffff94
c0008748:	ea000012 	b	c0008798 <number+0x134>
		} else if (type & PLUS) {
c000874c:	e59b3008 	ldr	r3, [fp, #8]
c0008750:	e2033004 	and	r3, r3, #4
c0008754:	e3530000 	cmp	r3, #0
c0008758:	0a000005 	beq	c0008774 <number+0x110>
			sign = '+';
c000875c:	e3a0302b 	mov	r3, #43	; 0x2b
c0008760:	e54b3005 	strb	r3, [fp, #-5]
			size--;
c0008764:	e51b306c 	ldr	r3, [fp, #-108]	; 0xffffff94
c0008768:	e2433001 	sub	r3, r3, #1
c000876c:	e50b306c 	str	r3, [fp, #-108]	; 0xffffff94
c0008770:	ea000008 	b	c0008798 <number+0x134>
		} else if (type & SPACE) {
c0008774:	e59b3008 	ldr	r3, [fp, #8]
c0008778:	e2033008 	and	r3, r3, #8
c000877c:	e3530000 	cmp	r3, #0
c0008780:	0a000004 	beq	c0008798 <number+0x134>
			sign = ' ';
c0008784:	e3a03020 	mov	r3, #32
c0008788:	e54b3005 	strb	r3, [fp, #-5]
			size--;
c000878c:	e51b306c 	ldr	r3, [fp, #-108]	; 0xffffff94
c0008790:	e2433001 	sub	r3, r3, #1
c0008794:	e50b306c 	str	r3, [fp, #-108]	; 0xffffff94
		}
	}
	if (type & SPECIAL) {
c0008798:	e59b3008 	ldr	r3, [fp, #8]
c000879c:	e2033020 	and	r3, r3, #32
c00087a0:	e3530000 	cmp	r3, #0
c00087a4:	0a00000c 	beq	c00087dc <number+0x178>
		if (base == 16)
c00087a8:	e51b3068 	ldr	r3, [fp, #-104]	; 0xffffff98
c00087ac:	e3530010 	cmp	r3, #16
c00087b0:	1a000003 	bne	c00087c4 <number+0x160>
			size -= 2;
c00087b4:	e51b306c 	ldr	r3, [fp, #-108]	; 0xffffff94
c00087b8:	e2433002 	sub	r3, r3, #2
c00087bc:	e50b306c 	str	r3, [fp, #-108]	; 0xffffff94
c00087c0:	ea000005 	b	c00087dc <number+0x178>
		else if (base == 8)
c00087c4:	e51b3068 	ldr	r3, [fp, #-104]	; 0xffffff98
c00087c8:	e3530008 	cmp	r3, #8
c00087cc:	1a000002 	bne	c00087dc <number+0x178>
			size--;
c00087d0:	e51b306c 	ldr	r3, [fp, #-108]	; 0xffffff94
c00087d4:	e2433001 	sub	r3, r3, #1
c00087d8:	e50b306c 	str	r3, [fp, #-108]	; 0xffffff94
	}
	i = 0;
c00087dc:	e3a03000 	mov	r3, #0
c00087e0:	e50b3010 	str	r3, [fp, #-16]
	if (num == 0)
c00087e4:	e51b3064 	ldr	r3, [fp, #-100]	; 0xffffff9c
c00087e8:	e3530000 	cmp	r3, #0
c00087ec:	1a000022 	bne	c000887c <number+0x218>
		tmp[i++]='0';
c00087f0:	e51b3010 	ldr	r3, [fp, #-16]
c00087f4:	e2832001 	add	r2, r3, #1
c00087f8:	e50b2010 	str	r2, [fp, #-16]
c00087fc:	e24b2004 	sub	r2, fp, #4
c0008800:	e0823003 	add	r3, r2, r3
c0008804:	e3a02030 	mov	r2, #48	; 0x30
c0008808:	e5432058 	strb	r2, [r3, #-88]	; 0xffffffa8
c000880c:	ea00001d 	b	c0008888 <number+0x224>
	else while (num != 0)
	if (i > precision)
c0008810:	e51b2010 	ldr	r2, [fp, #-16]
c0008814:	e59b3004 	ldr	r3, [fp, #4]
c0008818:	e1520003 	cmp	r2, r3
c000881c:	da000016 	ble	c000887c <number+0x218>
		tmp[i++] = digits[do_div(num,base)];
c0008820:	e51b3064 	ldr	r3, [fp, #-100]	; 0xffffff9c
c0008824:	e51b1068 	ldr	r1, [fp, #-104]	; 0xffffff98
c0008828:	e1a00003 	mov	r0, r3
c000882c:	ebfffe79 	bl	c0008218 <__umodsi3>
c0008830:	e1a03000 	mov	r3, r0
c0008834:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
c0008838:	e51b3064 	ldr	r3, [fp, #-100]	; 0xffffff9c
c000883c:	e51b1068 	ldr	r1, [fp, #-104]	; 0xffffff98
c0008840:	e1a00003 	mov	r0, r3
c0008844:	ebfffe9f 	bl	c00082c8 <__udivsi3>
c0008848:	e1a03000 	mov	r3, r0
c000884c:	e50b3064 	str	r3, [fp, #-100]	; 0xffffff9c
c0008850:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
c0008854:	e1a02003 	mov	r2, r3
c0008858:	e51b300c 	ldr	r3, [fp, #-12]
c000885c:	e0832002 	add	r2, r3, r2
c0008860:	e51b3010 	ldr	r3, [fp, #-16]
c0008864:	e2831001 	add	r1, r3, #1
c0008868:	e50b1010 	str	r1, [fp, #-16]
c000886c:	e5d22000 	ldrb	r2, [r2]
c0008870:	e24b1004 	sub	r1, fp, #4
c0008874:	e0813003 	add	r3, r1, r3
c0008878:	e5432058 	strb	r2, [r3, #-88]	; 0xffffffa8
	else while (num != 0)
c000887c:	e51b3064 	ldr	r3, [fp, #-100]	; 0xffffff9c
c0008880:	e3530000 	cmp	r3, #0
c0008884:	1affffe1 	bne	c0008810 <number+0x1ac>
	precision = i;
c0008888:	e51b3010 	ldr	r3, [fp, #-16]
c000888c:	e58b3004 	str	r3, [fp, #4]
	size -= precision;
c0008890:	e51b206c 	ldr	r2, [fp, #-108]	; 0xffffff94
c0008894:	e59b3004 	ldr	r3, [fp, #4]
c0008898:	e0423003 	sub	r3, r2, r3
c000889c:	e50b306c 	str	r3, [fp, #-108]	; 0xffffff94
	if (!(type&(ZEROPAD+LEFT)))
c00088a0:	e59b3008 	ldr	r3, [fp, #8]
c00088a4:	e2033011 	and	r3, r3, #17
c00088a8:	e3530000 	cmp	r3, #0
c00088ac:	1a00000a 	bne	c00088dc <number+0x278>
		while(size-->0)
c00088b0:	ea000004 	b	c00088c8 <number+0x264>
			*str++ = ' ';
c00088b4:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
c00088b8:	e2832001 	add	r2, r3, #1
c00088bc:	e50b2060 	str	r2, [fp, #-96]	; 0xffffffa0
c00088c0:	e3a02020 	mov	r2, #32
c00088c4:	e5c32000 	strb	r2, [r3]
		while(size-->0)
c00088c8:	e51b306c 	ldr	r3, [fp, #-108]	; 0xffffff94
c00088cc:	e2432001 	sub	r2, r3, #1
c00088d0:	e50b206c 	str	r2, [fp, #-108]	; 0xffffff94
c00088d4:	e3530000 	cmp	r3, #0
c00088d8:	cafffff5 	bgt	c00088b4 <number+0x250>
	if (sign)
c00088dc:	e55b3005 	ldrb	r3, [fp, #-5]
c00088e0:	e3530000 	cmp	r3, #0
c00088e4:	0a000004 	beq	c00088fc <number+0x298>
		*str++ = sign;
c00088e8:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
c00088ec:	e2832001 	add	r2, r3, #1
c00088f0:	e50b2060 	str	r2, [fp, #-96]	; 0xffffffa0
c00088f4:	e55b2005 	ldrb	r2, [fp, #-5]
c00088f8:	e5c32000 	strb	r2, [r3]
	if (type & SPECIAL) {
c00088fc:	e59b3008 	ldr	r3, [fp, #8]
c0008900:	e2033020 	and	r3, r3, #32
c0008904:	e3530000 	cmp	r3, #0
c0008908:	0a000016 	beq	c0008968 <number+0x304>
		if (base==8)
c000890c:	e51b3068 	ldr	r3, [fp, #-104]	; 0xffffff98
c0008910:	e3530008 	cmp	r3, #8
c0008914:	1a000005 	bne	c0008930 <number+0x2cc>
			*str++ = '0';
c0008918:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
c000891c:	e2832001 	add	r2, r3, #1
c0008920:	e50b2060 	str	r2, [fp, #-96]	; 0xffffffa0
c0008924:	e3a02030 	mov	r2, #48	; 0x30
c0008928:	e5c32000 	strb	r2, [r3]
c000892c:	ea00000d 	b	c0008968 <number+0x304>
		else if (base==16) {
c0008930:	e51b3068 	ldr	r3, [fp, #-104]	; 0xffffff98
c0008934:	e3530010 	cmp	r3, #16
c0008938:	1a00000a 	bne	c0008968 <number+0x304>
			*str++ = '0';
c000893c:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
c0008940:	e2832001 	add	r2, r3, #1
c0008944:	e50b2060 	str	r2, [fp, #-96]	; 0xffffffa0
c0008948:	e3a02030 	mov	r2, #48	; 0x30
c000894c:	e5c32000 	strb	r2, [r3]
			*str++ = digits[33];
c0008950:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
c0008954:	e2832001 	add	r2, r3, #1
c0008958:	e50b2060 	str	r2, [fp, #-96]	; 0xffffffa0
c000895c:	e51b200c 	ldr	r2, [fp, #-12]
c0008960:	e5d22021 	ldrb	r2, [r2, #33]	; 0x21
c0008964:	e5c32000 	strb	r2, [r3]
		}
	}
	if (!(type & LEFT))
c0008968:	e59b3008 	ldr	r3, [fp, #8]
c000896c:	e2033010 	and	r3, r3, #16
c0008970:	e3530000 	cmp	r3, #0
c0008974:	1a000010 	bne	c00089bc <number+0x358>
		while (size-- > 0)
c0008978:	ea000004 	b	c0008990 <number+0x32c>
			*str++ = c;
c000897c:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
c0008980:	e2832001 	add	r2, r3, #1
c0008984:	e50b2060 	str	r2, [fp, #-96]	; 0xffffffa0
c0008988:	e55b2011 	ldrb	r2, [fp, #-17]	; 0xffffffef
c000898c:	e5c32000 	strb	r2, [r3]
		while (size-- > 0)
c0008990:	e51b306c 	ldr	r3, [fp, #-108]	; 0xffffff94
c0008994:	e2432001 	sub	r2, r3, #1
c0008998:	e50b206c 	str	r2, [fp, #-108]	; 0xffffff94
c000899c:	e3530000 	cmp	r3, #0
c00089a0:	cafffff5 	bgt	c000897c <number+0x318>
	while (i < precision--)
c00089a4:	ea000004 	b	c00089bc <number+0x358>
		*str++ = '0';
c00089a8:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
c00089ac:	e2832001 	add	r2, r3, #1
c00089b0:	e50b2060 	str	r2, [fp, #-96]	; 0xffffffa0
c00089b4:	e3a02030 	mov	r2, #48	; 0x30
c00089b8:	e5c32000 	strb	r2, [r3]
	while (i < precision--)
c00089bc:	e59b3004 	ldr	r3, [fp, #4]
c00089c0:	e2432001 	sub	r2, r3, #1
c00089c4:	e58b2004 	str	r2, [fp, #4]
c00089c8:	e51b2010 	ldr	r2, [fp, #-16]
c00089cc:	e1520003 	cmp	r2, r3
c00089d0:	bafffff4 	blt	c00089a8 <number+0x344>
	while (i-- > 0)
c00089d4:	ea000007 	b	c00089f8 <number+0x394>
		*str++ = tmp[i];
c00089d8:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
c00089dc:	e2832001 	add	r2, r3, #1
c00089e0:	e50b2060 	str	r2, [fp, #-96]	; 0xffffffa0
c00089e4:	e24b105c 	sub	r1, fp, #92	; 0x5c
c00089e8:	e51b2010 	ldr	r2, [fp, #-16]
c00089ec:	e0812002 	add	r2, r1, r2
c00089f0:	e5d22000 	ldrb	r2, [r2]
c00089f4:	e5c32000 	strb	r2, [r3]
	while (i-- > 0)
c00089f8:	e51b3010 	ldr	r3, [fp, #-16]
c00089fc:	e2432001 	sub	r2, r3, #1
c0008a00:	e50b2010 	str	r2, [fp, #-16]
c0008a04:	e3530000 	cmp	r3, #0
c0008a08:	cafffff2 	bgt	c00089d8 <number+0x374>
	while (size-- > 0)
c0008a0c:	ea000004 	b	c0008a24 <number+0x3c0>
		*str++ = ' ';
c0008a10:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
c0008a14:	e2832001 	add	r2, r3, #1
c0008a18:	e50b2060 	str	r2, [fp, #-96]	; 0xffffffa0
c0008a1c:	e3a02020 	mov	r2, #32
c0008a20:	e5c32000 	strb	r2, [r3]
	while (size-- > 0)
c0008a24:	e51b306c 	ldr	r3, [fp, #-108]	; 0xffffff94
c0008a28:	e2432001 	sub	r2, r3, #1
c0008a2c:	e50b206c 	str	r2, [fp, #-108]	; 0xffffff94
c0008a30:	e3530000 	cmp	r3, #0
c0008a34:	cafffff5 	bgt	c0008a10 <number+0x3ac>
	return str;
c0008a38:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
}
c0008a3c:	e1a00003 	mov	r0, r3
c0008a40:	e24bd004 	sub	sp, fp, #4
c0008a44:	e8bd8800 	pop	{fp, pc}

c0008a48 <strnlen>:

/* Forward decl. needed for IP address printing stuff... */
int sprintf(char * buf, const char *fmt, ...);
size_t strnlen(const char * s, size_t count)
{
c0008a48:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c0008a4c:	e28db000 	add	fp, sp, #0
c0008a50:	e24dd00c 	sub	sp, sp, #12
c0008a54:	e50b0008 	str	r0, [fp, #-8]
c0008a58:	e50b100c 	str	r1, [fp, #-12]
	const char *sc;

	for (sc = s; count-- && *sc != '\0'; ++sc)
c0008a5c:	e51b3008 	ldr	r3, [fp, #-8]
c0008a60:	e50b3004 	str	r3, [fp, #-4]
c0008a64:	ea000002 	b	c0008a74 <strnlen+0x2c>
c0008a68:	e51b3004 	ldr	r3, [fp, #-4]
c0008a6c:	e2833001 	add	r3, r3, #1
c0008a70:	e50b3004 	str	r3, [fp, #-4]
c0008a74:	e51b300c 	ldr	r3, [fp, #-12]
c0008a78:	e2432001 	sub	r2, r3, #1
c0008a7c:	e50b200c 	str	r2, [fp, #-12]
c0008a80:	e3530000 	cmp	r3, #0
c0008a84:	0a000003 	beq	c0008a98 <strnlen+0x50>
c0008a88:	e51b3004 	ldr	r3, [fp, #-4]
c0008a8c:	e5d33000 	ldrb	r3, [r3]
c0008a90:	e3530000 	cmp	r3, #0
c0008a94:	1afffff3 	bne	c0008a68 <strnlen+0x20>
		/* nothing */;
	return sc - s;
c0008a98:	e51b2004 	ldr	r2, [fp, #-4]
c0008a9c:	e51b3008 	ldr	r3, [fp, #-8]
c0008aa0:	e0423003 	sub	r3, r2, r3
}
c0008aa4:	e1a00003 	mov	r0, r3
c0008aa8:	e28bd000 	add	sp, fp, #0
c0008aac:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c0008ab0:	e12fff1e 	bx	lr

c0008ab4 <vsprintf>:
int vsprintf(char *buf, const char *fmt, va_list args)
{
c0008ab4:	e92d4800 	push	{fp, lr}
c0008ab8:	e28db004 	add	fp, sp, #4
c0008abc:	e24dd044 	sub	sp, sp, #68	; 0x44
c0008ac0:	e50b0038 	str	r0, [fp, #-56]	; 0xffffffc8
c0008ac4:	e50b103c 	str	r1, [fp, #-60]	; 0xffffffc4
c0008ac8:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
	int field_width;	/* width of output field */
	int precision;		/* min. # of digits for integers; max
				   number of chars for from string */
	int qualifier;		/* 'h', 'l', or 'q' for integer fields */

	for (str=buf ; *fmt ; ++fmt) {
c0008acc:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
c0008ad0:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
c0008ad4:	ea00021b 	b	c0009348 <vsprintf+0x894>
		if (*fmt != '%') {
c0008ad8:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008adc:	e5d33000 	ldrb	r3, [r3]
c0008ae0:	e3530025 	cmp	r3, #37	; 0x25
c0008ae4:	0a000006 	beq	c0008b04 <vsprintf+0x50>
			*str++ = *fmt;
c0008ae8:	e51b203c 	ldr	r2, [fp, #-60]	; 0xffffffc4
c0008aec:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c0008af0:	e2831001 	add	r1, r3, #1
c0008af4:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
c0008af8:	e5d22000 	ldrb	r2, [r2]
c0008afc:	e5c32000 	strb	r2, [r3]
			continue;
c0008b00:	ea00020d 	b	c000933c <vsprintf+0x888>
		}

		/* process flags */
		flags = 0;
c0008b04:	e3a03000 	mov	r3, #0
c0008b08:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
		repeat:
			++fmt;		/* this also skips first '%' */
c0008b0c:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008b10:	e2833001 	add	r3, r3, #1
c0008b14:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
			switch (*fmt) {
c0008b18:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008b1c:	e5d33000 	ldrb	r3, [r3]
c0008b20:	e2433020 	sub	r3, r3, #32
c0008b24:	e3530010 	cmp	r3, #16
c0008b28:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
c0008b2c:	ea000024 	b	c0008bc4 <vsprintf+0x110>
c0008b30:	c0008b94 	mulgt	r0, r4, fp
c0008b34:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b38:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b3c:	c0008ba4 	andgt	r8, r0, r4, lsr #23
c0008b40:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b44:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b48:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b4c:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b50:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b54:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b58:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b5c:	c0008b84 	andgt	r8, r0, r4, lsl #23
c0008b60:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b64:	c0008b74 	andgt	r8, r0, r4, ror fp
c0008b68:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b6c:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b70:	c0008bb4 			; <UNDEFINED> instruction: 0xc0008bb4
				case '-': flags |= LEFT; goto repeat;
c0008b74:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c0008b78:	e3833010 	orr	r3, r3, #16
c0008b7c:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
c0008b80:	eaffffe1 	b	c0008b0c <vsprintf+0x58>
				case '+': flags |= PLUS; goto repeat;
c0008b84:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c0008b88:	e3833004 	orr	r3, r3, #4
c0008b8c:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
c0008b90:	eaffffdd 	b	c0008b0c <vsprintf+0x58>
				case ' ': flags |= SPACE; goto repeat;
c0008b94:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c0008b98:	e3833008 	orr	r3, r3, #8
c0008b9c:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
c0008ba0:	eaffffd9 	b	c0008b0c <vsprintf+0x58>
				case '#': flags |= SPECIAL; goto repeat;
c0008ba4:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c0008ba8:	e3833020 	orr	r3, r3, #32
c0008bac:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
c0008bb0:	eaffffd5 	b	c0008b0c <vsprintf+0x58>
				case '0': flags |= ZEROPAD; goto repeat;
c0008bb4:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c0008bb8:	e3833001 	orr	r3, r3, #1
c0008bbc:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
c0008bc0:	eaffffd1 	b	c0008b0c <vsprintf+0x58>
				}

		/* get field width */
		field_width = -1;
c0008bc4:	e3e03000 	mvn	r3, #0
c0008bc8:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
		if (is_digit(*fmt))
c0008bcc:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008bd0:	e5d33000 	ldrb	r3, [r3]
c0008bd4:	e353002f 	cmp	r3, #47	; 0x2f
c0008bd8:	9a000008 	bls	c0008c00 <vsprintf+0x14c>
c0008bdc:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008be0:	e5d33000 	ldrb	r3, [r3]
c0008be4:	e3530039 	cmp	r3, #57	; 0x39
c0008be8:	8a000004 	bhi	c0008c00 <vsprintf+0x14c>
			field_width = skip_atoi(&fmt);
c0008bec:	e24b303c 	sub	r3, fp, #60	; 0x3c
c0008bf0:	e1a00003 	mov	r0, r3
c0008bf4:	ebfffe75 	bl	c00085d0 <skip_atoi>
c0008bf8:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
c0008bfc:	ea000014 	b	c0008c54 <vsprintf+0x1a0>
		else if (*fmt == '*') {
c0008c00:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008c04:	e5d33000 	ldrb	r3, [r3]
c0008c08:	e353002a 	cmp	r3, #42	; 0x2a
c0008c0c:	1a000010 	bne	c0008c54 <vsprintf+0x1a0>
			++fmt;
c0008c10:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008c14:	e2833001 	add	r3, r3, #1
c0008c18:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
			/* it's the next argument */
			field_width = va_arg(args, int);
c0008c1c:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c0008c20:	e2832004 	add	r2, r3, #4
c0008c24:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c0008c28:	e5933000 	ldr	r3, [r3]
c0008c2c:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
			if (field_width < 0) {
c0008c30:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c0008c34:	e3530000 	cmp	r3, #0
c0008c38:	aa000005 	bge	c0008c54 <vsprintf+0x1a0>
				field_width = -field_width;
c0008c3c:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c0008c40:	e2633000 	rsb	r3, r3, #0
c0008c44:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
				flags |= LEFT;
c0008c48:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c0008c4c:	e3833010 	orr	r3, r3, #16
c0008c50:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
			}
		}

		/* get the precision */
		precision = -1;
c0008c54:	e3e03000 	mvn	r3, #0
c0008c58:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
		if (*fmt == '.') {
c0008c5c:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008c60:	e5d33000 	ldrb	r3, [r3]
c0008c64:	e353002e 	cmp	r3, #46	; 0x2e
c0008c68:	1a000020 	bne	c0008cf0 <vsprintf+0x23c>
			++fmt;
c0008c6c:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008c70:	e2833001 	add	r3, r3, #1
c0008c74:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
			if (is_digit(*fmt))
c0008c78:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008c7c:	e5d33000 	ldrb	r3, [r3]
c0008c80:	e353002f 	cmp	r3, #47	; 0x2f
c0008c84:	9a000008 	bls	c0008cac <vsprintf+0x1f8>
c0008c88:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008c8c:	e5d33000 	ldrb	r3, [r3]
c0008c90:	e3530039 	cmp	r3, #57	; 0x39
c0008c94:	8a000004 	bhi	c0008cac <vsprintf+0x1f8>
				precision = skip_atoi(&fmt);
c0008c98:	e24b303c 	sub	r3, fp, #60	; 0x3c
c0008c9c:	e1a00003 	mov	r0, r3
c0008ca0:	ebfffe4a 	bl	c00085d0 <skip_atoi>
c0008ca4:	e50b0024 	str	r0, [fp, #-36]	; 0xffffffdc
c0008ca8:	ea00000b 	b	c0008cdc <vsprintf+0x228>
			else if (*fmt == '*') {
c0008cac:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008cb0:	e5d33000 	ldrb	r3, [r3]
c0008cb4:	e353002a 	cmp	r3, #42	; 0x2a
c0008cb8:	1a000007 	bne	c0008cdc <vsprintf+0x228>
				++fmt;
c0008cbc:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008cc0:	e2833001 	add	r3, r3, #1
c0008cc4:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
				/* it's the next argument */
				precision = va_arg(args, int);
c0008cc8:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c0008ccc:	e2832004 	add	r2, r3, #4
c0008cd0:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c0008cd4:	e5933000 	ldr	r3, [r3]
c0008cd8:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
			}
			if (precision < 0)
c0008cdc:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
c0008ce0:	e3530000 	cmp	r3, #0
c0008ce4:	aa000001 	bge	c0008cf0 <vsprintf+0x23c>
				precision = 0;
c0008ce8:	e3a03000 	mov	r3, #0
c0008cec:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
		}

		/* get the conversion qualifier */
		qualifier = -1;
c0008cf0:	e3e03000 	mvn	r3, #0
c0008cf4:	e50b3028 	str	r3, [fp, #-40]	; 0xffffffd8
		if (*fmt == 'h' || *fmt == 'l' || *fmt == 'L' ||
c0008cf8:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008cfc:	e5d33000 	ldrb	r3, [r3]
c0008d00:	e3530068 	cmp	r3, #104	; 0x68
c0008d04:	0a000017 	beq	c0008d68 <vsprintf+0x2b4>
c0008d08:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008d0c:	e5d33000 	ldrb	r3, [r3]
c0008d10:	e353006c 	cmp	r3, #108	; 0x6c
c0008d14:	0a000013 	beq	c0008d68 <vsprintf+0x2b4>
c0008d18:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008d1c:	e5d33000 	ldrb	r3, [r3]
c0008d20:	e353004c 	cmp	r3, #76	; 0x4c
c0008d24:	0a00000f 	beq	c0008d68 <vsprintf+0x2b4>
		    *fmt == 'Z' || *fmt == 'z' || *fmt == 't' ||
c0008d28:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008d2c:	e5d33000 	ldrb	r3, [r3]
		if (*fmt == 'h' || *fmt == 'l' || *fmt == 'L' ||
c0008d30:	e353005a 	cmp	r3, #90	; 0x5a
c0008d34:	0a00000b 	beq	c0008d68 <vsprintf+0x2b4>
		    *fmt == 'Z' || *fmt == 'z' || *fmt == 't' ||
c0008d38:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008d3c:	e5d33000 	ldrb	r3, [r3]
c0008d40:	e353007a 	cmp	r3, #122	; 0x7a
c0008d44:	0a000007 	beq	c0008d68 <vsprintf+0x2b4>
c0008d48:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008d4c:	e5d33000 	ldrb	r3, [r3]
c0008d50:	e3530074 	cmp	r3, #116	; 0x74
c0008d54:	0a000003 	beq	c0008d68 <vsprintf+0x2b4>
		    *fmt == 'q' ) {
c0008d58:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008d5c:	e5d33000 	ldrb	r3, [r3]
		    *fmt == 'Z' || *fmt == 'z' || *fmt == 't' ||
c0008d60:	e3530071 	cmp	r3, #113	; 0x71
c0008d64:	1a000012 	bne	c0008db4 <vsprintf+0x300>
			qualifier = *fmt;
c0008d68:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008d6c:	e5d33000 	ldrb	r3, [r3]
c0008d70:	e50b3028 	str	r3, [fp, #-40]	; 0xffffffd8
			if (qualifier == 'l' && *(fmt+1) == 'l') {
c0008d74:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
c0008d78:	e353006c 	cmp	r3, #108	; 0x6c
c0008d7c:	1a000009 	bne	c0008da8 <vsprintf+0x2f4>
c0008d80:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008d84:	e2833001 	add	r3, r3, #1
c0008d88:	e5d33000 	ldrb	r3, [r3]
c0008d8c:	e353006c 	cmp	r3, #108	; 0x6c
c0008d90:	1a000004 	bne	c0008da8 <vsprintf+0x2f4>
				qualifier = 'q';
c0008d94:	e3a03071 	mov	r3, #113	; 0x71
c0008d98:	e50b3028 	str	r3, [fp, #-40]	; 0xffffffd8
				++fmt;
c0008d9c:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008da0:	e2833001 	add	r3, r3, #1
c0008da4:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
			}
			++fmt;
c0008da8:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008dac:	e2833001 	add	r3, r3, #1
c0008db0:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
		}

		/* default base */
		base = 10;
c0008db4:	e3a0300a 	mov	r3, #10
c0008db8:	e50b3010 	str	r3, [fp, #-16]

		switch (*fmt) {
c0008dbc:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008dc0:	e5d33000 	ldrb	r3, [r3]
c0008dc4:	e2433025 	sub	r3, r3, #37	; 0x25
c0008dc8:	e3530053 	cmp	r3, #83	; 0x53
c0008dcc:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
c0008dd0:	ea0000fc 	b	c00091c8 <vsprintf+0x714>
c0008dd4:	c000917c 	andgt	r9, r0, ip, ror r1
c0008dd8:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ddc:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008de0:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008de4:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008de8:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008dec:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008df0:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008df4:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008df8:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008dfc:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e00:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e04:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e08:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e0c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e10:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e14:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e18:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e1c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e20:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e24:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e28:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e2c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e30:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e34:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e38:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e3c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e40:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e44:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e48:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e4c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e50:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e54:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e58:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e5c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e60:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e64:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e68:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e6c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e70:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e74:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e78:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e7c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e80:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e84:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e88:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e8c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e90:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e94:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e98:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e9c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ea0:	c00091a0 	andgt	r9, r0, r0, lsr #3
c0008ea4:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ea8:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008eac:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008eb0:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008eb4:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008eb8:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ebc:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ec0:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ec4:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ec8:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ecc:	c0008f24 	andgt	r8, r0, r4, lsr #30
c0008ed0:	c00091b8 			; <UNDEFINED> instruction: 0xc00091b8
c0008ed4:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ed8:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008edc:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ee0:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ee4:	c00091b8 			; <UNDEFINED> instruction: 0xc00091b8
c0008ee8:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008eec:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ef0:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ef4:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ef8:	c0009118 	andgt	r9, r0, r8, lsl r1
c0008efc:	c0009194 	mulgt	r0, r4, r1
c0008f00:	c00090bc 	strhgt	r9, [r0], -ip
c0008f04:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008f08:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008f0c:	c0008fbc 			; <UNDEFINED> instruction: 0xc0008fbc
c0008f10:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008f14:	c0009218 	andgt	r9, r0, r8, lsl r2
c0008f18:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008f1c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008f20:	c00091ac 	andgt	r9, r0, ip, lsr #3
		case 'c':
			if (!(flags & LEFT))
c0008f24:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c0008f28:	e2033010 	and	r3, r3, #16
c0008f2c:	e3530000 	cmp	r3, #0
c0008f30:	1a00000b 	bne	c0008f64 <vsprintf+0x4b0>
				while (--field_width > 0)
c0008f34:	ea000004 	b	c0008f4c <vsprintf+0x498>
					*str++ = ' ';
c0008f38:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c0008f3c:	e2832001 	add	r2, r3, #1
c0008f40:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
c0008f44:	e3a02020 	mov	r2, #32
c0008f48:	e5c32000 	strb	r2, [r3]
				while (--field_width > 0)
c0008f4c:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c0008f50:	e2433001 	sub	r3, r3, #1
c0008f54:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
c0008f58:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c0008f5c:	e3530000 	cmp	r3, #0
c0008f60:	cafffff4 	bgt	c0008f38 <vsprintf+0x484>
			*str++ = (unsigned char) va_arg(args, int);
c0008f64:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c0008f68:	e2832004 	add	r2, r3, #4
c0008f6c:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c0008f70:	e5931000 	ldr	r1, [r3]
c0008f74:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c0008f78:	e2832001 	add	r2, r3, #1
c0008f7c:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
c0008f80:	e6ef2071 	uxtb	r2, r1
c0008f84:	e5c32000 	strb	r2, [r3]
			while (--field_width > 0)
c0008f88:	ea000004 	b	c0008fa0 <vsprintf+0x4ec>
				*str++ = ' ';
c0008f8c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c0008f90:	e2832001 	add	r2, r3, #1
c0008f94:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
c0008f98:	e3a02020 	mov	r2, #32
c0008f9c:	e5c32000 	strb	r2, [r3]
			while (--field_width > 0)
c0008fa0:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c0008fa4:	e2433001 	sub	r3, r3, #1
c0008fa8:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
c0008fac:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c0008fb0:	e3530000 	cmp	r3, #0
c0008fb4:	cafffff4 	bgt	c0008f8c <vsprintf+0x4d8>
			continue;
c0008fb8:	ea0000df 	b	c000933c <vsprintf+0x888>

		case 's':
			s = va_arg(args, char *);
c0008fbc:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c0008fc0:	e2832004 	add	r2, r3, #4
c0008fc4:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c0008fc8:	e5933000 	ldr	r3, [r3]
c0008fcc:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
			if (!s)
c0008fd0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
c0008fd4:	e3530000 	cmp	r3, #0
c0008fd8:	1a000002 	bne	c0008fe8 <vsprintf+0x534>
				s = "<NULL>";
c0008fdc:	e3093fc4 	movw	r3, #40900	; 0x9fc4
c0008fe0:	e34c3000 	movt	r3, #49152	; 0xc000
c0008fe4:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8

			len = strnlen(s, precision);
c0008fe8:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
c0008fec:	e1a01003 	mov	r1, r3
c0008ff0:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
c0008ff4:	ebfffe93 	bl	c0008a48 <strnlen>
c0008ff8:	e1a03000 	mov	r3, r0
c0008ffc:	e50b302c 	str	r3, [fp, #-44]	; 0xffffffd4

			if (!(flags & LEFT))
c0009000:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c0009004:	e2033010 	and	r3, r3, #16
c0009008:	e3530000 	cmp	r3, #0
c000900c:	1a00000b 	bne	c0009040 <vsprintf+0x58c>
				while (len < field_width--)
c0009010:	ea000004 	b	c0009028 <vsprintf+0x574>
					*str++ = ' ';
c0009014:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c0009018:	e2832001 	add	r2, r3, #1
c000901c:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
c0009020:	e3a02020 	mov	r2, #32
c0009024:	e5c32000 	strb	r2, [r3]
				while (len < field_width--)
c0009028:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c000902c:	e2432001 	sub	r2, r3, #1
c0009030:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
c0009034:	e51b202c 	ldr	r2, [fp, #-44]	; 0xffffffd4
c0009038:	e1520003 	cmp	r2, r3
c000903c:	bafffff4 	blt	c0009014 <vsprintf+0x560>
			for (i = 0; i < len; ++i)
c0009040:	e3a03000 	mov	r3, #0
c0009044:	e50b300c 	str	r3, [fp, #-12]
c0009048:	ea00000a 	b	c0009078 <vsprintf+0x5c4>
				*str++ = *s++;
c000904c:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
c0009050:	e2823001 	add	r3, r2, #1
c0009054:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
c0009058:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c000905c:	e2831001 	add	r1, r3, #1
c0009060:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
c0009064:	e5d22000 	ldrb	r2, [r2]
c0009068:	e5c32000 	strb	r2, [r3]
			for (i = 0; i < len; ++i)
c000906c:	e51b300c 	ldr	r3, [fp, #-12]
c0009070:	e2833001 	add	r3, r3, #1
c0009074:	e50b300c 	str	r3, [fp, #-12]
c0009078:	e51b200c 	ldr	r2, [fp, #-12]
c000907c:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
c0009080:	e1520003 	cmp	r2, r3
c0009084:	bafffff0 	blt	c000904c <vsprintf+0x598>
			while (len < field_width--)
c0009088:	ea000004 	b	c00090a0 <vsprintf+0x5ec>
				*str++ = ' ';
c000908c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c0009090:	e2832001 	add	r2, r3, #1
c0009094:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
c0009098:	e3a02020 	mov	r2, #32
c000909c:	e5c32000 	strb	r2, [r3]
			while (len < field_width--)
c00090a0:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c00090a4:	e2432001 	sub	r2, r3, #1
c00090a8:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
c00090ac:	e51b202c 	ldr	r2, [fp, #-44]	; 0xffffffd4
c00090b0:	e1520003 	cmp	r2, r3
c00090b4:	bafffff4 	blt	c000908c <vsprintf+0x5d8>
			continue;
c00090b8:	ea00009f 	b	c000933c <vsprintf+0x888>

		case 'p':
			if (field_width == -1) {
c00090bc:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c00090c0:	e3730001 	cmn	r3, #1
c00090c4:	1a000004 	bne	c00090dc <vsprintf+0x628>
				field_width = 2*sizeof(void *);
c00090c8:	e3a03008 	mov	r3, #8
c00090cc:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
				flags |= ZEROPAD;
c00090d0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c00090d4:	e3833001 	orr	r3, r3, #1
c00090d8:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
			}
			str = number(str,
				(unsigned long) va_arg(args, void *), 16,
c00090dc:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c00090e0:	e2832004 	add	r2, r3, #4
c00090e4:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c00090e8:	e5933000 	ldr	r3, [r3]
			str = number(str,
c00090ec:	e1a01003 	mov	r1, r3
c00090f0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c00090f4:	e58d3004 	str	r3, [sp, #4]
c00090f8:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
c00090fc:	e58d3000 	str	r3, [sp]
c0009100:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c0009104:	e3a02010 	mov	r2, #16
c0009108:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
c000910c:	ebfffd54 	bl	c0008664 <number>
c0009110:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
				field_width, precision, flags);
			continue;
c0009114:	ea000088 	b	c000933c <vsprintf+0x888>


		case 'n':
			if (qualifier == 'l') {
c0009118:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
c000911c:	e353006c 	cmp	r3, #108	; 0x6c
c0009120:	1a00000a 	bne	c0009150 <vsprintf+0x69c>
				long * ip = va_arg(args, long *);
c0009124:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c0009128:	e2832004 	add	r2, r3, #4
c000912c:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c0009130:	e5933000 	ldr	r3, [r3]
c0009134:	e50b3034 	str	r3, [fp, #-52]	; 0xffffffcc
				*ip = (str - buf);
c0009138:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
c000913c:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
c0009140:	e0422003 	sub	r2, r2, r3
c0009144:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
c0009148:	e5832000 	str	r2, [r3]
			} else {
				int * ip = va_arg(args, int *);
				*ip = (str - buf);
			}
			continue;
c000914c:	ea00007a 	b	c000933c <vsprintf+0x888>
				int * ip = va_arg(args, int *);
c0009150:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c0009154:	e2832004 	add	r2, r3, #4
c0009158:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c000915c:	e5933000 	ldr	r3, [r3]
c0009160:	e50b3030 	str	r3, [fp, #-48]	; 0xffffffd0
				*ip = (str - buf);
c0009164:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
c0009168:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
c000916c:	e0422003 	sub	r2, r2, r3
c0009170:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
c0009174:	e5832000 	str	r2, [r3]
			continue;
c0009178:	ea00006f 	b	c000933c <vsprintf+0x888>

		case '%':
			*str++ = '%';
c000917c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c0009180:	e2832001 	add	r2, r3, #1
c0009184:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
c0009188:	e3a02025 	mov	r2, #37	; 0x25
c000918c:	e5c32000 	strb	r2, [r3]
			continue;
c0009190:	ea000069 	b	c000933c <vsprintf+0x888>

		/* integer number formats - set up the flags and "break" */
		case 'o':
			base = 8;
c0009194:	e3a03008 	mov	r3, #8
c0009198:	e50b3010 	str	r3, [fp, #-16]
			break;
c000919c:	ea00001e 	b	c000921c <vsprintf+0x768>

		case 'X':
			flags |= LARGE;
c00091a0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c00091a4:	e3833040 	orr	r3, r3, #64	; 0x40
c00091a8:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
		case 'x':
			base = 16;
c00091ac:	e3a03010 	mov	r3, #16
c00091b0:	e50b3010 	str	r3, [fp, #-16]
			break;
c00091b4:	ea000018 	b	c000921c <vsprintf+0x768>

		case 'd':
		case 'i':
			flags |= SIGN;
c00091b8:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c00091bc:	e3833002 	orr	r3, r3, #2
c00091c0:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
		case 'u':
			break;
c00091c4:	ea000013 	b	c0009218 <vsprintf+0x764>

		default:
			*str++ = '%';
c00091c8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c00091cc:	e2832001 	add	r2, r3, #1
c00091d0:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
c00091d4:	e3a02025 	mov	r2, #37	; 0x25
c00091d8:	e5c32000 	strb	r2, [r3]
			if (*fmt)
c00091dc:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c00091e0:	e5d33000 	ldrb	r3, [r3]
c00091e4:	e3530000 	cmp	r3, #0
c00091e8:	0a000006 	beq	c0009208 <vsprintf+0x754>
				*str++ = *fmt;
c00091ec:	e51b203c 	ldr	r2, [fp, #-60]	; 0xffffffc4
c00091f0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c00091f4:	e2831001 	add	r1, r3, #1
c00091f8:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
c00091fc:	e5d22000 	ldrb	r2, [r2]
c0009200:	e5c32000 	strb	r2, [r3]
			else
				--fmt;
			continue;
c0009204:	ea00004c 	b	c000933c <vsprintf+0x888>
				--fmt;
c0009208:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c000920c:	e2433001 	sub	r3, r3, #1
c0009210:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
			continue;
c0009214:	ea000048 	b	c000933c <vsprintf+0x888>
			break;
c0009218:	e320f000 	nop	{0}
#ifdef CFG_64BIT_VSPRINTF
		if (qualifier == 'q')  /* "quad" for 64 bit variables */
			num = va_arg(args, unsigned long long);
		else
#endif
		if (qualifier == 'l') {
c000921c:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
c0009220:	e353006c 	cmp	r3, #108	; 0x6c
c0009224:	1a000005 	bne	c0009240 <vsprintf+0x78c>
			num = va_arg(args, unsigned long);
c0009228:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c000922c:	e2832004 	add	r2, r3, #4
c0009230:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c0009234:	e5933000 	ldr	r3, [r3]
c0009238:	e50b3008 	str	r3, [fp, #-8]
c000923c:	ea000034 	b	c0009314 <vsprintf+0x860>
		} else if (qualifier == 'Z' || qualifier == 'z') {
c0009240:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
c0009244:	e353005a 	cmp	r3, #90	; 0x5a
c0009248:	0a000002 	beq	c0009258 <vsprintf+0x7a4>
c000924c:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
c0009250:	e353007a 	cmp	r3, #122	; 0x7a
c0009254:	1a000005 	bne	c0009270 <vsprintf+0x7bc>
			num = va_arg(args, size_t);
c0009258:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c000925c:	e2832004 	add	r2, r3, #4
c0009260:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c0009264:	e5933000 	ldr	r3, [r3]
c0009268:	e50b3008 	str	r3, [fp, #-8]
c000926c:	ea000028 	b	c0009314 <vsprintf+0x860>
		} else if (qualifier == 't') {
c0009270:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
c0009274:	e3530074 	cmp	r3, #116	; 0x74
c0009278:	1a000005 	bne	c0009294 <vsprintf+0x7e0>
			num = va_arg(args, long);
c000927c:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c0009280:	e2832004 	add	r2, r3, #4
c0009284:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c0009288:	e5933000 	ldr	r3, [r3]
c000928c:	e50b3008 	str	r3, [fp, #-8]
c0009290:	ea00001f 	b	c0009314 <vsprintf+0x860>
		} else if (qualifier == 'h') {
c0009294:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
c0009298:	e3530068 	cmp	r3, #104	; 0x68
c000929c:	1a00000d 	bne	c00092d8 <vsprintf+0x824>
			num = (unsigned short) va_arg(args, int);
c00092a0:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c00092a4:	e2832004 	add	r2, r3, #4
c00092a8:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c00092ac:	e5933000 	ldr	r3, [r3]
c00092b0:	e6ff3073 	uxth	r3, r3
c00092b4:	e50b3008 	str	r3, [fp, #-8]
			if (flags & SIGN)
c00092b8:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c00092bc:	e2033002 	and	r3, r3, #2
c00092c0:	e3530000 	cmp	r3, #0
c00092c4:	0a000012 	beq	c0009314 <vsprintf+0x860>
				num = (short) num;
c00092c8:	e51b3008 	ldr	r3, [fp, #-8]
c00092cc:	e6bf3073 	sxth	r3, r3
c00092d0:	e50b3008 	str	r3, [fp, #-8]
c00092d4:	ea00000e 	b	c0009314 <vsprintf+0x860>
		} else if (flags & SIGN)
c00092d8:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c00092dc:	e2033002 	and	r3, r3, #2
c00092e0:	e3530000 	cmp	r3, #0
c00092e4:	0a000005 	beq	c0009300 <vsprintf+0x84c>
			num = va_arg(args, int);
c00092e8:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c00092ec:	e2832004 	add	r2, r3, #4
c00092f0:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c00092f4:	e5933000 	ldr	r3, [r3]
c00092f8:	e50b3008 	str	r3, [fp, #-8]
c00092fc:	ea000004 	b	c0009314 <vsprintf+0x860>
		else
			num = va_arg(args, unsigned int);
c0009300:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c0009304:	e2832004 	add	r2, r3, #4
c0009308:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c000930c:	e5933000 	ldr	r3, [r3]
c0009310:	e50b3008 	str	r3, [fp, #-8]
		str = number(str, num, base, field_width, precision, flags);
c0009314:	e51b1008 	ldr	r1, [fp, #-8]
c0009318:	e51b2010 	ldr	r2, [fp, #-16]
c000931c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c0009320:	e58d3004 	str	r3, [sp, #4]
c0009324:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
c0009328:	e58d3000 	str	r3, [sp]
c000932c:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c0009330:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
c0009334:	ebfffcca 	bl	c0008664 <number>
c0009338:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
	for (str=buf ; *fmt ; ++fmt) {
c000933c:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0009340:	e2833001 	add	r3, r3, #1
c0009344:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
c0009348:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c000934c:	e5d33000 	ldrb	r3, [r3]
c0009350:	e3530000 	cmp	r3, #0
c0009354:	1afffddf 	bne	c0008ad8 <vsprintf+0x24>
	}
	*str = '\0';
c0009358:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c000935c:	e3a02000 	mov	r2, #0
c0009360:	e5c32000 	strb	r2, [r3]
	return str-buf;
c0009364:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
c0009368:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
c000936c:	e0423003 	sub	r3, r2, r3
}
c0009370:	e1a00003 	mov	r0, r3
c0009374:	e24bd004 	sub	sp, fp, #4
c0009378:	e8bd8800 	pop	{fp, pc}

c000937c <sprintf>:

int sprintf(char * buf, const char *fmt, ...)
{
c000937c:	e92d000e 	push	{r1, r2, r3}
c0009380:	e92d4800 	push	{fp, lr}
c0009384:	e28db004 	add	fp, sp, #4
c0009388:	e24dd00c 	sub	sp, sp, #12
c000938c:	e50b0010 	str	r0, [fp, #-16]
	va_list args;
	int i;

	va_start(args, fmt);
c0009390:	e28b3008 	add	r3, fp, #8
c0009394:	e50b300c 	str	r3, [fp, #-12]
	i=vsprintf(buf,fmt,args);
c0009398:	e51b300c 	ldr	r3, [fp, #-12]
c000939c:	e1a02003 	mov	r2, r3
c00093a0:	e59b1004 	ldr	r1, [fp, #4]
c00093a4:	e51b0010 	ldr	r0, [fp, #-16]
c00093a8:	ebfffdc1 	bl	c0008ab4 <vsprintf>
c00093ac:	e50b0008 	str	r0, [fp, #-8]
	va_end(args);
	return i;
c00093b0:	e51b3008 	ldr	r3, [fp, #-8]
}
c00093b4:	e1a00003 	mov	r0, r3
c00093b8:	e24bd004 	sub	sp, fp, #4
c00093bc:	e8bd4800 	pop	{fp, lr}
c00093c0:	e28dd00c 	add	sp, sp, #12
c00093c4:	e12fff1e 	bx	lr

c00093c8 <printf>:

void printf (const char *fmt, ...)
{
c00093c8:	e92d000f 	push	{r0, r1, r2, r3}
c00093cc:	e92d4800 	push	{fp, lr}
c00093d0:	e28db004 	add	fp, sp, #4
c00093d4:	e24dd068 	sub	sp, sp, #104	; 0x68
	va_list args;
	char printbuffer[100];
	va_start (args, fmt);
c00093d8:	e28b3008 	add	r3, fp, #8
c00093dc:	e50b3008 	str	r3, [fp, #-8]

	/* For this to work, printbuffer must be larger than
	 * anything we ever want to print.
	 */
	vsprintf (printbuffer, fmt, args);
c00093e0:	e51b2008 	ldr	r2, [fp, #-8]
c00093e4:	e24b306c 	sub	r3, fp, #108	; 0x6c
c00093e8:	e59b1004 	ldr	r1, [fp, #4]
c00093ec:	e1a00003 	mov	r0, r3
c00093f0:	ebfffdaf 	bl	c0008ab4 <vsprintf>
	va_end (args);
	__uart_puts (printbuffer);
c00093f4:	e24b306c 	sub	r3, fp, #108	; 0x6c
c00093f8:	e1a00003 	mov	r0, r3
c00093fc:	eb000096 	bl	c000965c <__uart_puts>
}
c0009400:	e320f000 	nop	{0}
c0009404:	e24bd004 	sub	sp, fp, #4
c0009408:	e8bd4800 	pop	{fp, lr}
c000940c:	e28dd010 	add	sp, sp, #16
c0009410:	e12fff1e 	bx	lr

c0009414 <__uart_init>:
#include "stm32mp1xx_gpio.h"
#include "stm32mp1xx_uart.h"
// UART4_TX : PG11  AF6
// UART4_RX : PB2   AF8
void __uart_init()
{
c0009414:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c0009418:	e28db000 	add	fp, sp, #0
   	// GPIOB2 设置为复用功能
   	GPIOB->MODER &= (~(0x3 << 4));
c000941c:	e3a03a03 	mov	r3, #12288	; 0x3000
c0009420:	e3453000 	movt	r3, #20480	; 0x5000
c0009424:	e5932000 	ldr	r2, [r3]
c0009428:	e3a03a03 	mov	r3, #12288	; 0x3000
c000942c:	e3453000 	movt	r3, #20480	; 0x5000
c0009430:	e3c22030 	bic	r2, r2, #48	; 0x30
c0009434:	e5832000 	str	r2, [r3]
   	GPIOB->MODER |= (0x2 << 4);
c0009438:	e3a03a03 	mov	r3, #12288	; 0x3000
c000943c:	e3453000 	movt	r3, #20480	; 0x5000
c0009440:	e5932000 	ldr	r2, [r3]
c0009444:	e3a03a03 	mov	r3, #12288	; 0x3000
c0009448:	e3453000 	movt	r3, #20480	; 0x5000
c000944c:	e3822020 	orr	r2, r2, #32
c0009450:	e5832000 	str	r2, [r3]
	GPIOB->AFRL &= (~(0xF << 8));
c0009454:	e3a03a03 	mov	r3, #12288	; 0x3000
c0009458:	e3453000 	movt	r3, #20480	; 0x5000
c000945c:	e5932020 	ldr	r2, [r3, #32]
c0009460:	e3a03a03 	mov	r3, #12288	; 0x3000
c0009464:	e3453000 	movt	r3, #20480	; 0x5000
c0009468:	e3c22c0f 	bic	r2, r2, #3840	; 0xf00
c000946c:	e5832020 	str	r2, [r3, #32]
	GPIOB->AFRL |= (0x8 << 8);
c0009470:	e3a03a03 	mov	r3, #12288	; 0x3000
c0009474:	e3453000 	movt	r3, #20480	; 0x5000
c0009478:	e5932020 	ldr	r2, [r3, #32]
c000947c:	e3a03a03 	mov	r3, #12288	; 0x3000
c0009480:	e3453000 	movt	r3, #20480	; 0x5000
c0009484:	e3822b02 	orr	r2, r2, #2048	; 0x800
c0009488:	e5832020 	str	r2, [r3, #32]
	// GPIOG11 设置为复用功能 
	GPIOG->MODER &= (~(0x3 << 22));
c000948c:	e3a03902 	mov	r3, #32768	; 0x8000
c0009490:	e3453000 	movt	r3, #20480	; 0x5000
c0009494:	e5932000 	ldr	r2, [r3]
c0009498:	e3a03902 	mov	r3, #32768	; 0x8000
c000949c:	e3453000 	movt	r3, #20480	; 0x5000
c00094a0:	e3c22503 	bic	r2, r2, #12582912	; 0xc00000
c00094a4:	e5832000 	str	r2, [r3]
	GPIOG->MODER |= (0x2 << 4);
c00094a8:	e3a03902 	mov	r3, #32768	; 0x8000
c00094ac:	e3453000 	movt	r3, #20480	; 0x5000
c00094b0:	e5932000 	ldr	r2, [r3]
c00094b4:	e3a03902 	mov	r3, #32768	; 0x8000
c00094b8:	e3453000 	movt	r3, #20480	; 0x5000
c00094bc:	e3822020 	orr	r2, r2, #32
c00094c0:	e5832000 	str	r2, [r3]
	GPIOG->AFRH &= (~(0xF << 12));
c00094c4:	e3a03902 	mov	r3, #32768	; 0x8000
c00094c8:	e3453000 	movt	r3, #20480	; 0x5000
c00094cc:	e5932024 	ldr	r2, [r3, #36]	; 0x24
c00094d0:	e3a03902 	mov	r3, #32768	; 0x8000
c00094d4:	e3453000 	movt	r3, #20480	; 0x5000
c00094d8:	e3c22a0f 	bic	r2, r2, #61440	; 0xf000
c00094dc:	e5832024 	str	r2, [r3, #36]	; 0x24
	GPIOG->AFRH |= (0x6 << 12);
c00094e0:	e3a03902 	mov	r3, #32768	; 0x8000
c00094e4:	e3453000 	movt	r3, #20480	; 0x5000
c00094e8:	e5932024 	ldr	r2, [r3, #36]	; 0x24
c00094ec:	e3a03902 	mov	r3, #32768	; 0x8000
c00094f0:	e3453000 	movt	r3, #20480	; 0x5000
c00094f4:	e3822a06 	orr	r2, r2, #24576	; 0x6000
c00094f8:	e5832024 	str	r2, [r3, #36]	; 0x24
	// 设置数据长度为8位   USART_CR1  
	USART4->CR1 &= (~(0x1 << 28));
c00094fc:	e3a03000 	mov	r3, #0
c0009500:	e3443001 	movt	r3, #16385	; 0x4001
c0009504:	e5932000 	ldr	r2, [r3]
c0009508:	e3a03000 	mov	r3, #0
c000950c:	e3443001 	movt	r3, #16385	; 0x4001
c0009510:	e3c22201 	bic	r2, r2, #268435456	; 0x10000000
c0009514:	e5832000 	str	r2, [r3]
	USART4->CR1 &= (~(0x1 << 12));
c0009518:	e3a03000 	mov	r3, #0
c000951c:	e3443001 	movt	r3, #16385	; 0x4001
c0009520:	e5932000 	ldr	r2, [r3]
c0009524:	e3a03000 	mov	r3, #0
c0009528:	e3443001 	movt	r3, #16385	; 0x4001
c000952c:	e3c22a01 	bic	r2, r2, #4096	; 0x1000
c0009530:	e5832000 	str	r2, [r3]
	// 采样率为16位 
	USART4->CR1 &= (~(0x1 << 15));
c0009534:	e3a03000 	mov	r3, #0
c0009538:	e3443001 	movt	r3, #16385	; 0x4001
c000953c:	e5932000 	ldr	r2, [r3]
c0009540:	e3a03000 	mov	r3, #0
c0009544:	e3443001 	movt	r3, #16385	; 0x4001
c0009548:	e3c22902 	bic	r2, r2, #32768	; 0x8000
c000954c:	e5832000 	str	r2, [r3]
	// 设置波特率为115200bps 
	USART4->PRESC &= (~(0xF << 0));
c0009550:	e3a03000 	mov	r3, #0
c0009554:	e3443001 	movt	r3, #16385	; 0x4001
c0009558:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
c000955c:	e3a03000 	mov	r3, #0
c0009560:	e3443001 	movt	r3, #16385	; 0x4001
c0009564:	e3c2200f 	bic	r2, r2, #15
c0009568:	e583202c 	str	r2, [r3, #44]	; 0x2c
	USART4->BRR = 0xD0;
c000956c:	e3a03000 	mov	r3, #0
c0009570:	e3443001 	movt	r3, #16385	; 0x4001
c0009574:	e3a020d0 	mov	r2, #208	; 0xd0
c0009578:	e583200c 	str	r2, [r3, #12]
	// 停止位1位
	USART4->CR2 &= (~(0x3 << 12));
c000957c:	e3a03000 	mov	r3, #0
c0009580:	e3443001 	movt	r3, #16385	; 0x4001
c0009584:	e5932004 	ldr	r2, [r3, #4]
c0009588:	e3a03000 	mov	r3, #0
c000958c:	e3443001 	movt	r3, #16385	; 0x4001
c0009590:	e3c22a03 	bic	r2, r2, #12288	; 0x3000
c0009594:	e5832004 	str	r2, [r3, #4]
	// 使能USART串口 
	USART4->CR1 |= (0x1 << 0);
c0009598:	e3a03000 	mov	r3, #0
c000959c:	e3443001 	movt	r3, #16385	; 0x4001
c00095a0:	e5932000 	ldr	r2, [r3]
c00095a4:	e3a03000 	mov	r3, #0
c00095a8:	e3443001 	movt	r3, #16385	; 0x4001
c00095ac:	e3822001 	orr	r2, r2, #1
c00095b0:	e5832000 	str	r2, [r3]
	// 使能USART的发送或者接收功能 
	USART4->CR1 |= (0x1 << 3);
c00095b4:	e3a03000 	mov	r3, #0
c00095b8:	e3443001 	movt	r3, #16385	; 0x4001
c00095bc:	e5932000 	ldr	r2, [r3]
c00095c0:	e3a03000 	mov	r3, #0
c00095c4:	e3443001 	movt	r3, #16385	; 0x4001
c00095c8:	e3822008 	orr	r2, r2, #8
c00095cc:	e5832000 	str	r2, [r3]
	USART4->CR1 |= (0x1 << 2);
c00095d0:	e3a03000 	mov	r3, #0
c00095d4:	e3443001 	movt	r3, #16385	; 0x4001
c00095d8:	e5932000 	ldr	r2, [r3]
c00095dc:	e3a03000 	mov	r3, #0
c00095e0:	e3443001 	movt	r3, #16385	; 0x4001
c00095e4:	e3822004 	orr	r2, r2, #4
c00095e8:	e5832000 	str	r2, [r3]

}
c00095ec:	e320f000 	nop	{0}
c00095f0:	e28bd000 	add	sp, fp, #0
c00095f4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c00095f8:	e12fff1e 	bx	lr

c00095fc <__uart_putc>:

void __uart_putc(const char data)
{
c00095fc:	e92d4800 	push	{fp, lr}
c0009600:	e28db004 	add	fp, sp, #4
c0009604:	e24dd004 	sub	sp, sp, #4
c0009608:	e1a03000 	mov	r3, r0
c000960c:	e54b3008 	strb	r3, [fp, #-8]
	while (!(USART4->ISR & (0x1 << 7)));
c0009610:	e320f000 	nop	{0}
c0009614:	e3a03000 	mov	r3, #0
c0009618:	e3443001 	movt	r3, #16385	; 0x4001
c000961c:	e593301c 	ldr	r3, [r3, #28]
c0009620:	e2033080 	and	r3, r3, #128	; 0x80
c0009624:	e3530000 	cmp	r3, #0
c0009628:	0afffff9 	beq	c0009614 <__uart_putc+0x18>
	USART4->TDR = data;
c000962c:	e3a03000 	mov	r3, #0
c0009630:	e3443001 	movt	r3, #16385	; 0x4001
c0009634:	e55b2008 	ldrb	r2, [fp, #-8]
c0009638:	e5832028 	str	r2, [r3, #40]	; 0x28
	if (data == '\n')
c000963c:	e55b3008 	ldrb	r3, [fp, #-8]
c0009640:	e353000a 	cmp	r3, #10
c0009644:	1a000001 	bne	c0009650 <__uart_putc+0x54>
		__uart_putc('\r');
c0009648:	e3a0000d 	mov	r0, #13
c000964c:	ebffffea 	bl	c00095fc <__uart_putc>
}
c0009650:	e320f000 	nop	{0}
c0009654:	e24bd004 	sub	sp, fp, #4
c0009658:	e8bd8800 	pop	{fp, pc}

c000965c <__uart_puts>:
void __uart_puts(const  char  *pstr)
{
c000965c:	e92d4800 	push	{fp, lr}
c0009660:	e28db004 	add	fp, sp, #4
c0009664:	e24dd004 	sub	sp, sp, #4
c0009668:	e50b0008 	str	r0, [fp, #-8]
	while(*pstr != '\0')
c000966c:	ea000005 	b	c0009688 <__uart_puts+0x2c>
		__uart_putc(*pstr++);
c0009670:	e51b3008 	ldr	r3, [fp, #-8]
c0009674:	e2832001 	add	r2, r3, #1
c0009678:	e50b2008 	str	r2, [fp, #-8]
c000967c:	e5d33000 	ldrb	r3, [r3]
c0009680:	e1a00003 	mov	r0, r3
c0009684:	ebffffdc 	bl	c00095fc <__uart_putc>
	while(*pstr != '\0')
c0009688:	e51b3008 	ldr	r3, [fp, #-8]
c000968c:	e5d33000 	ldrb	r3, [r3]
c0009690:	e3530000 	cmp	r3, #0
c0009694:	1afffff5 	bne	c0009670 <__uart_puts+0x14>
}
c0009698:	e320f000 	nop	{0}
c000969c:	e24bd004 	sub	sp, fp, #4
c00096a0:	e8bd8800 	pop	{fp, pc}

c00096a4 <__uart_getc>:

char __uart_getc(void)
{
c00096a4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c00096a8:	e28db000 	add	fp, sp, #0
c00096ac:	e24dd004 	sub	sp, sp, #4
	char ch;
	while(!(USART4->ISR & (0x1 << 5)));
c00096b0:	e320f000 	nop	{0}
c00096b4:	e3a03000 	mov	r3, #0
c00096b8:	e3443001 	movt	r3, #16385	; 0x4001
c00096bc:	e593301c 	ldr	r3, [r3, #28]
c00096c0:	e2033020 	and	r3, r3, #32
c00096c4:	e3530000 	cmp	r3, #0
c00096c8:	0afffff9 	beq	c00096b4 <__uart_getc+0x10>
	ch = (char)USART4->RDR;
c00096cc:	e3a03000 	mov	r3, #0
c00096d0:	e3443001 	movt	r3, #16385	; 0x4001
c00096d4:	e5933024 	ldr	r3, [r3, #36]	; 0x24
c00096d8:	e54b3001 	strb	r3, [fp, #-1]
	return ch;
c00096dc:	e55b3001 	ldrb	r3, [fp, #-1]
}
c00096e0:	e1a00003 	mov	r0, r3
c00096e4:	e28bd000 	add	sp, fp, #0
c00096e8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c00096ec:	e12fff1e 	bx	lr

c00096f0 <do_irq>:
extern void printf(const char *fmt, ...);
unsigned int i = 0;
void do_irq(void) 
{
c00096f0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c00096f4:	e28db000 	add	fp, sp, #0
}
c00096f8:	e320f000 	nop	{0}
c00096fc:	e28bd000 	add	sp, fp, #0
c0009700:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c0009704:	e12fff1e 	bx	lr

c0009708 <hal_gpio_init>:
#include "gpio.h"

void hal_gpio_init(gpio_t * gpiox,unsigned int pin,gpio_init_t* init)
{
c0009708:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c000970c:	e28db000 	add	fp, sp, #0
c0009710:	e24dd00c 	sub	sp, sp, #12
c0009714:	e50b0004 	str	r0, [fp, #-4]
c0009718:	e50b1008 	str	r1, [fp, #-8]
c000971c:	e50b200c 	str	r2, [fp, #-12]
	//1.mode 
    gpiox->MODER &=(~(0x3 << 2*pin));
c0009720:	e51b3004 	ldr	r3, [fp, #-4]
c0009724:	e5933000 	ldr	r3, [r3]
c0009728:	e51b2008 	ldr	r2, [fp, #-8]
c000972c:	e1a02082 	lsl	r2, r2, #1
c0009730:	e3a01003 	mov	r1, #3
c0009734:	e1a02211 	lsl	r2, r1, r2
c0009738:	e1e02002 	mvn	r2, r2
c000973c:	e0022003 	and	r2, r2, r3
c0009740:	e51b3004 	ldr	r3, [fp, #-4]
c0009744:	e5832000 	str	r2, [r3]
	gpiox->MODER |= (init->moder << 2*pin);
c0009748:	e51b3004 	ldr	r3, [fp, #-4]
c000974c:	e5932000 	ldr	r2, [r3]
c0009750:	e51b300c 	ldr	r3, [fp, #-12]
c0009754:	e5931000 	ldr	r1, [r3]
c0009758:	e51b3008 	ldr	r3, [fp, #-8]
c000975c:	e1a03083 	lsl	r3, r3, #1
c0009760:	e1a03311 	lsl	r3, r1, r3
c0009764:	e1822003 	orr	r2, r2, r3
c0009768:	e51b3004 	ldr	r3, [fp, #-4]
c000976c:	e5832000 	str	r2, [r3]

	//2.type
	gpiox->OTYPER &= (0x1<<pin);
c0009770:	e51b3004 	ldr	r3, [fp, #-4]
c0009774:	e5933004 	ldr	r3, [r3, #4]
c0009778:	e3a01001 	mov	r1, #1
c000977c:	e51b2008 	ldr	r2, [fp, #-8]
c0009780:	e1a02211 	lsl	r2, r1, r2
c0009784:	e0022003 	and	r2, r2, r3
c0009788:	e51b3004 	ldr	r3, [fp, #-4]
c000978c:	e5832004 	str	r2, [r3, #4]
	gpiox->OTYPER |= (init->otyper << pin);
c0009790:	e51b3004 	ldr	r3, [fp, #-4]
c0009794:	e5932004 	ldr	r2, [r3, #4]
c0009798:	e51b300c 	ldr	r3, [fp, #-12]
c000979c:	e5931004 	ldr	r1, [r3, #4]
c00097a0:	e51b3008 	ldr	r3, [fp, #-8]
c00097a4:	e1a03311 	lsl	r3, r1, r3
c00097a8:	e1822003 	orr	r2, r2, r3
c00097ac:	e51b3004 	ldr	r3, [fp, #-4]
c00097b0:	e5832004 	str	r2, [r3, #4]

	//3.speed 
	gpiox->OSPEEDR &= (~(0x3 << 2*pin));
c00097b4:	e51b3004 	ldr	r3, [fp, #-4]
c00097b8:	e5933008 	ldr	r3, [r3, #8]
c00097bc:	e51b2008 	ldr	r2, [fp, #-8]
c00097c0:	e1a02082 	lsl	r2, r2, #1
c00097c4:	e3a01003 	mov	r1, #3
c00097c8:	e1a02211 	lsl	r2, r1, r2
c00097cc:	e1e02002 	mvn	r2, r2
c00097d0:	e0022003 	and	r2, r2, r3
c00097d4:	e51b3004 	ldr	r3, [fp, #-4]
c00097d8:	e5832008 	str	r2, [r3, #8]
	gpiox->OSPEEDR |= (init->ospeedr <<2*pin);
c00097dc:	e51b3004 	ldr	r3, [fp, #-4]
c00097e0:	e5932008 	ldr	r2, [r3, #8]
c00097e4:	e51b300c 	ldr	r3, [fp, #-12]
c00097e8:	e5931008 	ldr	r1, [r3, #8]
c00097ec:	e51b3008 	ldr	r3, [fp, #-8]
c00097f0:	e1a03083 	lsl	r3, r3, #1
c00097f4:	e1a03311 	lsl	r3, r1, r3
c00097f8:	e1822003 	orr	r2, r2, r3
c00097fc:	e51b3004 	ldr	r3, [fp, #-4]
c0009800:	e5832008 	str	r2, [r3, #8]

	//4.push pull 
	gpiox->PUPDR &= (~(0x3<<2*pin));
c0009804:	e51b3004 	ldr	r3, [fp, #-4]
c0009808:	e593300c 	ldr	r3, [r3, #12]
c000980c:	e51b2008 	ldr	r2, [fp, #-8]
c0009810:	e1a02082 	lsl	r2, r2, #1
c0009814:	e3a01003 	mov	r1, #3
c0009818:	e1a02211 	lsl	r2, r1, r2
c000981c:	e1e02002 	mvn	r2, r2
c0009820:	e0022003 	and	r2, r2, r3
c0009824:	e51b3004 	ldr	r3, [fp, #-4]
c0009828:	e583200c 	str	r2, [r3, #12]
	gpiox->PUPDR |= (init->pupdr << 2*pin);
c000982c:	e51b3004 	ldr	r3, [fp, #-4]
c0009830:	e593200c 	ldr	r2, [r3, #12]
c0009834:	e51b300c 	ldr	r3, [fp, #-12]
c0009838:	e593100c 	ldr	r1, [r3, #12]
c000983c:	e51b3008 	ldr	r3, [fp, #-8]
c0009840:	e1a03083 	lsl	r3, r3, #1
c0009844:	e1a03311 	lsl	r3, r1, r3
c0009848:	e1822003 	orr	r2, r2, r3
c000984c:	e51b3004 	ldr	r3, [fp, #-4]
c0009850:	e583200c 	str	r2, [r3, #12]

}
c0009854:	e320f000 	nop	{0}
c0009858:	e28bd000 	add	sp, fp, #0
c000985c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c0009860:	e12fff1e 	bx	lr

c0009864 <hal_gpio_write>:




void hal_gpio_write(gpio_t * gpiox,unsigned int pin,gpio_odr_t status)
{
c0009864:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c0009868:	e28db000 	add	fp, sp, #0
c000986c:	e24dd00c 	sub	sp, sp, #12
c0009870:	e50b0004 	str	r0, [fp, #-4]
c0009874:	e50b1008 	str	r1, [fp, #-8]
c0009878:	e50b200c 	str	r2, [fp, #-12]

	if(status == GPIO_SET_T)
c000987c:	e51b300c 	ldr	r3, [fp, #-12]
c0009880:	e3530001 	cmp	r3, #1
c0009884:	1a000008 	bne	c00098ac <hal_gpio_write+0x48>
	{
		gpiox->ODR |= (0x1<<pin);
c0009888:	e51b3004 	ldr	r3, [fp, #-4]
c000988c:	e5933014 	ldr	r3, [r3, #20]
c0009890:	e3a01001 	mov	r1, #1
c0009894:	e51b2008 	ldr	r2, [fp, #-8]
c0009898:	e1a02211 	lsl	r2, r1, r2
c000989c:	e1832002 	orr	r2, r3, r2
c00098a0:	e51b3004 	ldr	r3, [fp, #-4]
c00098a4:	e5832014 	str	r2, [r3, #20]
	} else if(status == GPIO_RESET_T)
	{
		gpiox->ODR &= (~(0x1<<pin));
	}
}
c00098a8:	ea00000b 	b	c00098dc <hal_gpio_write+0x78>
	} else if(status == GPIO_RESET_T)
c00098ac:	e51b300c 	ldr	r3, [fp, #-12]
c00098b0:	e3530000 	cmp	r3, #0
c00098b4:	1a000008 	bne	c00098dc <hal_gpio_write+0x78>
		gpiox->ODR &= (~(0x1<<pin));
c00098b8:	e51b3004 	ldr	r3, [fp, #-4]
c00098bc:	e5933014 	ldr	r3, [r3, #20]
c00098c0:	e3a01001 	mov	r1, #1
c00098c4:	e51b2008 	ldr	r2, [fp, #-8]
c00098c8:	e1a02211 	lsl	r2, r1, r2
c00098cc:	e1e02002 	mvn	r2, r2
c00098d0:	e0022003 	and	r2, r2, r3
c00098d4:	e51b3004 	ldr	r3, [fp, #-4]
c00098d8:	e5832014 	str	r2, [r3, #20]
}
c00098dc:	e320f000 	nop	{0}
c00098e0:	e28bd000 	add	sp, fp, #0
c00098e4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c00098e8:	e12fff1e 	bx	lr

c00098ec <mystrcmp>:


int mystrcmp(const char *dest,const char* src)
{
c00098ec:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c00098f0:	e28db000 	add	fp, sp, #0
c00098f4:	e24dd00c 	sub	sp, sp, #12
c00098f8:	e50b0008 	str	r0, [fp, #-8]
c00098fc:	e50b100c 	str	r1, [fp, #-12]
	if (sizeof(dest)!=sizeof(sizeof(src)))
	{
		return 0;
	}
	int i=0;
c0009900:	e3a03000 	mov	r3, #0
c0009904:	e50b3004 	str	r3, [fp, #-4]
	while (src[i]!='\0' && dest[i]!='\0')
c0009908:	ea00000e 	b	c0009948 <mystrcmp+0x5c>
	{
		if(src[i]!=dest[i])
c000990c:	e51b3004 	ldr	r3, [fp, #-4]
c0009910:	e51b200c 	ldr	r2, [fp, #-12]
c0009914:	e0823003 	add	r3, r2, r3
c0009918:	e5d32000 	ldrb	r2, [r3]
c000991c:	e51b3004 	ldr	r3, [fp, #-4]
c0009920:	e51b1008 	ldr	r1, [fp, #-8]
c0009924:	e0813003 	add	r3, r1, r3
c0009928:	e5d33000 	ldrb	r3, [r3]
c000992c:	e1520003 	cmp	r2, r3
c0009930:	0a000001 	beq	c000993c <mystrcmp+0x50>
		{
			return 0;
c0009934:	e3a03000 	mov	r3, #0
c0009938:	ea00000f 	b	c000997c <mystrcmp+0x90>
		}
		i++;
c000993c:	e51b3004 	ldr	r3, [fp, #-4]
c0009940:	e2833001 	add	r3, r3, #1
c0009944:	e50b3004 	str	r3, [fp, #-4]
	while (src[i]!='\0' && dest[i]!='\0')
c0009948:	e51b3004 	ldr	r3, [fp, #-4]
c000994c:	e51b200c 	ldr	r2, [fp, #-12]
c0009950:	e0823003 	add	r3, r2, r3
c0009954:	e5d33000 	ldrb	r3, [r3]
c0009958:	e3530000 	cmp	r3, #0
c000995c:	0a000005 	beq	c0009978 <mystrcmp+0x8c>
c0009960:	e51b3004 	ldr	r3, [fp, #-4]
c0009964:	e51b2008 	ldr	r2, [fp, #-8]
c0009968:	e0823003 	add	r3, r2, r3
c000996c:	e5d33000 	ldrb	r3, [r3]
c0009970:	e3530000 	cmp	r3, #0
c0009974:	1affffe4 	bne	c000990c <mystrcmp+0x20>
	}
	
		
	
	return 1;
c0009978:	e3a03001 	mov	r3, #1
}
c000997c:	e1a00003 	mov	r0, r3
c0009980:	e28bd000 	add	sp, fp, #0
c0009984:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c0009988:	e12fff1e 	bx	lr

c000998c <hal_uart4_init>:
extern char buff[50];


void delay_ms(int ms);
void hal_uart4_init()
{
c000998c:	e92d4800 	push	{fp, lr}
c0009990:	e28db004 	add	fp, sp, #4
	/******RCC init**************/
	//GPIOB GPIOG
	RCC->MP_AHB4ENSETR |= (0x1<<1 | 0x1<<6);
c0009994:	e3a03205 	mov	r3, #1342177280	; 0x50000000
c0009998:	e5933a28 	ldr	r3, [r3, #2600]	; 0xa28
c000999c:	e3a02205 	mov	r2, #1342177280	; 0x50000000
c00099a0:	e3833042 	orr	r3, r3, #66	; 0x42
c00099a4:	e5823a28 	str	r3, [r2, #2600]	; 0xa28
	//UART
	RCC->MP_APB1ENSETR |= (0x1<<16);
c00099a8:	e3a03205 	mov	r3, #1342177280	; 0x50000000
c00099ac:	e5933a00 	ldr	r3, [r3, #2560]	; 0xa00
c00099b0:	e3a02205 	mov	r2, #1342177280	; 0x50000000
c00099b4:	e3833801 	orr	r3, r3, #65536	; 0x10000
c00099b8:	e5823a00 	str	r3, [r2, #2560]	; 0xa00
	/********GPIO init***********/
	//PB2----> UART4_RX
	GPIOB->MODER &= (~(0b11<<4));
c00099bc:	e3a03a03 	mov	r3, #12288	; 0x3000
c00099c0:	e3453000 	movt	r3, #20480	; 0x5000
c00099c4:	e5932000 	ldr	r2, [r3]
c00099c8:	e3a03a03 	mov	r3, #12288	; 0x3000
c00099cc:	e3453000 	movt	r3, #20480	; 0x5000
c00099d0:	e3c22030 	bic	r2, r2, #48	; 0x30
c00099d4:	e5832000 	str	r2, [r3]
	GPIOB->MODER |= (0b10<<4);
c00099d8:	e3a03a03 	mov	r3, #12288	; 0x3000
c00099dc:	e3453000 	movt	r3, #20480	; 0x5000
c00099e0:	e5932000 	ldr	r2, [r3]
c00099e4:	e3a03a03 	mov	r3, #12288	; 0x3000
c00099e8:	e3453000 	movt	r3, #20480	; 0x5000
c00099ec:	e3822020 	orr	r2, r2, #32
c00099f0:	e5832000 	str	r2, [r3]
	GPIOB->AFRL &= (~(0b1111<<8));
c00099f4:	e3a03a03 	mov	r3, #12288	; 0x3000
c00099f8:	e3453000 	movt	r3, #20480	; 0x5000
c00099fc:	e5932020 	ldr	r2, [r3, #32]
c0009a00:	e3a03a03 	mov	r3, #12288	; 0x3000
c0009a04:	e3453000 	movt	r3, #20480	; 0x5000
c0009a08:	e3c22c0f 	bic	r2, r2, #3840	; 0xf00
c0009a0c:	e5832020 	str	r2, [r3, #32]
	GPIOB->AFRL |= (0b1000<<8);
c0009a10:	e3a03a03 	mov	r3, #12288	; 0x3000
c0009a14:	e3453000 	movt	r3, #20480	; 0x5000
c0009a18:	e5932020 	ldr	r2, [r3, #32]
c0009a1c:	e3a03a03 	mov	r3, #12288	; 0x3000
c0009a20:	e3453000 	movt	r3, #20480	; 0x5000
c0009a24:	e3822b02 	orr	r2, r2, #2048	; 0x800
c0009a28:	e5832020 	str	r2, [r3, #32]
	//PG11---->UART4_TX
	GPIOG->MODER &= (~(0b11<<22));
c0009a2c:	e3a03902 	mov	r3, #32768	; 0x8000
c0009a30:	e3453000 	movt	r3, #20480	; 0x5000
c0009a34:	e5932000 	ldr	r2, [r3]
c0009a38:	e3a03902 	mov	r3, #32768	; 0x8000
c0009a3c:	e3453000 	movt	r3, #20480	; 0x5000
c0009a40:	e3c22503 	bic	r2, r2, #12582912	; 0xc00000
c0009a44:	e5832000 	str	r2, [r3]
	GPIOG->MODER |= (0b10<<22);
c0009a48:	e3a03902 	mov	r3, #32768	; 0x8000
c0009a4c:	e3453000 	movt	r3, #20480	; 0x5000
c0009a50:	e5932000 	ldr	r2, [r3]
c0009a54:	e3a03902 	mov	r3, #32768	; 0x8000
c0009a58:	e3453000 	movt	r3, #20480	; 0x5000
c0009a5c:	e3822502 	orr	r2, r2, #8388608	; 0x800000
c0009a60:	e5832000 	str	r2, [r3]
	GPIOG->AFRH &= (~(0b1111<<12));
c0009a64:	e3a03902 	mov	r3, #32768	; 0x8000
c0009a68:	e3453000 	movt	r3, #20480	; 0x5000
c0009a6c:	e5932024 	ldr	r2, [r3, #36]	; 0x24
c0009a70:	e3a03902 	mov	r3, #32768	; 0x8000
c0009a74:	e3453000 	movt	r3, #20480	; 0x5000
c0009a78:	e3c22a0f 	bic	r2, r2, #61440	; 0xf000
c0009a7c:	e5832024 	str	r2, [r3, #36]	; 0x24
	GPIOG->AFRH |= (0b0110<<12);
c0009a80:	e3a03902 	mov	r3, #32768	; 0x8000
c0009a84:	e3453000 	movt	r3, #20480	; 0x5000
c0009a88:	e5932024 	ldr	r2, [r3, #36]	; 0x24
c0009a8c:	e3a03902 	mov	r3, #32768	; 0x8000
c0009a90:	e3453000 	movt	r3, #20480	; 0x5000
c0009a94:	e3822a06 	orr	r2, r2, #24576	; 0x6000
c0009a98:	e5832024 	str	r2, [r3, #36]	; 0x24
	/********UART init***********/
	//加上条件判断
	if(USART4->CR1 & (0x1 << 0))
c0009a9c:	e3a03000 	mov	r3, #0
c0009aa0:	e3443001 	movt	r3, #16385	; 0x4001
c0009aa4:	e5933000 	ldr	r3, [r3]
c0009aa8:	e2033001 	and	r3, r3, #1
c0009aac:	e3530000 	cmp	r3, #0
c0009ab0:	0a000008 	beq	c0009ad8 <hal_uart4_init+0x14c>
	{
	 	delay_ms(500);
c0009ab4:	e3a00f7d 	mov	r0, #500	; 0x1f4
c0009ab8:	eb00009b 	bl	c0009d2c <delay_ms>
		USART4->CR1 &= (~(0x1 << 0));
c0009abc:	e3a03000 	mov	r3, #0
c0009ac0:	e3443001 	movt	r3, #16385	; 0x4001
c0009ac4:	e5932000 	ldr	r2, [r3]
c0009ac8:	e3a03000 	mov	r3, #0
c0009acc:	e3443001 	movt	r3, #16385	; 0x4001
c0009ad0:	e3c22001 	bic	r2, r2, #1
c0009ad4:	e5832000 	str	r2, [r3]
	}

	//M bit init(M1 M0) , sampling 16(OVER8), no even odd parity(PCE)
	USART4->CR1 &= (~(0x1<<28 | 0x1<<12 | 0x1<<15 | 0x1<<10));
c0009ad8:	e3a03000 	mov	r3, #0
c0009adc:	e3443001 	movt	r3, #16385	; 0x4001
c0009ae0:	e5933000 	ldr	r3, [r3]
c0009ae4:	e3a02000 	mov	r2, #0
c0009ae8:	e3442001 	movt	r2, #16385	; 0x4001
c0009aec:	e3c33201 	bic	r3, r3, #268435456	; 0x10000000
c0009af0:	e3c33b25 	bic	r3, r3, #37888	; 0x9400
c0009af4:	e5823000 	str	r3, [r2]
	//TE RE UE
	USART4->CR1 |= (0x1<<3 | 0x1<<2 | 0x1<<0);
c0009af8:	e3a03000 	mov	r3, #0
c0009afc:	e3443001 	movt	r3, #16385	; 0x4001
c0009b00:	e5932000 	ldr	r2, [r3]
c0009b04:	e3a03000 	mov	r3, #0
c0009b08:	e3443001 	movt	r3, #16385	; 0x4001
c0009b0c:	e382200d 	orr	r2, r2, #13
c0009b10:	e5832000 	str	r2, [r3]
	//1 stop bit
	USART4->CR2 &= (~(0b11<<12));
c0009b14:	e3a03000 	mov	r3, #0
c0009b18:	e3443001 	movt	r3, #16385	; 0x4001
c0009b1c:	e5932004 	ldr	r2, [r3, #4]
c0009b20:	e3a03000 	mov	r3, #0
c0009b24:	e3443001 	movt	r3, #16385	; 0x4001
c0009b28:	e3c22a03 	bic	r2, r2, #12288	; 0x3000
c0009b2c:	e5832004 	str	r2, [r3, #4]
	//BRR= 64MHz/115200 = 0x22B
	USART4->BRR |=  0x22B;
c0009b30:	e3a03000 	mov	r3, #0
c0009b34:	e3443001 	movt	r3, #16385	; 0x4001
c0009b38:	e593300c 	ldr	r3, [r3, #12]
c0009b3c:	e3a02000 	mov	r2, #0
c0009b40:	e3442001 	movt	r2, #16385	; 0x4001
c0009b44:	e3833f8a 	orr	r3, r3, #552	; 0x228
c0009b48:	e3833003 	orr	r3, r3, #3
c0009b4c:	e582300c 	str	r3, [r2, #12]
	//no prescaling
	USART4->PRESC &= 0b0000;
c0009b50:	e3a03000 	mov	r3, #0
c0009b54:	e3443001 	movt	r3, #16385	; 0x4001
c0009b58:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
c0009b5c:	e3a03000 	mov	r3, #0
c0009b60:	e3443001 	movt	r3, #16385	; 0x4001
c0009b64:	e3a02000 	mov	r2, #0
c0009b68:	e583202c 	str	r2, [r3, #44]	; 0x2c
}
c0009b6c:	e320f000 	nop	{0}
c0009b70:	e8bd8800 	pop	{fp, pc}

c0009b74 <put_char>:

//send a char
void put_char(const char str)
{
c0009b74:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c0009b78:	e28db000 	add	fp, sp, #0
c0009b7c:	e24dd004 	sub	sp, sp, #4
c0009b80:	e1a03000 	mov	r3, r0
c0009b84:	e54b3004 	strb	r3, [fp, #-4]
	//judge if the TXE==>UART_ISR[7]   is 1,if it's 1,then the next byte could be sent
	//1:empty  0:not empty
	while(!(USART4->ISR & (0x1<<7)));
c0009b88:	e320f000 	nop	{0}
c0009b8c:	e3a03000 	mov	r3, #0
c0009b90:	e3443001 	movt	r3, #16385	; 0x4001
c0009b94:	e593301c 	ldr	r3, [r3, #28]
c0009b98:	e2033080 	and	r3, r3, #128	; 0x80
c0009b9c:	e3530000 	cmp	r3, #0
c0009ba0:	0afffff9 	beq	c0009b8c <put_char+0x18>
	USART4->TDR = str;
c0009ba4:	e3a03000 	mov	r3, #0
c0009ba8:	e3443001 	movt	r3, #16385	; 0x4001
c0009bac:	e55b2004 	ldrb	r2, [fp, #-4]
c0009bb0:	e5832028 	str	r2, [r3, #40]	; 0x28
	//judge if sending is finished     0 not finshed 1 finshed
	while (!(USART4->ISR & (0x1<<6)));
c0009bb4:	e320f000 	nop	{0}
c0009bb8:	e3a03000 	mov	r3, #0
c0009bbc:	e3443001 	movt	r3, #16385	; 0x4001
c0009bc0:	e593301c 	ldr	r3, [r3, #28]
c0009bc4:	e2033040 	and	r3, r3, #64	; 0x40
c0009bc8:	e3530000 	cmp	r3, #0
c0009bcc:	0afffff9 	beq	c0009bb8 <put_char+0x44>
}
c0009bd0:	e320f000 	nop	{0}
c0009bd4:	e28bd000 	add	sp, fp, #0
c0009bd8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c0009bdc:	e12fff1e 	bx	lr

c0009be0 <put_string>:


//send a string 
void put_string(const char* string)
{
c0009be0:	e92d4800 	push	{fp, lr}
c0009be4:	e28db004 	add	fp, sp, #4
c0009be8:	e24dd004 	sub	sp, sp, #4
c0009bec:	e50b0008 	str	r0, [fp, #-8]
	{
		put_char(*p);
		p++;
	}
	*/
	while (*string)
c0009bf0:	ea000005 	b	c0009c0c <put_string+0x2c>
	{
		put_char(*string++);
c0009bf4:	e51b3008 	ldr	r3, [fp, #-8]
c0009bf8:	e2832001 	add	r2, r3, #1
c0009bfc:	e50b2008 	str	r2, [fp, #-8]
c0009c00:	e5d33000 	ldrb	r3, [r3]
c0009c04:	e1a00003 	mov	r0, r3
c0009c08:	ebffffd9 	bl	c0009b74 <put_char>
	while (*string)
c0009c0c:	e51b3008 	ldr	r3, [fp, #-8]
c0009c10:	e5d33000 	ldrb	r3, [r3]
c0009c14:	e3530000 	cmp	r3, #0
c0009c18:	1afffff5 	bne	c0009bf4 <put_string+0x14>
	}
	
	
}
c0009c1c:	e320f000 	nop	{0}
c0009c20:	e24bd004 	sub	sp, fp, #4
c0009c24:	e8bd8800 	pop	{fp, pc}

c0009c28 <get_char>:


//recv a char 
char get_char()
{
c0009c28:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c0009c2c:	e28db000 	add	fp, sp, #0
c0009c30:	e24dd004 	sub	sp, sp, #4
	char ret;
	//1. judge if RXNE is 1,data received,0 data not received
	while (!(USART4->ISR & (0x1<<5)));
c0009c34:	e320f000 	nop	{0}
c0009c38:	e3a03000 	mov	r3, #0
c0009c3c:	e3443001 	movt	r3, #16385	; 0x4001
c0009c40:	e593301c 	ldr	r3, [r3, #28]
c0009c44:	e2033020 	and	r3, r3, #32
c0009c48:	e3530000 	cmp	r3, #0
c0009c4c:	0afffff9 	beq	c0009c38 <get_char+0x10>
	//call put_char
	ret = USART4->RDR;
c0009c50:	e3a03000 	mov	r3, #0
c0009c54:	e3443001 	movt	r3, #16385	; 0x4001
c0009c58:	e5933024 	ldr	r3, [r3, #36]	; 0x24
c0009c5c:	e54b3001 	strb	r3, [fp, #-1]
	return ret;
c0009c60:	e55b3001 	ldrb	r3, [fp, #-1]
}
c0009c64:	e1a00003 	mov	r0, r3
c0009c68:	e28bd000 	add	sp, fp, #0
c0009c6c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c0009c70:	e12fff1e 	bx	lr

c0009c74 <get_string>:


//recv a string 
char* get_string()
{
c0009c74:	e92d4800 	push	{fp, lr}
c0009c78:	e28db004 	add	fp, sp, #4
c0009c7c:	e24dd004 	sub	sp, sp, #4
	int i;
	for(i = 0; i < 49;i++)
c0009c80:	e3a03000 	mov	r3, #0
c0009c84:	e50b3008 	str	r3, [fp, #-8]
c0009c88:	ea000019 	b	c0009cf4 <get_string+0x80>
	{
		// receive a char
		buff[i] = get_char();
c0009c8c:	ebffffe5 	bl	c0009c28 <get_char>
c0009c90:	e1a03000 	mov	r3, r0
c0009c94:	e1a01003 	mov	r1, r3
c0009c98:	e30a3990 	movw	r3, #43408	; 0xa990
c0009c9c:	e34c3000 	movt	r3, #49152	; 0xc000
c0009ca0:	e51b2008 	ldr	r2, [fp, #-8]
c0009ca4:	e0833002 	add	r3, r3, r2
c0009ca8:	e1a02001 	mov	r2, r1
c0009cac:	e5c32000 	strb	r2, [r3]
		// display the char 
		put_char(buff[i]);
c0009cb0:	e30a3990 	movw	r3, #43408	; 0xa990
c0009cb4:	e34c3000 	movt	r3, #49152	; 0xc000
c0009cb8:	e51b2008 	ldr	r2, [fp, #-8]
c0009cbc:	e0833002 	add	r3, r3, r2
c0009cc0:	e5d33000 	ldrb	r3, [r3]
c0009cc4:	e1a00003 	mov	r0, r3
c0009cc8:	ebffffa9 	bl	c0009b74 <put_char>
		if ('\r'==buff[i])
c0009ccc:	e30a3990 	movw	r3, #43408	; 0xa990
c0009cd0:	e34c3000 	movt	r3, #49152	; 0xc000
c0009cd4:	e51b2008 	ldr	r2, [fp, #-8]
c0009cd8:	e0833002 	add	r3, r3, r2
c0009cdc:	e5d33000 	ldrb	r3, [r3]
c0009ce0:	e353000d 	cmp	r3, #13
c0009ce4:	0a000006 	beq	c0009d04 <get_string+0x90>
	for(i = 0; i < 49;i++)
c0009ce8:	e51b3008 	ldr	r3, [fp, #-8]
c0009cec:	e2833001 	add	r3, r3, #1
c0009cf0:	e50b3008 	str	r3, [fp, #-8]
c0009cf4:	e51b3008 	ldr	r3, [fp, #-8]
c0009cf8:	e3530030 	cmp	r3, #48	; 0x30
c0009cfc:	daffffe2 	ble	c0009c8c <get_string+0x18>
c0009d00:	ea000000 	b	c0009d08 <get_string+0x94>
		{
			break;
c0009d04:	e320f000 	nop	{0}
		}
	}
	put_char('\0');
c0009d08:	e3a00000 	mov	r0, #0
c0009d0c:	ebffff98 	bl	c0009b74 <put_char>
	put_char('\n');
c0009d10:	e3a0000a 	mov	r0, #10
c0009d14:	ebffff96 	bl	c0009b74 <put_char>
	return buff;
c0009d18:	e30a3990 	movw	r3, #43408	; 0xa990
c0009d1c:	e34c3000 	movt	r3, #49152	; 0xc000
}
c0009d20:	e1a00003 	mov	r0, r3
c0009d24:	e24bd004 	sub	sp, fp, #4
c0009d28:	e8bd8800 	pop	{fp, pc}

c0009d2c <delay_ms>:
#include "./include/uart4.h"
extern void printf(const char *fmt, ...);
char buff[50]={0};

void delay_ms(int ms)
{
c0009d2c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c0009d30:	e28db000 	add	fp, sp, #0
c0009d34:	e24dd00c 	sub	sp, sp, #12
c0009d38:	e50b000c 	str	r0, [fp, #-12]
	int i,j;
	for(i = 0; i < ms;i++)
c0009d3c:	e3a03000 	mov	r3, #0
c0009d40:	e50b3004 	str	r3, [fp, #-4]
c0009d44:	ea00000c 	b	c0009d7c <delay_ms+0x50>
		for (j = 0; j < 1800; j++);
c0009d48:	e3a03000 	mov	r3, #0
c0009d4c:	e50b3008 	str	r3, [fp, #-8]
c0009d50:	ea000002 	b	c0009d60 <delay_ms+0x34>
c0009d54:	e51b3008 	ldr	r3, [fp, #-8]
c0009d58:	e2833001 	add	r3, r3, #1
c0009d5c:	e50b3008 	str	r3, [fp, #-8]
c0009d60:	e51b3008 	ldr	r3, [fp, #-8]
c0009d64:	e3002707 	movw	r2, #1799	; 0x707
c0009d68:	e1530002 	cmp	r3, r2
c0009d6c:	dafffff8 	ble	c0009d54 <delay_ms+0x28>
	for(i = 0; i < ms;i++)
c0009d70:	e51b3004 	ldr	r3, [fp, #-4]
c0009d74:	e2833001 	add	r3, r3, #1
c0009d78:	e50b3004 	str	r3, [fp, #-4]
c0009d7c:	e51b2004 	ldr	r2, [fp, #-4]
c0009d80:	e51b300c 	ldr	r3, [fp, #-12]
c0009d84:	e1520003 	cmp	r2, r3
c0009d88:	baffffee 	blt	c0009d48 <delay_ms+0x1c>
}
c0009d8c:	e320f000 	nop	{0}
c0009d90:	e28bd000 	add	sp, fp, #0
c0009d94:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c0009d98:	e12fff1e 	bx	lr

c0009d9c <led_init>:



void led_init()
{
c0009d9c:	e92d4800 	push	{fp, lr}
c0009da0:	e28db004 	add	fp, sp, #4
c0009da4:	e24dd010 	sub	sp, sp, #16
	RCC->MP_AHB4ENSETR |= (0x3<<4);
c0009da8:	e3a03205 	mov	r3, #1342177280	; 0x50000000
c0009dac:	e5933a28 	ldr	r3, [r3, #2600]	; 0xa28
c0009db0:	e3a02205 	mov	r2, #1342177280	; 0x50000000
c0009db4:	e3833030 	orr	r3, r3, #48	; 0x30
c0009db8:	e5823a28 	str	r3, [r2, #2600]	; 0xa28
	gpio_init_t init = {OUTPUT,PP,LOW,NO_PUPD};
c0009dbc:	e3a03001 	mov	r3, #1
c0009dc0:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
c0009dc4:	e3a03000 	mov	r3, #0
c0009dc8:	e50b3010 	str	r3, [fp, #-16]
c0009dcc:	e3a03000 	mov	r3, #0
c0009dd0:	e50b300c 	str	r3, [fp, #-12]
c0009dd4:	e3a03000 	mov	r3, #0
c0009dd8:	e50b3008 	str	r3, [fp, #-8]
	hal_gpio_init(GPIOE,GPIO_PIN_10,&init);
c0009ddc:	e24b3014 	sub	r3, fp, #20
c0009de0:	e1a02003 	mov	r2, r3
c0009de4:	e3a0100a 	mov	r1, #10
c0009de8:	e3a00a06 	mov	r0, #24576	; 0x6000
c0009dec:	e3450000 	movt	r0, #20480	; 0x5000
c0009df0:	ebfffe44 	bl	c0009708 <hal_gpio_init>
	hal_gpio_init(GPIOE,GPIO_PIN_8,&init);
c0009df4:	e24b3014 	sub	r3, fp, #20
c0009df8:	e1a02003 	mov	r2, r3
c0009dfc:	e3a01008 	mov	r1, #8
c0009e00:	e3a00a06 	mov	r0, #24576	; 0x6000
c0009e04:	e3450000 	movt	r0, #20480	; 0x5000
c0009e08:	ebfffe3e 	bl	c0009708 <hal_gpio_init>
	hal_gpio_init(GPIOF,GPIO_PIN_10,&init);
c0009e0c:	e24b3014 	sub	r3, fp, #20
c0009e10:	e1a02003 	mov	r2, r3
c0009e14:	e3a0100a 	mov	r1, #10
c0009e18:	e3a00a07 	mov	r0, #28672	; 0x7000
c0009e1c:	e3450000 	movt	r0, #20480	; 0x5000
c0009e20:	ebfffe38 	bl	c0009708 <hal_gpio_init>
	

}
c0009e24:	e320f000 	nop	{0}
c0009e28:	e24bd004 	sub	sp, fp, #4
c0009e2c:	e8bd8800 	pop	{fp, pc}

c0009e30 <main>:
				.gpio_write  =  hal_gpio_write, 
		}
};
char *cmpbuf;
int main()
{
c0009e30:	e92d4800 	push	{fp, lr}
c0009e34:	e28db004 	add	fp, sp, #4
c0009e38:	e24dd008 	sub	sp, sp, #8
	led_init();
c0009e3c:	ebffffd6 	bl	c0009d9c <led_init>
	hal_uart4_init();
c0009e40:	ebfffed1 	bl	c000998c <hal_uart4_init>
				delay_ms(200);
				arr[i].gpio_write(arr[i].gpiox,arr[i].pin,arr[i].status);
			
		}
		*/
		char *cmpbuf = get_string();
c0009e44:	ebffff8a 	bl	c0009c74 <get_string>
c0009e48:	e50b000c 	str	r0, [fp, #-12]
		printf(cmpbuf);
c0009e4c:	e51b000c 	ldr	r0, [fp, #-12]
c0009e50:	ebfffd5c 	bl	c00093c8 <printf>
		for (int i = 0; i <= 5; i++)
c0009e54:	e3a03000 	mov	r3, #0
c0009e58:	e50b3008 	str	r3, [fp, #-8]
c0009e5c:	ea000040 	b	c0009f64 <main+0x134>
		{
			if (mystrcmp(cmpbuf,arr[i].cmd_arr))
c0009e60:	e30a2914 	movw	r2, #43284	; 0xa914
c0009e64:	e34c2000 	movt	r2, #49152	; 0xc000
c0009e68:	e51b1008 	ldr	r1, [fp, #-8]
c0009e6c:	e1a03001 	mov	r3, r1
c0009e70:	e1a03103 	lsl	r3, r3, #2
c0009e74:	e0833001 	add	r3, r3, r1
c0009e78:	e1a03103 	lsl	r3, r3, #2
c0009e7c:	e0823003 	add	r3, r2, r3
c0009e80:	e5933000 	ldr	r3, [r3]
c0009e84:	e1a01003 	mov	r1, r3
c0009e88:	e51b000c 	ldr	r0, [fp, #-12]
c0009e8c:	ebfffe96 	bl	c00098ec <mystrcmp>
c0009e90:	e1a03000 	mov	r3, r0
c0009e94:	e3530000 	cmp	r3, #0
c0009e98:	0a00002b 	beq	c0009f4c <main+0x11c>
			{
				arr[i].gpio_write(arr[i].gpiox,arr[i].pin,arr[i].status);
c0009e9c:	e30a2914 	movw	r2, #43284	; 0xa914
c0009ea0:	e34c2000 	movt	r2, #49152	; 0xc000
c0009ea4:	e51b1008 	ldr	r1, [fp, #-8]
c0009ea8:	e1a03001 	mov	r3, r1
c0009eac:	e1a03103 	lsl	r3, r3, #2
c0009eb0:	e0833001 	add	r3, r3, r1
c0009eb4:	e1a03103 	lsl	r3, r3, #2
c0009eb8:	e0823003 	add	r3, r2, r3
c0009ebc:	e2833010 	add	r3, r3, #16
c0009ec0:	e593c000 	ldr	ip, [r3]
c0009ec4:	e30a2914 	movw	r2, #43284	; 0xa914
c0009ec8:	e34c2000 	movt	r2, #49152	; 0xc000
c0009ecc:	e51b1008 	ldr	r1, [fp, #-8]
c0009ed0:	e1a03001 	mov	r3, r1
c0009ed4:	e1a03103 	lsl	r3, r3, #2
c0009ed8:	e0833001 	add	r3, r3, r1
c0009edc:	e1a03103 	lsl	r3, r3, #2
c0009ee0:	e0823003 	add	r3, r2, r3
c0009ee4:	e2833004 	add	r3, r3, #4
c0009ee8:	e5930000 	ldr	r0, [r3]
c0009eec:	e30a2914 	movw	r2, #43284	; 0xa914
c0009ef0:	e34c2000 	movt	r2, #49152	; 0xc000
c0009ef4:	e51b1008 	ldr	r1, [fp, #-8]
c0009ef8:	e1a03001 	mov	r3, r1
c0009efc:	e1a03103 	lsl	r3, r3, #2
c0009f00:	e0833001 	add	r3, r3, r1
c0009f04:	e1a03103 	lsl	r3, r3, #2
c0009f08:	e0823003 	add	r3, r2, r3
c0009f0c:	e2833008 	add	r3, r3, #8
c0009f10:	e593e000 	ldr	lr, [r3]
c0009f14:	e30a2914 	movw	r2, #43284	; 0xa914
c0009f18:	e34c2000 	movt	r2, #49152	; 0xc000
c0009f1c:	e51b1008 	ldr	r1, [fp, #-8]
c0009f20:	e1a03001 	mov	r3, r1
c0009f24:	e1a03103 	lsl	r3, r3, #2
c0009f28:	e0833001 	add	r3, r3, r1
c0009f2c:	e1a03103 	lsl	r3, r3, #2
c0009f30:	e0823003 	add	r3, r2, r3
c0009f34:	e283300c 	add	r3, r3, #12
c0009f38:	e5933000 	ldr	r3, [r3]
c0009f3c:	e1a02003 	mov	r2, r3
c0009f40:	e1a0100e 	mov	r1, lr
c0009f44:	e12fff3c 	blx	ip
c0009f48:	ea000002 	b	c0009f58 <main+0x128>
			} else
			{
				printf("not matched*******\n\r");
c0009f4c:	e3090ffc 	movw	r0, #40956	; 0x9ffc
c0009f50:	e34c0000 	movt	r0, #49152	; 0xc000
c0009f54:	ebfffd1b 	bl	c00093c8 <printf>
		for (int i = 0; i <= 5; i++)
c0009f58:	e51b3008 	ldr	r3, [fp, #-8]
c0009f5c:	e2833001 	add	r3, r3, #1
c0009f60:	e50b3008 	str	r3, [fp, #-8]
c0009f64:	e51b3008 	ldr	r3, [fp, #-8]
c0009f68:	e3530005 	cmp	r3, #5
c0009f6c:	daffffbb 	ble	c0009e60 <main+0x30>
	{
c0009f70:	eaffffb3 	b	c0009e44 <main+0x14>

Disassembly of section .rodata:

c0009f74 <.LC0>:
c0009f74:	33323130 	teqcc	r2, #48, 2
c0009f78:	37363534 			; <UNDEFINED> instruction: 0x37363534
c0009f7c:	62613938 	rsbvs	r3, r1, #56, 18	; 0xe0000
c0009f80:	66656463 	strbtvs	r6, [r5], -r3, ror #8
c0009f84:	6a696867 	bvs	c1a64128 <__bss_end__+0x1a59760>
c0009f88:	6e6d6c6b 	cdpvs	12, 6, cr6, cr13, cr11, {3}
c0009f8c:	7271706f 	rsbsvc	r7, r1, #111	; 0x6f
c0009f90:	76757473 			; <UNDEFINED> instruction: 0x76757473
c0009f94:	7a797877 	bvc	c1e68178 <__bss_end__+0x1e5d7b0>
c0009f98:	00000000 	andeq	r0, r0, r0

c0009f9c <.LC1>:
c0009f9c:	33323130 	teqcc	r2, #48, 2
c0009fa0:	37363534 			; <UNDEFINED> instruction: 0x37363534
c0009fa4:	42413938 	submi	r3, r1, #56, 18	; 0xe0000
c0009fa8:	46454443 	strbmi	r4, [r5], -r3, asr #8
c0009fac:	4a494847 	bmi	c125c0d0 <__bss_end__+0x1251708>
c0009fb0:	4e4d4c4b 	cdpmi	12, 4, cr4, cr13, cr11, {2}
c0009fb4:	5251504f 	subspl	r5, r1, #79	; 0x4f
c0009fb8:	56555453 			; <UNDEFINED> instruction: 0x56555453
c0009fbc:	5a595857 	bpl	c1660120 <__bss_end__+0x1655758>
c0009fc0:	00000000 	andeq	r0, r0, r0

c0009fc4 <.LC2>:
c0009fc4:	4c554e3c 	mrrcmi	14, 3, r4, r5, cr12
c0009fc8:	00003e4c 	andeq	r3, r0, ip, asr #28
c0009fcc:	3164656c 	cmncc	r4, ip, ror #10
c0009fd0:	00006e6f 	andeq	r6, r0, pc, ror #28
c0009fd4:	3164656c 	cmncc	r4, ip, ror #10
c0009fd8:	0066666f 	rsbeq	r6, r6, pc, ror #12
c0009fdc:	3264656c 	rsbcc	r6, r4, #108, 10	; 0x1b000000
c0009fe0:	00006e6f 	andeq	r6, r0, pc, ror #28
c0009fe4:	3264656c 	rsbcc	r6, r4, #108, 10	; 0x1b000000
c0009fe8:	0066666f 	rsbeq	r6, r6, pc, ror #12
c0009fec:	3364656c 	cmncc	r4, #108, 10	; 0x1b000000
c0009ff0:	00006e6f 	andeq	r6, r0, pc, ror #28
c0009ff4:	3364656c 	cmncc	r4, #108, 10	; 0x1b000000
c0009ff8:	0066666f 	rsbeq	r6, r6, pc, ror #12

c0009ffc <.LC6>:
c0009ffc:	20746f6e 	rsbscs	r6, r4, lr, ror #30
c000a000:	6374616d 	cmnvs	r4, #1073741851	; 0x4000001b
c000a004:	2a646568 	bcs	c19235ac <__bss_end__+0x1918be4>
c000a008:	2a2a2a2a 	bcs	c0a948b8 <__bss_end__+0xa89ef0>
c000a00c:	0d0a2a2a 	vstreq	s4, [sl, #-168]	; 0xffffff58
	...

Disassembly of section .data:

c000a014 <stack>:
	...

c000a814 <_ctype>:
c000a814:	08080808 	stmdaeq	r8, {r3, fp}
c000a818:	08080808 	stmdaeq	r8, {r3, fp}
c000a81c:	28282808 	stmdacs	r8!, {r3, fp, sp}
c000a820:	08082828 	stmdaeq	r8, {r3, r5, fp, sp}
c000a824:	08080808 	stmdaeq	r8, {r3, fp}
c000a828:	08080808 	stmdaeq	r8, {r3, fp}
c000a82c:	08080808 	stmdaeq	r8, {r3, fp}
c000a830:	08080808 	stmdaeq	r8, {r3, fp}
c000a834:	101010a0 	andsne	r1, r0, r0, lsr #1
c000a838:	10101010 	andsne	r1, r0, r0, lsl r0
c000a83c:	10101010 	andsne	r1, r0, r0, lsl r0
c000a840:	10101010 	andsne	r1, r0, r0, lsl r0
c000a844:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
c000a848:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
c000a84c:	10100404 	andsne	r0, r0, r4, lsl #8
c000a850:	10101010 	andsne	r1, r0, r0, lsl r0
c000a854:	41414110 	cmpmi	r1, r0, lsl r1
c000a858:	01414141 	cmpeq	r1, r1, asr #2
c000a85c:	01010101 	tsteq	r1, r1, lsl #2
c000a860:	01010101 	tsteq	r1, r1, lsl #2
c000a864:	01010101 	tsteq	r1, r1, lsl #2
c000a868:	01010101 	tsteq	r1, r1, lsl #2
c000a86c:	10010101 	andne	r0, r1, r1, lsl #2
c000a870:	10101010 	andsne	r1, r0, r0, lsl r0
c000a874:	42424210 	submi	r4, r2, #16, 4
c000a878:	02424242 	subeq	r4, r2, #536870916	; 0x20000004
c000a87c:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
c000a880:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
c000a884:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
c000a888:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
c000a88c:	10020202 	andne	r0, r2, r2, lsl #4
c000a890:	08101010 	ldmdaeq	r0, {r4, ip}
	...
c000a8b4:	101010a0 	andsne	r1, r0, r0, lsr #1
c000a8b8:	10101010 	andsne	r1, r0, r0, lsl r0
c000a8bc:	10101010 	andsne	r1, r0, r0, lsl r0
c000a8c0:	10101010 	andsne	r1, r0, r0, lsl r0
c000a8c4:	10101010 	andsne	r1, r0, r0, lsl r0
c000a8c8:	10101010 	andsne	r1, r0, r0, lsl r0
c000a8cc:	10101010 	andsne	r1, r0, r0, lsl r0
c000a8d0:	10101010 	andsne	r1, r0, r0, lsl r0
c000a8d4:	01010101 	tsteq	r1, r1, lsl #2
c000a8d8:	01010101 	tsteq	r1, r1, lsl #2
c000a8dc:	01010101 	tsteq	r1, r1, lsl #2
c000a8e0:	01010101 	tsteq	r1, r1, lsl #2
c000a8e4:	01010101 	tsteq	r1, r1, lsl #2
c000a8e8:	10010101 	andne	r0, r1, r1, lsl #2
c000a8ec:	01010101 	tsteq	r1, r1, lsl #2
c000a8f0:	02010101 	andeq	r0, r1, #1073741824	; 0x40000000
c000a8f4:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
c000a8f8:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
c000a8fc:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
c000a900:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
c000a904:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
c000a908:	10020202 	andne	r0, r2, r2, lsl #4
c000a90c:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
c000a910:	02020202 	andeq	r0, r2, #536870912	; 0x20000000

c000a914 <arr>:
c000a914:	c0009fcc 	andgt	r9, r0, ip, asr #31
c000a918:	50006000 	andpl	r6, r0, r0
c000a91c:	0000000a 	andeq	r0, r0, sl
c000a920:	00000001 	andeq	r0, r0, r1
c000a924:	c0009864 	andgt	r9, r0, r4, ror #16
c000a928:	c0009fd4 	ldrdgt	r9, [r0], -r4
c000a92c:	50006000 	andpl	r6, r0, r0
c000a930:	0000000a 	andeq	r0, r0, sl
c000a934:	00000000 	andeq	r0, r0, r0
c000a938:	c0009864 	andgt	r9, r0, r4, ror #16
c000a93c:	c0009fdc 	ldrdgt	r9, [r0], -ip
c000a940:	50007000 	andpl	r7, r0, r0
c000a944:	0000000a 	andeq	r0, r0, sl
c000a948:	00000001 	andeq	r0, r0, r1
c000a94c:	c0009864 	andgt	r9, r0, r4, ror #16
c000a950:	c0009fe4 	andgt	r9, r0, r4, ror #31
c000a954:	50007000 	andpl	r7, r0, r0
c000a958:	0000000a 	andeq	r0, r0, sl
c000a95c:	00000000 	andeq	r0, r0, r0
c000a960:	c0009864 	andgt	r9, r0, r4, ror #16
c000a964:	c0009fec 	andgt	r9, r0, ip, ror #31
c000a968:	50006000 	andpl	r6, r0, r0
c000a96c:	00000008 	andeq	r0, r0, r8
c000a970:	00000001 	andeq	r0, r0, r1
c000a974:	c0009864 	andgt	r9, r0, r4, ror #16
c000a978:	c0009ff4 	strdgt	r9, [r0], -r4
c000a97c:	50006000 	andpl	r6, r0, r0
c000a980:	00000008 	andeq	r0, r0, r8
c000a984:	00000000 	andeq	r0, r0, r0
c000a988:	c0009864 	andgt	r9, r0, r4, ror #16

Disassembly of section .bss:

c000a98c <i>:
c000a98c:	00000000 	andeq	r0, r0, r0

c000a990 <buff>:
	...

c000a9c4 <cmpbuf>:
c000a9c4:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002041 	andeq	r2, r0, r1, asr #32
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000016 	andeq	r0, r0, r6, lsl r0
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	0c030a02 			; <UNDEFINED> instruction: 0x0c030a02
  20:	Address 0x00000020 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <_start-0xbef372dc>
   4:	694c2820 	stmdbvs	ip, {r5, fp, sp}^
   8:	6f72616e 	svcvs	0x0072616e
   c:	43434720 	movtmi	r4, #14112	; 0x3720
  10:	352e3720 	strcc	r3, [lr, #-1824]!	; 0xfffff8e0
  14:	3130322d 	teqcc	r0, sp, lsr #4
  18:	32312e39 	eorscc	r2, r1, #912	; 0x390
  1c:	2e372029 	cdpcs	0, 3, cr2, cr7, cr9, {1}
  20:	00302e35 	eorseq	r2, r0, r5, lsr lr

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	00000093 	muleq	r0, r3, r0
   4:	00240002 	eoreq	r0, r4, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	73010000 	movwvc	r0, #4096	; 0x1000
  1c:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
  20:	74730000 	ldrbtvc	r0, [r3], #-0
  24:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
  28:	00010053 	andeq	r0, r1, r3, asr r0
  2c:	05000000 	streq	r0, [r0, #-0]
  30:	00800002 	addeq	r0, r0, r2
  34:	011b03c0 	tsteq	fp, r0, asr #7
  38:	2f2f2f2f 	svccs	0x002f2f2f
  3c:	032f2f2f 			; <UNDEFINED> instruction: 0x032f2f2f
  40:	2f2ff215 	svccs	0x002ff215
  44:	2f312f2f 	svccs	0x00312f2f
  48:	2f312f2f 	svccs	0x00312f2f
  4c:	2f2f2f2f 	svccs	0x002f2f2f
  50:	2f2f312f 	svccs	0x002f312f
  54:	2f2f2f2f 	svccs	0x002f2f2f
  58:	2f2f312f 	svccs	0x002f312f
  5c:	2f2f2f31 	svccs	0x002f2f31
  60:	332f2f2f 			; <UNDEFINED> instruction: 0x332f2f2f
  64:	2f302f31 	svccs	0x00302f31
  68:	2f2f302f 	svccs	0x002f302f
  6c:	302f2f30 	eorcc	r2, pc, r0, lsr pc	; <UNPREDICTABLE>
  70:	2f302f2f 	svccs	0x00302f2f
  74:	302f2f32 	eorcc	r2, pc, r2, lsr pc	; <UNPREDICTABLE>
  78:	312f2f2f 			; <UNDEFINED> instruction: 0x312f2f2f
  7c:	f6f6f6de 			; <UNDEFINED> instruction: 0xf6f6f6de
  80:	2f2ff7f6 	svccs	0x002ff7f6
  84:	8903a32f 	stmdbhi	r3, {r0, r1, r2, r3, r5, r8, r9, sp, pc}
  88:	c8034a7f 	stmdagt	r3, {r0, r1, r2, r3, r4, r5, r6, r9, fp, lr}
  8c:	032f2e00 			; <UNDEFINED> instruction: 0x032f2e00
  90:	02022e09 	andeq	r2, r2, #9, 28	; 0x90
  94:	6c010100 	stfvss	f0, [r1], {-0}
  98:	02000000 	andeq	r0, r0, #0
  9c:	00002c00 	andeq	r2, r0, r0, lsl #24
  a0:	fb010200 	blx	408aa <_start-0xbffc7756>
  a4:	01000d0e 	tsteq	r0, lr, lsl #26
  a8:	00010101 	andeq	r0, r1, r1, lsl #2
  ac:	00010000 	andeq	r0, r1, r0
  b0:	6f630100 	svcvs	0x00630100
  b4:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
  b8:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
  bc:	755f0000 	ldrbvc	r0, [pc, #-0]	; c4 <_start-0xc0007f3c>
  c0:	73646f6d 	cmnvc	r4, #436	; 0x1b4
  c4:	532e3369 			; <UNDEFINED> instruction: 0x532e3369
  c8:	00000100 	andeq	r0, r0, r0, lsl #2
  cc:	02050000 	andeq	r0, r5, #0
  d0:	c0008218 	andgt	r8, r0, r8, lsl r2
  d4:	2f011203 	svccs	0x00011203
  d8:	342f2f2f 	strtcc	r2, [pc], #-3887	; e0 <_start-0xc0007f20>
  dc:	2f2f2f2f 	svccs	0x002f2f2f
  e0:	2f2f2f32 	svccs	0x002f2f32
  e4:	2f2f332f 	svccs	0x002f332f
  e8:	2f2f2f2f 	svccs	0x002f2f2f
  ec:	2f2f2f2f 	svccs	0x002f2f2f
  f0:	2f2f2f2f 	svccs	0x002f2f2f
  f4:	2f352f2f 	svccs	0x00352f2f
  f8:	2f2f2f2f 	svccs	0x002f2f2f
  fc:	302f2f2f 	eorcc	r2, pc, pc, lsr #30
 100:	02022f30 	andeq	r2, r2, #48, 30	; 0xc0
 104:	65010100 	strvs	r0, [r1, #-256]	; 0xffffff00
 108:	02000000 	andeq	r0, r0, #0
 10c:	00002c00 	andeq	r2, r0, r0, lsl #24
 110:	fb010200 	blx	4091a <_start-0xbffc76e6>
 114:	01000d0e 	tsteq	r0, lr, lsl #26
 118:	00010101 	andeq	r0, r1, r1, lsl #2
 11c:	00010000 	andeq	r0, r1, r0
 120:	6f630100 	svcvs	0x00630100
 124:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
 128:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
 12c:	755f0000 	ldrbvc	r0, [pc, #-0]	; 134 <_start-0xc0007ecc>
 130:	73766964 	cmnvc	r6, #100, 18	; 0x190000
 134:	532e3369 			; <UNDEFINED> instruction: 0x532e3369
 138:	00000100 	andeq	r0, r0, r0, lsl #2
 13c:	02050000 	andeq	r0, r5, #0
 140:	c00082c8 	andgt	r8, r0, r8, asr #5
 144:	2f011103 	svccs	0x00011103
 148:	2f2f2f2f 	svccs	0x002f2f2f
 14c:	2f2f2f34 	svccs	0x002f2f34
 150:	2f2f322f 	svccs	0x002f322f
 154:	2f342f2f 	svccs	0x00342f2f
 158:	2f2f2f2f 	svccs	0x002f2f2f
 15c:	2f2f2f2f 	svccs	0x002f2f2f
 160:	2f2f2f2f 	svccs	0x002f2f2f
 164:	2f302f2f 	svccs	0x00302f2f
 168:	022f3030 	eoreq	r3, pc, #48	; 0x30
 16c:	01010002 	tsteq	r1, r2
 170:	0000022e 	andeq	r0, r0, lr, lsr #4
 174:	00520002 	subseq	r0, r2, r2
 178:	01020000 	mrseq	r0, (UNDEF: 2)
 17c:	000d0efb 	strdeq	r0, [sp], -fp
 180:	01010101 	tsteq	r1, r1, lsl #2
 184:	01000000 	mrseq	r0, (UNDEF: 0)
 188:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
 18c:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; d8 <_start-0xc0007f28>
 190:	2f6e6f6d 	svccs	0x006e6f6d
 194:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
 198:	00656475 	rsbeq	r6, r5, r5, ror r4
 19c:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
 1a0:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
 1a4:	00006372 	andeq	r6, r0, r2, ror r3
 1a8:	70797463 	rsbsvc	r7, r9, r3, ror #8
 1ac:	00682e65 	rsbeq	r2, r8, r5, ror #28
 1b0:	70000001 	andvc	r0, r0, r1
 1b4:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
 1b8:	00632e66 	rsbeq	r2, r3, r6, ror #28
 1bc:	73000002 	movwvc	r0, #2
 1c0:	72616474 	rsbvc	r6, r1, #116, 8	; 0x74000000
 1c4:	00682e67 	rsbeq	r2, r8, r7, ror #28
 1c8:	00000001 	andeq	r0, r0, r1
 1cc:	5c020500 	cfstr32pl	mvfx0, [r2], {-0}
 1d0:	03c00083 	biceq	r0, r0, #131	; 0x83
 1d4:	9f0100c4 	svcls	0x000100c4
 1d8:	042f67d7 	strteq	r6, [pc], #-2007	; 1e0 <_start-0xc0007e20>
 1dc:	7fbe0302 	svcvc	0x00be0302
 1e0:	834cbb82 	movthi	fp, #52098	; 0xcb82
 1e4:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
 1e8:	06820601 	streq	r0, [r2], r1, lsl #12
 1ec:	684b3d08 	stmdavs	fp, {r3, r8, sl, fp, ip, sp}^
 1f0:	4c674d67 	stclmi	13, cr4, [r7], #-412	; 0xfffffe64
 1f4:	0063bb30 	rsbeq	fp, r3, r0, lsr fp
 1f8:	06010402 	streq	r0, [r1], -r2, lsl #8
 1fc:	02002008 	andeq	r2, r0, #8
 200:	20080204 	andcs	r0, r8, r4, lsl #4
 204:	03040200 	movweq	r0, #16896	; 0x4200
 208:	04020082 	streq	r0, [r2], #-130	; 0xffffff7e
 20c:	21080605 	tstcs	r8, r5, lsl #12
 210:	06040200 	streq	r0, [r4], -r0, lsl #4
 214:	0200d606 	andeq	sp, r0, #6291456	; 0x600000
 218:	65060904 	strvs	r0, [r6, #-2308]	; 0xfffff6fc
 21c:	2f6767a3 	svccs	0x006767a3
 220:	0883bb69 	stmeq	r3, {r0, r3, r5, r6, r8, r9, fp, ip, sp, pc}
 224:	24039f21 	strcs	r9, [r3], #-3873	; 0xfffff0df
 228:	2f4c8366 	svccs	0x004c8366
 22c:	0200c708 	andeq	ip, r0, #8, 14	; 0x200000
 230:	9e060104 	adflss	f0, f6, f4
 234:	032fa006 			; <UNDEFINED> instruction: 0x032fa006
 238:	69d88220 	ldmibvs	r8, {r5, r9, pc}^
 23c:	67836783 	strvs	r6, [r3, r3, lsl #15]
 240:	01040200 	mrseq	r0, R12_usr
 244:	67066606 	strvs	r6, [r6, -r6, lsl #12]
 248:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
 24c:	00820601 	addeq	r0, r2, r1, lsl #12
 250:	4a020402 	bmi	81260 <_start-0xbff86da0>
 254:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
 258:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
 25c:	002f0604 	eoreq	r0, pc, r4, lsl #12
 260:	4b040402 	blmi	101270 <_start-0xbff06d90>
 264:	674b6783 	strbvs	r6, [fp, -r3, lsl #15]
 268:	834b8383 	movthi	r8, #45955	; 0xb383
 26c:	83694b83 	cmnhi	r9, #134144	; 0x20c00
 270:	68678367 	stmdavs	r7!, {r0, r1, r2, r5, r6, r8, r9, pc}^
 274:	83f4674b 	mvnshi	r6, #19660800	; 0x12c0000
 278:	69102e02 	ldmdbvs	r0, {r1, r9, sl, fp, sp}
 27c:	2f83834b 	svccs	0x0083834b
 280:	9f67a09d 	svcls	0x0067a09d
 284:	67bb6783 	ldrvs	r6, [fp, r3, lsl #15]!
 288:	2f83bd9f 	svccs	0x0083bd9f
 28c:	9d2fa09d 	stcls	0, cr10, [pc, #-628]!	; 20 <_start-0xc0007fe0>
 290:	a0f12fbc 	ldrhtge	r2, [r1], #252	; 0xfc
 294:	00a09d2f 	adceq	r9, r0, pc, lsr #26
 298:	2f010402 	svccs	0x00010402
 29c:	0200a16b 	andeq	sl, r0, #-1073741798	; 0xc000001a
 2a0:	66060404 	strvs	r0, [r6], -r4, lsl #8
 2a4:	01040200 	mrseq	r0, R12_usr
 2a8:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
 2ac:	84069e03 	strhi	r9, [r6], #-3587	; 0xfffff1fd
 2b0:	12038467 	andne	r8, r3, #1728053248	; 0x67000000
 2b4:	bb8367ba 	bllt	fe0da1a4 <__bss_end__+0x3e0cf7dc>
 2b8:	02674c32 	rsbeq	r4, r7, #12800	; 0x3200
 2bc:	8383132e 	orrhi	r1, r3, #-1207959552	; 0xb8000000
 2c0:	4b868383 	blmi	fe1a10d4 <__bss_end__+0x3e19670c>
 2c4:	01040200 	mrseq	r0, R12_usr
 2c8:	83068206 	movwhi	r8, #25094	; 0x6206
 2cc:	9f68839f 	svcls	0x0068839f
 2d0:	4b6b6767 	blmi	1ada074 <_start-0xbe52df8c>
 2d4:	02006783 	andeq	r6, r0, #34340864	; 0x20c0000
 2d8:	82060104 	andhi	r0, r6, #4, 2
 2dc:	839f8306 	orrshi	r8, pc, #402653184	; 0x18000000
 2e0:	4e67a068 	cdpmi	0, 6, cr10, cr7, cr8, {3}
 2e4:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
 2e8:	00820601 	addeq	r0, r2, r1, lsl #12
 2ec:	82020402 	andhi	r0, r2, #33554432	; 0x2000000
 2f0:	03040200 	movweq	r0, #16896	; 0x4200
 2f4:	02008306 	andeq	r8, r0, #402653184	; 0x18000000
 2f8:	4b490304 	blmi	1240f10 <_start-0xbedc70f0>
 2fc:	01040200 	mrseq	r0, R12_usr
 300:	02008206 	andeq	r8, r0, #1610612736	; 0x60000000
 304:	83060204 	movwhi	r0, #25092	; 0x6204
 308:	02040200 	andeq	r0, r4, #0, 4
 30c:	00674c49 	rsbeq	r4, r7, r9, asr #24
 310:	06010402 	streq	r0, [r1], -r2, lsl #8
 314:	4b9f0666 	blmi	fe7c1cb4 <__bss_end__+0x3e7b72ec>
 318:	024c6a68 	subeq	r6, ip, #104, 20	; 0x68000
 31c:	831401b4 	tsthi	r4, #180, 2	; 0x2d
 320:	08bc9d2f 	ldmeq	ip!, {r0, r1, r2, r3, r5, r8, sl, fp, ip, pc}
 324:	bc9d2f21 	ldclt	15, cr2, [sp], {33}	; 0x21
 328:	68679f31 	stmdavs	r7!, {r0, r4, r5, r8, r9, sl, fp, ip, pc}^
 32c:	9d2f83bc 	stcls	3, cr8, [pc, #-752]!	; 44 <_start-0xc0007fbc>
 330:	040200bc 	streq	r0, [r2], #-188	; 0xffffff44
 334:	02006703 	andeq	r6, r0, #786432	; 0xc0000
 338:	00f10304 	rscseq	r0, r1, r4, lsl #6
 33c:	06010402 	streq	r0, [r1], -r2, lsl #8
 340:	2f840666 	svccs	0x00840666
 344:	6731bc9d 			; <UNDEFINED> instruction: 0x6731bc9d
 348:	0881694b 	stmeq	r1, {r0, r1, r3, r6, r8, fp, sp, lr}
 34c:	9f67323f 	svcls	0x0067323f
 350:	a09f2ba3 	addsge	r2, pc, r3, lsr #23
 354:	4b329f31 	blmi	ca8020 <_start-0xbf35ffe0>
 358:	324b6831 	subcc	r6, fp, #3211264	; 0x310000
 35c:	839f3168 	orrshi	r3, pc, #104, 2
 360:	03672dbd 	cmneq	r7, #12096	; 0x2f40
 364:	0f032e78 	svceq	0x00032e78
 368:	00bb672e 	adcseq	r6, fp, lr, lsr #14
 36c:	06010402 	streq	r0, [r1], -r2, lsl #8
 370:	bb670666 	bllt	19c1d10 <_start-0xbe6462f0>
 374:	bb67bb67 	bllt	19ef118 <_start-0xbe618ee8>
 378:	bc838383 	stclt	3, cr8, [r3], {131}	; 0x83
 37c:	0402009f 	streq	r0, [r2], #-159	; 0xffffff61
 380:	7ee20302 	cdpvc	3, 14, cr0, cr2, cr2, {0}
 384:	02003c08 	andeq	r3, r0, #8, 24	; 0x800
 388:	66060104 	strvs	r0, [r6], -r4, lsl #2
 38c:	01a00306 	lsleq	r0, r6, #6
 390:	69676782 	stmdbvs	r7!, {r1, r7, r8, r9, sl, sp, lr}^
 394:	2fbc4ba2 	svccs	0x00bc4ba2
 398:	a04f85a1 	subge	r8, pc, r1, lsr #11
 39c:	000a0267 	andeq	r0, sl, r7, ror #4
 3a0:	00a60101 	adceq	r0, r6, r1, lsl #2
 3a4:	00020000 	andeq	r0, r2, r0
 3a8:	00000063 	andeq	r0, r0, r3, rrx
 3ac:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
 3b0:	0101000d 	tsteq	r1, sp
 3b4:	00000101 	andeq	r0, r0, r1, lsl #2
 3b8:	00000100 	andeq	r0, r0, r0, lsl #2
 3bc:	6d6f6301 	stclvs	3, cr6, [pc, #-4]!	; 3c0 <_start-0xc0007c40>
 3c0:	2f6e6f6d 	svccs	0x006e6f6d
 3c4:	00637273 	rsbeq	r7, r3, r3, ror r2
 3c8:	6f632f2e 	svcvs	0x00632f2e
 3cc:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
 3d0:	636e692f 	cmnvs	lr, #770048	; 0xbc000
 3d4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
 3d8:	61750000 	cmnvs	r5, r0
 3dc:	632e7472 			; <UNDEFINED> instruction: 0x632e7472
 3e0:	00000100 	andeq	r0, r0, r0, lsl #2
 3e4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 3e8:	31706d32 	cmncc	r0, r2, lsr sp
 3ec:	675f7878 			; <UNDEFINED> instruction: 0x675f7878
 3f0:	2e6f6970 			; <UNDEFINED> instruction: 0x2e6f6970
 3f4:	00020068 	andeq	r0, r2, r8, rrx
 3f8:	6d747300 	ldclvs	3, cr7, [r4, #-0]
 3fc:	706d3233 	rsbvc	r3, sp, r3, lsr r2
 400:	5f787831 	svcpl	0x00787831
 404:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
 408:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 40c:	00000000 	andeq	r0, r0, r0
 410:	94140205 	ldrls	r0, [r4], #-517	; 0xfffffdfb
 414:	4c17c000 	ldcmi	0, cr12, [r7], {-0}
 418:	d8d7d7d7 	ldmle	r7, {r0, r1, r2, r4, r6, r7, r8, r9, sl, ip, lr, pc}^
 41c:	d8d7d7d7 	ldmle	r7, {r0, r1, r2, r4, r6, r7, r8, r9, sl, ip, lr, pc}^
 420:	d7d8d8d7 			; <UNDEFINED> instruction: 0xd7d8d8d7
 424:	d7d8d884 	ldrble	sp, [r8, r4, lsl #17]
 428:	009f85d8 			; <UNDEFINED> instruction: 0x009f85d8
 42c:	06010402 	streq	r0, [r1], -r2, lsl #8
 430:	83bb062e 			; <UNDEFINED> instruction: 0x83bb062e
 434:	83684b67 	cmnhi	r8, #105472	; 0x19c00
 438:	6984b92f 	stmibvs	r4, {r0, r1, r2, r3, r5, r8, fp, ip, sp, pc}
 43c:	04020068 	streq	r0, [r2], #-104	; 0xffffff98
 440:	062e0601 	strteq	r0, [lr], -r1, lsl #12
 444:	022f83bb 	eoreq	r8, pc, #-335544318	; 0xec000002
 448:	01010008 	tsteq	r1, r8
 44c:	00000037 	andeq	r0, r0, r7, lsr r0
 450:	00230002 	eoreq	r0, r3, r2
 454:	01020000 	mrseq	r0, (UNDEF: 2)
 458:	000d0efb 	strdeq	r0, [sp], -fp
 45c:	01010101 	tsteq	r1, r1, lsl #2
 460:	01000000 	mrseq	r0, (UNDEF: 0)
 464:	73010000 	movwvc	r0, #4096	; 0x1000
 468:	00006372 	andeq	r6, r0, r2, ror r3
 46c:	695f6f64 	ldmdbvs	pc, {r2, r5, r6, r8, r9, sl, fp, sp, lr}^	; <UNPREDICTABLE>
 470:	632e7172 			; <UNDEFINED> instruction: 0x632e7172
 474:	00000100 	andeq	r0, r0, r0, lsl #2
 478:	02050000 	andeq	r0, r5, #0
 47c:	c00096f0 	strdgt	r9, [r0], -r0
 480:	08024b15 	stmdaeq	r2, {r0, r2, r4, r8, r9, fp, lr}
 484:	9b010100 	blls	4088c <_start-0xbffc7774>
 488:	02000000 	andeq	r0, r0, #0
 48c:	00005b00 	andeq	r5, r0, r0, lsl #22
 490:	fb010200 	blx	40c9a <_start-0xbffc7366>
 494:	01000d0e 	tsteq	r0, lr, lsl #26
 498:	00010101 	andeq	r0, r1, r1, lsl #2
 49c:	00010000 	andeq	r0, r1, r0
 4a0:	72730100 	rsbsvc	r0, r3, #0, 2
 4a4:	2f2e0063 	svccs	0x002e0063
 4a8:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
 4ac:	692f6e6f 	stmdbvs	pc!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}	; <UNPREDICTABLE>
 4b0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
 4b4:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
 4b8:	636e692f 	cmnvs	lr, #770048	; 0xbc000
 4bc:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
 4c0:	70670000 	rsbvc	r0, r7, r0
 4c4:	632e6f69 			; <UNDEFINED> instruction: 0x632e6f69
 4c8:	00000100 	andeq	r0, r0, r0, lsl #2
 4cc:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 4d0:	31706d32 	cmncc	r0, r2, lsr sp
 4d4:	675f7878 			; <UNDEFINED> instruction: 0x675f7878
 4d8:	2e6f6970 			; <UNDEFINED> instruction: 0x2e6f6970
 4dc:	00020068 	andeq	r0, r2, r8, rrx
 4e0:	69706700 	ldmdbvs	r0!, {r8, r9, sl, sp, lr}^
 4e4:	00682e6f 	rsbeq	r2, r8, pc, ror #28
 4e8:	00000003 	andeq	r0, r0, r3
 4ec:	08020500 	stmdaeq	r2, {r8, sl}
 4f0:	15c00097 	strbne	r0, [r0, #151]	; 0x97
 4f4:	083d08bc 	ldmdaeq	sp!, {r2, r3, r4, r5, r7, fp}
 4f8:	2308f33f 	movwcs	pc, #33599	; 0x833f	; <UNPREDICTABLE>
 4fc:	3f083d08 	svccc	0x00083d08
 500:	3e083d08 	cdpcc	13, 0, cr3, cr8, cr8, {0}
 504:	f768bc88 			; <UNDEFINED> instruction: 0xf768bc88
 508:	2208682a 	andcs	r6, r8, #2752512	; 0x2a0000
 50c:	304ba386 	subcc	sl, fp, r6, lsl #7
 510:	034c3e08 	movteq	r3, #52744	; 0xce08
 514:	0200667a 	andeq	r6, r0, #127926272	; 0x7a00000
 518:	ba060104 	blt	180930 <_start-0xbfe876d0>
 51c:	ba0b0306 	blt	2c113c <_start-0xbfd46ec4>
 520:	0008022f 	andeq	r0, r8, pc, lsr #4
 524:	00d60101 	sbcseq	r0, r6, r1, lsl #2
 528:	00020000 	andeq	r0, r2, r0
 52c:	00000071 	andeq	r0, r0, r1, ror r0
 530:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
 534:	0101000d 	tsteq	r1, sp
 538:	00000101 	andeq	r0, r0, r1, lsl #2
 53c:	00000100 	andeq	r0, r0, r0, lsl #2
 540:	63727301 	cmnvs	r2, #67108864	; 0x4000000
 544:	632f2e00 			; <UNDEFINED> instruction: 0x632f2e00
 548:	6f6d6d6f 	svcvs	0x006d6d6f
 54c:	6e692f6e 	cdpvs	15, 6, cr2, cr9, cr14, {3}
 550:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
 554:	75000065 	strvc	r0, [r0, #-101]	; 0xffffff9b
 558:	34747261 	ldrbtcc	r7, [r4], #-609	; 0xfffffd9f
 55c:	0100632e 	tsteq	r0, lr, lsr #6
 560:	74730000 	ldrbtvc	r0, [r3], #-0
 564:	6d32336d 	ldcvs	3, cr3, [r2, #-436]!	; 0xfffffe4c
 568:	78783170 	ldmdavc	r8!, {r4, r5, r6, r8, ip, sp}^
 56c:	7261755f 	rsbvc	r7, r1, #398458880	; 0x17c00000
 570:	00682e74 	rsbeq	r2, r8, r4, ror lr
 574:	73000002 	movwvc	r0, #2
 578:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
 57c:	7831706d 	ldmdavc	r1!, {r0, r2, r3, r5, r6, ip, sp, lr}
 580:	70675f78 	rsbvc	r5, r7, r8, ror pc
 584:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
 588:	00000200 	andeq	r0, r0, r0, lsl #4
 58c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 590:	31706d32 	cmncc	r0, r2, lsr sp
 594:	725f7878 	subsvc	r7, pc, #120, 16	; 0x780000
 598:	682e6363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, sp, lr}
 59c:	00000200 	andeq	r0, r0, r0, lsl #4
 5a0:	02050000 	andeq	r0, r5, #0
 5a4:	c000998c 	andgt	r9, r0, ip, lsl #19
 5a8:	a1a04d1a 	lslge	r4, sl, sp
 5ac:	d8d7d7d7 	ldmle	r7, {r0, r1, r2, r4, r6, r7, r8, r9, sl, ip, lr, pc}^
 5b0:	d9d7d7d7 	ldmible	r7, {r0, r1, r2, r4, r6, r7, r8, r9, sl, ip, lr, pc}^
 5b4:	f4da4bbc 			; <UNDEFINED> instruction: 0xf4da4bbc
 5b8:	d7f4d8d8 	ubfxle	sp, r8, #17, #21
 5bc:	0200a14e 	andeq	sl, r0, #-2147483629	; 0x80000013
 5c0:	2e060104 	adfcss	f0, f6, f4
 5c4:	0084bb06 	addeq	fp, r4, r6, lsl #22
 5c8:	06010402 	streq	r0, [r1], -r2, lsl #8
 5cc:	87bb062e 	ldrhi	r0, [fp, lr, lsr #12]!
 5d0:	30820a03 	addcc	r0, r2, r3, lsl #20
 5d4:	696b88b8 	stmdbvs	fp!, {r3, r4, r5, r7, fp, pc}^
 5d8:	01040200 	mrseq	r0, R12_usr
 5dc:	bc062e06 	stclt	14, cr2, [r6], {6}
 5e0:	68872f83 	stmvs	r7, {r0, r1, r7, r8, r9, sl, fp, sp}
 5e4:	d7220869 	strle	r0, [r2, -r9, ror #16]!
 5e8:	02040200 	andeq	r0, r4, #0, 4
 5ec:	00d67a03 	sbcseq	r7, r6, r3, lsl #20
 5f0:	06010402 	streq	r0, [r1], -r2, lsl #8
 5f4:	318a0666 	orrcc	r0, sl, r6, ror #12
 5f8:	024b4b4b 	subeq	r4, fp, #76800	; 0x12c00
 5fc:	01010006 	tsteq	r1, r6
 600:	000000c1 	andeq	r0, r0, r1, asr #1
 604:	006b0002 	rsbeq	r0, fp, r2
 608:	01020000 	mrseq	r0, (UNDEF: 2)
 60c:	000d0efb 	strdeq	r0, [sp], -fp
 610:	01010101 	tsteq	r1, r1, lsl #2
 614:	01000000 	mrseq	r0, (UNDEF: 0)
 618:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
 61c:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 568 <_start-0xc0007a98>
 620:	2f6e6f6d 	svccs	0x006e6f6d
 624:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
 628:	00656475 	rsbeq	r6, r5, r5, ror r4
 62c:	6e692f2e 	cdpvs	15, 6, cr2, cr9, cr14, {1}
 630:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
 634:	6d000065 	stcvs	0, cr0, [r0, #-404]	; 0xfffffe6c
 638:	2e6e6961 	vnmulcs.f16	s13, s28, s3	; <UNPREDICTABLE>
 63c:	00000063 	andeq	r0, r0, r3, rrx
 640:	6d747300 	ldclvs	3, cr7, [r4, #-0]
 644:	706d3233 	rsbvc	r3, sp, r3, lsr r2
 648:	5f787831 	svcpl	0x00787831
 64c:	6f697067 	svcvs	0x00697067
 650:	0100682e 	tsteq	r0, lr, lsr #16
 654:	70670000 	rsbvc	r0, r7, r0
 658:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
 65c:	00000200 	andeq	r0, r0, r0, lsl #4
 660:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 664:	31706d32 	cmncc	r0, r2, lsr sp
 668:	725f7878 	subsvc	r7, pc, #120, 16	; 0x780000
 66c:	682e6363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, sp, lr}
 670:	00000100 	andeq	r0, r0, r0, lsl #2
 674:	02050000 	andeq	r0, r5, #0
 678:	c0009d2c 	andgt	r9, r0, ip, lsr #26
 67c:	00678418 	rsbeq	r8, r7, r8, lsl r4
 680:	06030402 	streq	r0, [r3], -r2, lsl #8
 684:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
 688:	02006601 	andeq	r6, r0, #1048576	; 0x100000
 68c:	81060204 	tsthi	r6, r4, lsl #4
 690:	01040200 	mrseq	r0, R12_usr
 694:	84066606 	strhi	r6, [r6], #-1542	; 0xfffff9fa
 698:	f39f6787 	vabdl.u16	q3, d31, d7
 69c:	03bdbbbb 			; <UNDEFINED> instruction: 0x03bdbbbb
 6a0:	2f676631 	svccs	0x00676631
 6a4:	4b2e0d03 	blmi	b83ab8 <_start-0xbf484548>
 6a8:	ca08684b 	bgt	21a7dc <_start-0xbfded824>
 6ac:	00155802 	andseq	r5, r5, r2, lsl #16
 6b0:	03020402 	movweq	r0, #9218	; 0x2402
 6b4:	02006679 	andeq	r6, r0, #126877696	; 0x7900000
 6b8:	66060104 	strvs	r0, [r6], -r4, lsl #2
 6bc:	66740306 	ldrbtvs	r0, [r4], -r6, lsl #6
 6c0:	01000202 	tsteq	r0, r2, lsl #4
 6c4:	Address 0x000006c4 is out of bounds.


Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	0000006d 	andeq	r0, r0, sp, rrx
       4:	00000002 	andeq	r0, r0, r2
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	00000000 	andeq	r0, r0, r0
      10:	c0008000 	andgt	r8, r0, r0
      14:	c0008218 	andgt	r8, r0, r8, lsl r2
      18:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
      1c:	74732f74 	ldrbtvc	r2, [r3], #-3956	; 0xfffff08c
      20:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
      24:	682f0053 	stmdavs	pc!, {r0, r1, r4, r6}	; <UNPREDICTABLE>
      28:	2f656d6f 	svccs	0x00656d6f
      2c:	756e696c 	strbvc	r6, [lr, #-2412]!	; 0xfffff694
      30:	61662f78 	smcvs	25336	; 0x62f8
      34:	67697372 			; <UNDEFINED> instruction: 0x67697372
      38:	412f7468 			; <UNDEFINED> instruction: 0x412f7468
      3c:	442f4d52 	strtmi	r4, [pc], #-3410	; 44 <_start-0xc0007fbc>
      40:	31323243 	teqcc	r2, r3, asr #4
      44:	642f3131 	strtvs	r3, [pc], #-305	; 4c <_start-0xc0007fb4>
      48:	38307961 	ldmdacc	r0!, {r0, r5, r6, r8, fp, ip, sp, lr}
      4c:	5f31302f 	svcpl	0x0031302f
      50:	635f3741 	cmpvs	pc, #17039360	; 0x1040000
      54:	72706d6f 	rsbsvc	r6, r0, #7104	; 0x1bc0
      58:	6e656865 	cdpvs	8, 6, cr6, cr5, cr5, {3}
      5c:	65766973 	ldrbvs	r6, [r6, #-2419]!	; 0xfffff68d
      60:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
      64:	20534120 	subscs	r4, r3, r0, lsr #2
      68:	38322e32 	ldmdacc	r2!, {r1, r4, r5, r9, sl, fp, sp}
      6c:	0100322e 	tsteq	r0, lr, lsr #4
      70:	00007580 	andeq	r7, r0, r0, lsl #11
      74:	14000200 	strne	r0, [r0], #-512	; 0xfffffe00
      78:	04000000 	streq	r0, [r0], #-0
      7c:	00009701 	andeq	r9, r0, r1, lsl #14
      80:	00821800 	addeq	r1, r2, r0, lsl #16
      84:	0082c8c0 	addeq	ip, r2, r0, asr #17
      88:	6d6f63c0 	stclvs	3, cr6, [pc, #-768]!	; fffffd90 <__bss_end__+0x3fff53c8>
      8c:	2f6e6f6d 	svccs	0x006e6f6d
      90:	2f637273 	svccs	0x00637273
      94:	6f6d755f 	svcvs	0x006d755f
      98:	33697364 	cmncc	r9, #100, 6	; 0x90000001
      9c:	2f00532e 	svccs	0x0000532e
      a0:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
      a4:	6e696c2f 	cdpvs	12, 6, cr6, cr9, cr15, {1}
      a8:	662f7875 			; <UNDEFINED> instruction: 0x662f7875
      ac:	69737261 	ldmdbvs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
      b0:	2f746867 	svccs	0x00746867
      b4:	2f4d5241 	svccs	0x004d5241
      b8:	32324344 	eorscc	r4, r2, #68, 6	; 0x10000001
      bc:	2f313131 	svccs	0x00313131
      c0:	30796164 	rsbscc	r6, r9, r4, ror #2
      c4:	31302f38 	teqcc	r0, r8, lsr pc
      c8:	5f37415f 	svcpl	0x0037415f
      cc:	706d6f63 	rsbvc	r6, sp, r3, ror #30
      d0:	65686572 	strbvs	r6, [r8, #-1394]!	; 0xfffffa8e
      d4:	7669736e 	strbtvc	r7, [r9], -lr, ror #6
      d8:	4e470065 	cdpmi	0, 4, cr0, cr7, cr5, {3}
      dc:	53412055 	movtpl	r2, #4181	; 0x1055
      e0:	322e3220 	eorcc	r3, lr, #32, 4
      e4:	00322e38 	eorseq	r2, r2, r8, lsr lr
      e8:	00758001 	rsbseq	r8, r5, r1
      ec:	00020000 	andeq	r0, r2, r0
      f0:	00000028 	andeq	r0, r0, r8, lsr #32
      f4:	01070104 	tsteq	r7, r4, lsl #2
      f8:	82c80000 	sbchi	r0, r8, #0
      fc:	835cc000 	cmphi	ip, #0
     100:	6f63c000 	svcvs	0x0063c000
     104:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
     108:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
     10c:	64755f2f 	ldrbtvs	r5, [r5], #-3887	; 0xfffff0d1
     110:	69737669 	ldmdbvs	r3!, {r0, r3, r5, r6, r9, sl, ip, sp, lr}^
     114:	00532e33 	subseq	r2, r3, r3, lsr lr
     118:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 64 <_start-0xc0007f9c>
     11c:	696c2f65 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
     120:	2f78756e 	svccs	0x0078756e
     124:	73726166 	cmnvc	r2, #-2147483623	; 0x80000019
     128:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
     12c:	4d52412f 	ldfmie	f4, [r2, #-188]	; 0xffffff44
     130:	3243442f 	subcc	r4, r3, #788529152	; 0x2f000000
     134:	31313132 	teqcc	r1, r2, lsr r1
     138:	7961642f 	stmdbvc	r1!, {r0, r1, r2, r3, r5, sl, sp, lr}^
     13c:	302f3830 	eorcc	r3, pc, r0, lsr r8	; <UNPREDICTABLE>
     140:	37415f31 	smlaldxcc	r5, r1, r1, pc	; <UNPREDICTABLE>
     144:	6d6f635f 	stclvs	3, cr6, [pc, #-380]!	; ffffffd0 <__bss_end__+0x3fff5608>
     148:	68657270 	stmdavs	r5!, {r4, r5, r6, r9, ip, sp, lr}^
     14c:	69736e65 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
     150:	47006576 	smlsdxmi	r0, r6, r5, r6
     154:	4120554e 			; <UNDEFINED> instruction: 0x4120554e
     158:	2e322053 	mrccs	0, 1, r2, cr2, cr3, {2}
     15c:	322e3832 	eorcc	r3, lr, #3276800	; 0x320000
     160:	7e800100 	rmfvcs	f0, f0, f0
     164:	04000004 	streq	r0, [r0], #-4
     168:	00003c00 	andeq	r3, r0, r0, lsl #24
     16c:	52010400 	andpl	r0, r1, #0, 8
     170:	0c000000 	stceq	0, cr0, [r0], {-0}
     174:	00000111 	andeq	r0, r0, r1, lsl r1
     178:	00000125 	andeq	r0, r0, r5, lsr #2
     17c:	c000835c 	andgt	r8, r0, ip, asr r3
     180:	000010b8 	strheq	r1, [r0], -r8
     184:	00000170 	andeq	r0, r0, r0, ror r1
     188:	00003902 	andeq	r3, r0, r2, lsl #18
     18c:	30280300 	eorcc	r0, r8, r0, lsl #6
     190:	03000000 	movweq	r0, #0
     194:	00000704 	andeq	r0, r0, r4, lsl #14
     198:	00400200 	subeq	r0, r0, r0, lsl #4
     19c:	66030000 	strvs	r0, [r3], -r0
     1a0:	00000025 	andeq	r0, r0, r5, lsr #32
     1a4:	00005804 	andeq	r5, r0, r4, lsl #16
     1a8:	00005100 	andeq	r5, r0, r0, lsl #2
     1ac:	00510500 	subseq	r0, r1, r0, lsl #10
     1b0:	00ff0000 	rscseq	r0, pc, r0
     1b4:	f1070406 			; <UNDEFINED> instruction: 0xf1070406
     1b8:	06000000 	streq	r0, [r0], -r0
     1bc:	00de0801 	sbcseq	r0, lr, r1, lsl #16
     1c0:	a1070000 	mrsge	r0, (UNDEF: 7)
     1c4:	01000001 	tsteq	r0, r1
     1c8:	00004111 	andeq	r4, r0, r1, lsl r1
     1cc:	14030500 	strne	r0, [r3], #-1280	; 0xfffffb00
     1d0:	08c000a8 	stmiaeq	r0, {r3, r5, r7}^
     1d4:	000001db 	ldrdeq	r0, [r0], -fp
     1d8:	c8017d02 	stmdagt	r1, {r1, r8, sl, fp, ip, sp, lr}
     1dc:	4cc00093 	stclmi	0, cr0, [r0], {147}	; 0x93
     1e0:	01000000 	mrseq	r0, (UNDEF: 0)
     1e4:	0000b69c 	muleq	r0, ip, r6
     1e8:	6d660900 			; <UNDEFINED> instruction: 0x6d660900
     1ec:	7d020074 	stcvc	0, cr0, [r2, #-464]	; 0xfffffe30
     1f0:	0000b601 	andeq	fp, r0, r1, lsl #12
     1f4:	70910200 	addsvc	r0, r1, r0, lsl #4
     1f8:	01c00b0a 	biceq	r0, r0, sl, lsl #22
     1fc:	7f020000 	svcvc	0x00020000
     200:	00003601 	andeq	r3, r0, r1, lsl #12
     204:	64910200 	ldrvs	r0, [r1], #512	; 0x200
     208:	0001a80b 	andeq	sl, r1, fp, lsl #16
     20c:	01800200 	orreq	r0, r0, r0, lsl #4
     210:	000000c8 	andeq	r0, r0, r8, asr #1
     214:	7f809103 	svcvc	0x00809103
     218:	c3040c00 	movwgt	r0, #19456	; 0x4c00
     21c:	06000000 	streq	r0, [r0], -r0
     220:	00e70801 	rsceq	r0, r7, r1, lsl #16
     224:	bc0d0000 	stclt	0, cr0, [sp], {-0}
     228:	04000000 	streq	r0, [r0], #-0
     22c:	000000bc 	strheq	r0, [r0], -ip
     230:	000000d8 	ldrdeq	r0, [r0], -r8
     234:	00005105 	andeq	r5, r0, r5, lsl #2
     238:	0e006300 	cdpeq	3, 0, cr6, cr0, cr0, {0}
     23c:	000001da 	ldrdeq	r0, [r0], -sl
     240:	2e017202 	cdpcs	2, 0, cr7, cr1, cr2, {0}
     244:	7c000001 	stcvc	0, cr0, [r0], {1}
     248:	4cc00093 	stclmi	0, cr0, [r0], {147}	; 0x93
     24c:	01000000 	mrseq	r0, (UNDEF: 0)
     250:	00012e9c 	muleq	r1, ip, lr
     254:	75620900 	strbvc	r0, [r2, #-2304]!	; 0xfffff700
     258:	72020066 	andvc	r0, r2, #102	; 0x66
     25c:	00013501 	andeq	r3, r1, r1, lsl #10
     260:	60910200 	addsvs	r0, r1, r0, lsl #4
     264:	746d6609 	strbtvc	r6, [sp], #-1545	; 0xfffff9f7
     268:	01720200 	cmneq	r2, r0, lsl #4
     26c:	000000b6 	strheq	r0, [r0], -r6
     270:	0a749102 	beq	1d24680 <_start-0xbe2e3980>
     274:	0001c00b 	andeq	ip, r1, fp
     278:	01740200 	cmneq	r4, r0, lsl #4
     27c:	00000036 	andeq	r0, r0, r6, lsr r0
     280:	0f649102 	svceq	0x00649102
     284:	75020069 	strvc	r0, [r2, #-105]	; 0xffffff97
     288:	00012e01 	andeq	r2, r1, r1, lsl #28
     28c:	68910200 	ldmvs	r1, {r9}
     290:	05041000 	streq	r1, [r4, #-0]
     294:	00746e69 	rsbseq	r6, r4, r9, ror #28
     298:	00bc040c 	adcseq	r0, ip, ip, lsl #8
     29c:	d9110000 	ldmdble	r1, {}	; <UNPREDICTABLE>
     2a0:	02000001 	andeq	r0, r0, #1
     2a4:	00012ebb 			; <UNDEFINED> instruction: 0x00012ebb
     2a8:	008ab400 	addeq	fp, sl, r0, lsl #8
     2ac:	0008c8c0 	andeq	ip, r8, r0, asr #17
     2b0:	479c0100 	ldrmi	r0, [ip, r0, lsl #2]
     2b4:	12000002 	andne	r0, r0, #2
     2b8:	00667562 	rsbeq	r7, r6, r2, ror #10
     2bc:	0135bb02 	teqeq	r5, r2, lsl #22
     2c0:	91020000 	mrsls	r0, (UNDEF: 2)
     2c4:	6d661244 	sfmvs	f1, 2, [r6, #-272]!	; 0xfffffef0
     2c8:	bb020074 	bllt	804a0 <_start-0xbff87b60>
     2cc:	000000b6 	strheq	r0, [r0], -r6
     2d0:	13409102 	movtne	r9, #258	; 0x102
     2d4:	000001c0 	andeq	r0, r0, r0, asr #3
     2d8:	0036bb02 	eorseq	fp, r6, r2, lsl #22
     2dc:	91030000 	mrsls	r0, (UNDEF: 3)
     2e0:	6c147fbc 	ldcvs	15, cr7, [r4], {188}	; 0xbc
     2e4:	02006e65 	andeq	r6, r0, #1616	; 0x650
     2e8:	00012ebd 			; <UNDEFINED> instruction: 0x00012ebd
     2ec:	50910200 	addspl	r0, r1, r0, lsl #4
     2f0:	6d756e14 	ldclvs	14, cr6, [r5, #-80]!	; 0xffffffb0
     2f4:	47c10200 	strbmi	r0, [r1, r0, lsl #4]
     2f8:	02000002 	andeq	r0, r0, #2
     2fc:	69147491 	ldmdbvs	r4, {r0, r4, r7, sl, ip, sp, lr}
     300:	2ec30200 	cdpcs	2, 12, cr0, cr3, cr0, {0}
     304:	02000001 	andeq	r0, r0, #1
     308:	d9157091 	ldmdble	r5, {r0, r4, r7, ip, sp, lr}
     30c:	02000000 	andeq	r0, r0, #0
     310:	00012ec3 	andeq	r2, r1, r3, asr #29
     314:	6c910200 	lfmvs	f0, 4, [r1], {0}
     318:	72747314 	rsbsvc	r7, r4, #20, 6	; 0x50000000
     31c:	35c40200 	strbcc	r0, [r4, #512]	; 0x200
     320:	02000001 	andeq	r0, r0, #1
     324:	73146891 	tstvc	r4, #9502720	; 0x910000
     328:	b6c50200 	strblt	r0, [r5], r0, lsl #4
     32c:	02000000 	andeq	r0, r0, #0
     330:	60156491 	mulsvs	r5, r1, r4
     334:	02000001 	andeq	r0, r0, #1
     338:	00012ec7 	andeq	r2, r1, r7, asr #29
     33c:	60910200 	addsvs	r0, r1, r0, lsl #4
     340:	0001b415 	andeq	fp, r1, r5, lsl r4
     344:	2ec90200 	cdpcs	2, 12, cr0, cr9, cr0, {0}
     348:	02000001 	andeq	r0, r0, #1
     34c:	48155c91 	ldmdami	r5, {r0, r4, r7, sl, fp, ip, lr}
     350:	02000000 	andeq	r0, r0, #0
     354:	00012eca 	andeq	r2, r1, sl, asr #29
     358:	58910200 	ldmpl	r1, {r9}
     35c:	00016b15 	andeq	r6, r1, r5, lsl fp
     360:	2ecc0200 	cdpcs	2, 12, cr0, cr12, cr0, {0}
     364:	02000001 	andeq	r0, r0, #1
     368:	8b165491 	blhi	5955b4 <_start-0xbfa72a4c>
     36c:	02000001 	andeq	r0, r0, #1
     370:	008b0cd6 	ldrdeq	r0, [fp], r6
     374:	912417c0 	smlawtls	r4, r0, r7, r1
     378:	0028c000 	eoreq	ip, r8, r0
     37c:	022e0000 	eoreq	r0, lr, #0
     380:	690f0000 	stmdbvs	pc, {}	; <UNPREDICTABLE>
     384:	34020070 	strcc	r0, [r2], #-112	; 0xffffff90
     388:	00024e01 	andeq	r4, r2, r1, lsl #28
     38c:	48910200 	ldmmi	r1, {r9}
     390:	91501800 	cmpls	r0, r0, lsl #16
     394:	0028c000 	eoreq	ip, r8, r0
     398:	690f0000 	stmdbvs	pc, {}	; <UNPREDICTABLE>
     39c:	37020070 	smlsdxcc	r2, r0, r0, r0
     3a0:	00025b01 	andeq	r5, r2, r1, lsl #22
     3a4:	4c910200 	lfmmi	f0, 4, [r1], {0}
     3a8:	04060000 	streq	r0, [r6], #-0
     3ac:	0000ec07 	andeq	lr, r0, r7, lsl #24
     3b0:	54040c00 	strpl	r0, [r4], #-3072	; 0xfffff400
     3b4:	06000002 	streq	r0, [r0], -r2
     3b8:	01c50504 	biceq	r0, r5, r4, lsl #10
     3bc:	040c0000 	streq	r0, [ip], #-0
     3c0:	0000012e 	andeq	r0, r0, lr, lsr #2
     3c4:	00019219 	andeq	r9, r1, r9, lsl r2
     3c8:	51b30200 			; <UNDEFINED> instruction: 0x51b30200
     3cc:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
     3d0:	6cc0008a 	stclvs	0, cr0, [r0], {138}	; 0x8a
     3d4:	01000000 	mrseq	r0, (UNDEF: 0)
     3d8:	0002a29c 	muleq	r2, ip, r2
     3dc:	00731200 	rsbseq	r1, r3, r0, lsl #4
     3e0:	00b6b302 	adcseq	fp, r6, r2, lsl #6
     3e4:	91020000 	mrsls	r0, (UNDEF: 2)
     3e8:	00291374 	eoreq	r1, r9, r4, ror r3
     3ec:	b3020000 	movwlt	r0, #8192	; 0x2000
     3f0:	00000051 	andeq	r0, r0, r1, asr r0
     3f4:	14709102 	ldrbtne	r9, [r0], #-258	; 0xfffffefe
     3f8:	02006373 	andeq	r6, r0, #-872415231	; 0xcc000001
     3fc:	0000b6b5 			; <UNDEFINED> instruction: 0x0000b6b5
     400:	78910200 	ldmvc	r1, {r9}
     404:	019a1a00 	orrseq	r1, sl, r0, lsl #20
     408:	6e020000 	cdpvs	0, 0, cr0, cr2, cr0, {0}
     40c:	00000135 	andeq	r0, r0, r5, lsr r1
     410:	c0008664 	andgt	r8, r0, r4, ror #12
     414:	000003e4 	andeq	r0, r0, r4, ror #7
     418:	036f9c01 	cmneq	pc, #256	; 0x100
     41c:	73120000 	tstvc	r2, #0
     420:	02007274 	andeq	r7, r0, #116, 4	; 0x40000007
     424:	0001356e 	andeq	r3, r1, lr, ror #10
     428:	9c910300 	ldcls	3, cr0, [r1], {0}
     42c:	756e127f 	strbvc	r1, [lr, #-639]!	; 0xfffffd81
     430:	6e02006d 	cdpvs	0, 0, cr0, cr2, cr13, {3}
     434:	00000254 	andeq	r0, r0, r4, asr r2
     438:	7f989103 	svcvc	0x00989103
     43c:	0000d913 	andeq	sp, r0, r3, lsl r9
     440:	516e0200 	cmnpl	lr, r0, lsl #4
     444:	03000000 	movweq	r0, #0
     448:	137f9491 	cmnne	pc, #-1862270976	; 0x91000000
     44c:	00000166 	andeq	r0, r0, r6, ror #2
     450:	012e6e02 			; <UNDEFINED> instruction: 0x012e6e02
     454:	91030000 	mrsls	r0, (UNDEF: 3)
     458:	48137f90 	ldmdami	r3, {r4, r7, r8, r9, sl, fp, ip, sp, lr}
     45c:	02000000 	andeq	r0, r0, #0
     460:	00012e6e 	andeq	r2, r1, lr, ror #28
     464:	00910200 	addseq	r0, r1, r0, lsl #4
     468:	0001a313 	andeq	sl, r1, r3, lsl r3
     46c:	2e6e0200 	cdpcs	2, 6, cr0, cr14, cr0, {0}
     470:	02000001 	andeq	r0, r0, #1
     474:	63140491 	tstvs	r4, #-1862270976	; 0x91000000
     478:	bc710200 	lfmlt	f0, 2, [r1], #-0
     47c:	02000000 	andeq	r0, r0, #0
     480:	ce156b91 	vmovgt.32	r6, d21[0]
     484:	02000001 	andeq	r0, r0, #1
     488:	0000bc71 	andeq	fp, r0, r1, ror ip
     48c:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
     490:	706d7414 	rsbvc	r7, sp, r4, lsl r4
     494:	6f710200 	svcvs	0x00710200
     498:	03000003 	movweq	r0, #3
     49c:	157fa091 	ldrbne	sl, [pc, #-145]!	; 413 <_start-0xc0007bed>
     4a0:	00000000 	andeq	r0, r0, r0
     4a4:	00b67202 	adcseq	r7, r6, r2, lsl #4
     4a8:	91020000 	mrsls	r0, (UNDEF: 2)
     4ac:	00691470 	rsbeq	r1, r9, r0, ror r4
     4b0:	012e7302 			; <UNDEFINED> instruction: 0x012e7302
     4b4:	91020000 	mrsls	r0, (UNDEF: 2)
     4b8:	8820186c 	stmdahi	r0!, {r2, r3, r5, r6, fp, ip}
     4bc:	0034c000 	eorseq	ip, r4, r0
     4c0:	d3150000 	tstle	r5, #0
     4c4:	02000001 	andeq	r0, r0, #1
     4c8:	00012e95 	muleq	r1, r5, lr
     4cc:	64910200 	ldrvs	r0, [r1], #512	; 0x200
     4d0:	bc040000 	stclt	0, cr0, [r4], {-0}
     4d4:	7f000000 	svcvc	0x00000000
     4d8:	05000003 	streq	r0, [r0, #-3]
     4dc:	00000051 	andeq	r0, r0, r1, asr r0
     4e0:	191b0041 	ldmdbne	fp, {r0, r6}
     4e4:	02000000 	andeq	r0, r0, #0
     4e8:	00012e49 	andeq	r2, r1, r9, asr #28
     4ec:	0085d000 	addeq	sp, r5, r0
     4f0:	000094c0 	andeq	r9, r0, r0, asr #9
     4f4:	b19c0100 	orrslt	r0, ip, r0, lsl #2
     4f8:	12000003 	andne	r0, r0, #3
     4fc:	49020073 	stmdbmi	r2, {r0, r1, r4, r5, r6}
     500:	000003b1 			; <UNDEFINED> instruction: 0x000003b1
     504:	14749102 	ldrbtne	r9, [r4], #-258	; 0xfffffefe
     508:	4b020069 	blmi	806b4 <_start-0xbff8794c>
     50c:	0000012e 	andeq	r0, r0, lr, lsr #2
     510:	00789102 	rsbseq	r9, r8, r2, lsl #2
     514:	00b6040c 	adcseq	r0, r6, ip, lsl #8
     518:	03110000 	tsteq	r1, #0
     51c:	02000001 	andeq	r0, r0, #1
     520:	00025421 	andeq	r5, r2, r1, lsr #8
     524:	00856400 	addeq	r6, r5, r0, lsl #8
     528:	00006cc0 	andeq	r6, r0, r0, asr #25
     52c:	fa9c0100 	blx	fe700934 <__bss_end__+0x3e6f5f6c>
     530:	12000003 	andne	r0, r0, #3
     534:	02007063 	andeq	r7, r0, #99	; 0x63
     538:	0000b621 	andeq	fp, r0, r1, lsr #12
     53c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     540:	0000fe13 	andeq	pc, r0, r3, lsl lr	; <UNPREDICTABLE>
     544:	fa210200 	blx	840d4c <_start-0xbf7c72b4>
     548:	02000003 	andeq	r0, r0, #3
     54c:	d9137091 	ldmdble	r3, {r0, r4, r7, ip, sp, lr}
     550:	02000000 	andeq	r0, r0, #0
     554:	00005121 	andeq	r5, r0, r1, lsr #2
     558:	6c910200 	lfmvs	f0, 4, [r1], {0}
     55c:	35040c00 	strcc	r0, [r4, #-3072]	; 0xfffff400
     560:	11000001 	tstne	r0, r1
     564:	00000175 	andeq	r0, r0, r5, ror r1
     568:	02470602 	subeq	r0, r7, #2097152	; 0x200000
     56c:	83ac0000 			; <UNDEFINED> instruction: 0x83ac0000
     570:	01b8c000 			; <UNDEFINED> instruction: 0x01b8c000
     574:	9c010000 	stcls	0, cr0, [r1], {-0}
     578:	0000045f 	andeq	r0, r0, pc, asr r4
     57c:	00706312 	rsbseq	r6, r0, r2, lsl r3
     580:	00b60602 	adcseq	r0, r6, r2, lsl #12
     584:	91020000 	mrsls	r0, (UNDEF: 2)
     588:	00fe136c 	rscseq	r1, lr, ip, ror #6
     58c:	06020000 	streq	r0, [r2], -r0
     590:	000003fa 	strdeq	r0, [r0], -sl
     594:	13689102 	cmnne	r8, #-2147483648	; 0x80000000
     598:	000000d9 	ldrdeq	r0, [r0], -r9
     59c:	00510602 	subseq	r0, r1, r2, lsl #12
     5a0:	91020000 	mrsls	r0, (UNDEF: 2)
     5a4:	01841564 	orreq	r1, r4, r4, ror #10
     5a8:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     5ac:	00000247 	andeq	r0, r0, r7, asr #4
     5b0:	15749102 	ldrbne	r9, [r4, #-258]!	; 0xfffffefe
     5b4:	00000023 	andeq	r0, r0, r3, lsr #32
     5b8:	02470802 	subeq	r0, r7, #131072	; 0x20000
     5bc:	91020000 	mrsls	r0, (UNDEF: 2)
     5c0:	2f1c0070 	svccs	0x001c0070
     5c4:	01000000 	mrseq	r0, (UNDEF: 0)
     5c8:	00005844 	andeq	r5, r0, r4, asr #16
     5cc:	00835c00 	addeq	r5, r3, r0, lsl #24
     5d0:	000050c0 	andeq	r5, r0, r0, asr #1
     5d4:	129c0100 	addsne	r0, ip, #0, 2
     5d8:	44010063 	strmi	r0, [r1], #-99	; 0xffffff9d
     5dc:	00000058 	andeq	r0, r0, r8, asr r0
     5e0:	00789102 	rsbseq	r9, r8, r2, lsl #2
     5e4:	00021400 	andeq	r1, r2, r0, lsl #8
     5e8:	f8000400 			; <UNDEFINED> instruction: 0xf8000400
     5ec:	04000001 	streq	r0, [r0], #-1
     5f0:	00005201 	andeq	r5, r0, r1, lsl #4
     5f4:	02710c00 	rsbseq	r0, r1, #0, 24
     5f8:	01250000 			; <UNDEFINED> instruction: 0x01250000
     5fc:	94140000 	ldrls	r0, [r4], #-0
     600:	02dcc000 	sbcseq	ip, ip, #0
     604:	03a20000 			; <UNDEFINED> instruction: 0x03a20000
     608:	34020000 	strcc	r0, [r2], #-0
     60c:	00ca0402 	sbceq	r0, sl, r2, lsl #8
     610:	17030000 	strne	r0, [r3, -r0]
     614:	02000002 	andeq	r0, r0, #2
     618:	0000d105 	andeq	sp, r0, r5, lsl #2
     61c:	54030000 	strpl	r0, [r3], #-0
     620:	02000002 	andeq	r0, r0, #2
     624:	0000d106 	andeq	sp, r0, r6, lsl #2
     628:	1d030400 	cfstrsne	mvf0, [r3, #-0]
     62c:	02000002 	andeq	r0, r0, #2
     630:	0000d107 	andeq	sp, r0, r7, lsl #2
     634:	11030800 	tstne	r3, r0, lsl #16
     638:	02000002 	andeq	r0, r0, #2
     63c:	0000d108 	andeq	sp, r0, r8, lsl #2
     640:	49040c00 	stmdbmi	r4, {sl, fp}
     644:	02005244 	andeq	r5, r0, #68, 4	; 0x40000004
     648:	0000d109 	andeq	sp, r0, r9, lsl #2
     64c:	4f041000 	svcmi	0x00041000
     650:	02005244 	andeq	r5, r0, #68, 4	; 0x40000004
     654:	0000d10a 	andeq	sp, r0, sl, lsl #2
     658:	0c031400 	cfstrseq	mvf1, [r3], {-0}
     65c:	02000002 	andeq	r0, r0, #2
     660:	0000d10b 	andeq	sp, r0, fp, lsl #2
     664:	48031800 	stmdami	r3, {fp, ip}
     668:	02000002 	andeq	r0, r0, #2
     66c:	0000d10c 	andeq	sp, r0, ip, lsl #2
     670:	5b031c00 	blpl	c7678 <_start-0xbff40988>
     674:	02000002 	andeq	r0, r0, #2
     678:	0000d10d 	andeq	sp, r0, sp, lsl #2
     67c:	6c032000 	stcvs	0, cr2, [r3], {-0}
     680:	02000002 	andeq	r0, r0, #2
     684:	0000d10e 	andeq	sp, r0, lr, lsl #2
     688:	42042400 	andmi	r2, r4, #0, 8
     68c:	02005252 	andeq	r5, r0, #536870917	; 0x20000005
     690:	0000d10f 	andeq	sp, r0, pc, lsl #2
     694:	72042800 	andvc	r2, r4, #0, 16
     698:	02007365 	andeq	r7, r0, #-1811939327	; 0x94000001
     69c:	0000d110 	andeq	sp, r0, r0, lsl r1
     6a0:	ee032c00 	cdp	12, 0, cr2, cr3, cr0, {0}
     6a4:	02000001 	andeq	r0, r0, #1
     6a8:	0000d111 	andeq	sp, r0, r1, lsl r1
     6ac:	05003000 	streq	r3, [r0, #-0]
     6b0:	00f10704 	rscseq	r0, r1, r4, lsl #14
     6b4:	ca060000 	bgt	1806bc <_start-0xbfe87944>
     6b8:	07000000 	streq	r0, [r0, -r0]
     6bc:	00000241 	andeq	r0, r0, r1, asr #4
     6c0:	00251302 	eoreq	r1, r5, r2, lsl #6
     6c4:	30020000 	andcc	r0, r2, r0
     6c8:	017a0403 	cmneq	sl, r3, lsl #8
     6cc:	43040000 	movwmi	r0, #16384	; 0x4000
     6d0:	03003152 	movweq	r3, #338	; 0x152
     6d4:	0000d105 	andeq	sp, r0, r5, lsl #2
     6d8:	43040000 	movwmi	r0, #16384	; 0x4000
     6dc:	03003252 	movweq	r3, #594	; 0x252
     6e0:	0000d106 	andeq	sp, r0, r6, lsl #2
     6e4:	43040400 	movwmi	r0, #17408	; 0x4400
     6e8:	03003352 	movweq	r3, #850	; 0x352
     6ec:	0000d107 	andeq	sp, r0, r7, lsl #2
     6f0:	42040800 	andmi	r0, r4, #0, 16
     6f4:	03005252 	movweq	r5, #594	; 0x252
     6f8:	0000d108 	andeq	sp, r0, r8, lsl #2
     6fc:	25030c00 	strcs	r0, [r3, #-3072]	; 0xfffff400
     700:	03000002 	movweq	r0, #2
     704:	0000d109 	andeq	sp, r0, r9, lsl #2
     708:	07031000 	streq	r1, [r3, -r0]
     70c:	03000002 	movweq	r0, #2
     710:	0000d10a 	andeq	sp, r0, sl, lsl #2
     714:	52041400 	andpl	r1, r4, #0, 8
     718:	03005251 	movweq	r5, #593	; 0x251
     71c:	0000d10b 	andeq	sp, r0, fp, lsl #2
     720:	49041800 	stmdbmi	r4, {fp, ip}
     724:	03005253 	movweq	r5, #595	; 0x253
     728:	0000d10c 	andeq	sp, r0, ip, lsl #2
     72c:	49041c00 	stmdbmi	r4, {sl, fp, ip}
     730:	03005243 	movweq	r5, #579	; 0x243
     734:	0000d10d 	andeq	sp, r0, sp, lsl #2
     738:	52042000 	andpl	r2, r4, #0
     73c:	03005244 	movweq	r5, #580	; 0x244
     740:	0000d10e 	andeq	sp, r0, lr, lsl #2
     744:	54042400 	strpl	r2, [r4], #-1024	; 0xfffffc00
     748:	03005244 	movweq	r5, #580	; 0x244
     74c:	0000d10f 	andeq	sp, r0, pc, lsl #2
     750:	2a032800 	bcs	ca758 <_start-0xbff3d8a8>
     754:	03000002 	movweq	r0, #2
     758:	0000d110 	andeq	sp, r0, r0, lsl r1
     75c:	07002c00 	streq	r2, [r0, -r0, lsl #24]
     760:	0000024d 	andeq	r0, r0, sp, asr #4
     764:	00e11103 	rsceq	r1, r1, r3, lsl #2
     768:	60080000 	andvs	r0, r8, r0
     76c:	01000002 	tsteq	r0, r2
     770:	0001ac30 	andeq	sl, r1, r0, lsr ip
     774:	0096a400 	addseq	sl, r6, r0, lsl #8
     778:	00004cc0 	andeq	r4, r0, r0, asr #25
     77c:	ac9c0100 	ldfges	f0, [ip], {0}
     780:	09000001 	stmdbeq	r0, {r0}
     784:	01006863 	tsteq	r0, r3, ror #16
     788:	0001ac32 	andeq	sl, r1, r2, lsr ip
     78c:	7b910200 	blvc	fe440f94 <__bss_end__+0x3e4365cc>
     790:	08010500 	stmdaeq	r1, {r8, sl}
     794:	000000e7 	andeq	r0, r0, r7, ror #1
     798:	0001ac0a 	andeq	sl, r1, sl, lsl #24
     79c:	01f60b00 	mvnseq	r0, r0, lsl #22
     7a0:	2a010000 	bcs	407a8 <_start-0xbffc7858>
     7a4:	c000965c 	andgt	r9, r0, ip, asr r6
     7a8:	00000048 	andeq	r0, r0, r8, asr #32
     7ac:	01dc9c01 	bicseq	r9, ip, r1, lsl #24
     7b0:	300c0000 	andcc	r0, ip, r0
     7b4:	01000002 	tsteq	r0, r2
     7b8:	0001dc2a 	andeq	sp, r1, sl, lsr #24
     7bc:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     7c0:	b3040d00 	movwlt	r0, #19712	; 0x4d00
     7c4:	0b000001 	bleq	7d0 <_start-0xc0007830>
     7c8:	000001e2 	andeq	r0, r0, r2, ror #3
     7cc:	95fc2301 	ldrbls	r2, [ip, #769]!	; 0x301
     7d0:	0060c000 	rsbeq	ip, r0, r0
     7d4:	9c010000 	stcls	0, cr0, [r1], {-0}
     7d8:	00000206 	andeq	r0, r0, r6, lsl #4
     7dc:	0002020c 	andeq	r0, r2, ip, lsl #4
     7e0:	b3230100 			; <UNDEFINED> instruction: 0xb3230100
     7e4:	02000001 	andeq	r0, r0, #1
     7e8:	0e007491 	mcreq	4, 0, r7, cr0, cr1, {4}
     7ec:	00000235 	andeq	r0, r0, r5, lsr r2
     7f0:	94140501 	ldrls	r0, [r4], #-1281	; 0xfffffaff
     7f4:	01e8c000 	mvneq	ip, r0
     7f8:	9c010000 	stcls	0, cr0, [r1], {-0}
     7fc:	00004900 	andeq	r4, r0, r0, lsl #18
     800:	d0000400 	andle	r0, r0, r0, lsl #8
     804:	04000002 	streq	r0, [r0], #-2
     808:	00005201 	andeq	r5, r0, r1, lsl #4
     80c:	028a0c00 	addeq	r0, sl, #0, 24
     810:	01250000 			; <UNDEFINED> instruction: 0x01250000
     814:	96f00000 	ldrbtls	r0, [r0], r0
     818:	0018c000 	andseq	ip, r8, r0
     81c:	044c0000 	strbeq	r0, [ip], #-0
     820:	69020000 	stmdbvs	r2, {}	; <UNPREDICTABLE>
     824:	34020100 	strcc	r0, [r2], #-256	; 0xffffff00
     828:	05000000 	streq	r0, [r0, #-0]
     82c:	00a98c03 	adceq	r8, r9, r3, lsl #24
     830:	070403c0 	streq	r0, [r4, -r0, asr #7]
     834:	000000f1 	strdeq	r0, [r0], -r1
     838:	00028304 	andeq	r8, r2, r4, lsl #6
     83c:	f0030100 			; <UNDEFINED> instruction: 0xf0030100
     840:	18c00096 	stmiane	r0, {r1, r2, r4, r7}^
     844:	01000000 	mrseq	r0, (UNDEF: 0)
     848:	02dc009c 	sbcseq	r0, ip, #156	; 0x9c
     84c:	00040000 	andeq	r0, r4, r0
     850:	00000318 	andeq	r0, r0, r8, lsl r3
     854:	00520104 	subseq	r0, r2, r4, lsl #2
     858:	700c0000 	andvc	r0, ip, r0
     85c:	25000003 	strcs	r0, [r0, #-3]
     860:	08000001 	stmdaeq	r0, {r0}
     864:	84c00097 	strbhi	r0, [r0], #151	; 0x97
     868:	87000002 	strhi	r0, [r0, -r2]
     86c:	02000004 	andeq	r0, r0, #4
     870:	ca040234 	bgt	101148 <_start-0xbff06eb8>
     874:	03000000 	movweq	r0, #0
     878:	00000217 	andeq	r0, r0, r7, lsl r2
     87c:	00d10502 	sbcseq	r0, r1, r2, lsl #10
     880:	03000000 	movweq	r0, #0
     884:	00000254 	andeq	r0, r0, r4, asr r2
     888:	00d10602 	sbcseq	r0, r1, r2, lsl #12
     88c:	03040000 	movweq	r0, #16384	; 0x4000
     890:	0000021d 	andeq	r0, r0, sp, lsl r2
     894:	00d10702 	sbcseq	r0, r1, r2, lsl #14
     898:	03080000 	movweq	r0, #32768	; 0x8000
     89c:	00000211 	andeq	r0, r0, r1, lsl r2
     8a0:	00d10802 	sbcseq	r0, r1, r2, lsl #16
     8a4:	040c0000 	streq	r0, [ip], #-0
     8a8:	00524449 	subseq	r4, r2, r9, asr #8
     8ac:	00d10902 	sbcseq	r0, r1, r2, lsl #18
     8b0:	04100000 	ldreq	r0, [r0], #-0
     8b4:	0052444f 	subseq	r4, r2, pc, asr #8
     8b8:	00d10a02 	sbcseq	r0, r1, r2, lsl #20
     8bc:	03140000 	tsteq	r4, #0
     8c0:	0000020c 	andeq	r0, r0, ip, lsl #4
     8c4:	00d10b02 	sbcseq	r0, r1, r2, lsl #22
     8c8:	03180000 	tsteq	r8, #0
     8cc:	00000248 	andeq	r0, r0, r8, asr #4
     8d0:	00d10c02 	sbcseq	r0, r1, r2, lsl #24
     8d4:	031c0000 	tsteq	ip, #0
     8d8:	0000025b 	andeq	r0, r0, fp, asr r2
     8dc:	00d10d02 	sbcseq	r0, r1, r2, lsl #26
     8e0:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
     8e4:	0000026c 	andeq	r0, r0, ip, ror #4
     8e8:	00d10e02 	sbcseq	r0, r1, r2, lsl #28
     8ec:	04240000 	strteq	r0, [r4], #-0
     8f0:	00525242 	subseq	r5, r2, r2, asr #4
     8f4:	00d10f02 	sbcseq	r0, r1, r2, lsl #30
     8f8:	04280000 	strteq	r0, [r8], #-0
     8fc:	00736572 	rsbseq	r6, r3, r2, ror r5
     900:	00d11002 	sbcseq	r1, r1, r2
     904:	032c0000 			; <UNDEFINED> instruction: 0x032c0000
     908:	000001ee 	andeq	r0, r0, lr, ror #3
     90c:	00d11102 	sbcseq	r1, r1, r2, lsl #2
     910:	00300000 	eorseq	r0, r0, r0
     914:	f1070405 			; <UNDEFINED> instruction: 0xf1070405
     918:	06000000 	streq	r0, [r0], -r0
     91c:	000000ca 	andeq	r0, r0, sl, asr #1
     920:	00024107 	andeq	r4, r2, r7, lsl #2
     924:	25130200 	ldrcs	r0, [r3, #-512]	; 0xfffffe00
     928:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     92c:	00ca0407 	sbceq	r0, sl, r7, lsl #8
     930:	39030000 	stmdbcc	r3, {}	; <UNPREDICTABLE>
     934:	00000107 	andeq	r0, r0, r7, lsl #2
     938:	0002f609 	andeq	pc, r2, r9, lsl #12
     93c:	7b090000 	blvc	240944 <_start-0xbfdc76bc>
     940:	01000003 	tsteq	r0, r3
     944:	464c410a 	strbmi	r4, [ip], -sl, lsl #2
     948:	ab090200 	blge	241150 <_start-0xbfdc6eb0>
     94c:	03000002 	movweq	r0, #2
     950:	03550700 	cmpeq	r5, #0, 14
     954:	3e030000 	cdpcc	0, 0, cr0, cr3, cr0, {0}
     958:	000000e1 	andeq	r0, r0, r1, ror #1
     95c:	ca040708 	bgt	102584 <_start-0xbff05a7c>
     960:	03000000 	movweq	r0, #0
     964:	00012a43 	andeq	r2, r1, r3, asr #20
     968:	50500a00 	subspl	r0, r0, r0, lsl #20
     96c:	4f0a0000 	svcmi	0x000a0000
     970:	00010044 	andeq	r0, r1, r4, asr #32
     974:	00036207 	andeq	r6, r3, r7, lsl #4
     978:	12460300 	subne	r0, r6, #0, 6
     97c:	08000001 	stmdaeq	r0, {r0}
     980:	00ca0407 	sbceq	r0, sl, r7, lsl #8
     984:	4a030000 	bmi	c098c <_start-0xbff47674>
     988:	0000015b 	andeq	r0, r0, fp, asr r1
     98c:	574f4c0a 	strbpl	r4, [pc, -sl, lsl #24]
     990:	fc090000 	stc2	0, cr0, [r9], {-0}
     994:	01000002 	tsteq	r0, r2
     998:	0002c509 	andeq	ip, r2, r9, lsl #10
     99c:	c0090200 	andgt	r0, r9, r0, lsl #4
     9a0:	03000002 	movweq	r0, #2
     9a4:	03460700 	movteq	r0, #26368	; 0x6700
     9a8:	50030000 	andpl	r0, r3, r0
     9ac:	00000135 	andeq	r0, r0, r5, lsr r1
     9b0:	ca040708 	bgt	1025d8 <_start-0xbff05a28>
     9b4:	03000000 	movweq	r0, #0
     9b8:	00018454 	andeq	r8, r1, r4, asr r4
     9bc:	02db0900 	sbcseq	r0, fp, #0, 18
     9c0:	0a000000 	beq	9c8 <_start-0xc0007638>
     9c4:	01005550 	tsteq	r0, r0, asr r5
     9c8:	0044500a 	subeq	r5, r4, sl
     9cc:	0f070002 	svceq	0x00070002
     9d0:	03000003 	movweq	r0, #3
     9d4:	00016659 	andeq	r6, r1, r9, asr r6
     9d8:	04070800 	streq	r0, [r7], #-2048	; 0xfffff800
     9dc:	000000ca 	andeq	r0, r0, sl, asr #1
     9e0:	01a95d03 			; <UNDEFINED> instruction: 0x01a95d03
     9e4:	e3090000 	movw	r0, #36864	; 0x9000
     9e8:	00000002 	andeq	r0, r0, r2
     9ec:	0002d009 	andeq	sp, r2, r9
     9f0:	07000100 	streq	r0, [r0, -r0, lsl #2]
     9f4:	00000297 	muleq	r0, r7, r2
     9f8:	018f6103 	orreq	r6, pc, r3, lsl #2
     9fc:	10020000 	andne	r0, r2, r0
     a00:	01ed6403 	mvneq	r6, r3, lsl #8
     a04:	82030000 	andhi	r0, r3, #0
     a08:	03000003 	movweq	r0, #3
     a0c:	00010766 	andeq	r0, r1, r6, ror #14
     a10:	b2030000 	andlt	r0, r3, #0
     a14:	03000002 	movweq	r0, #2
     a18:	00012a67 	andeq	r2, r1, r7, ror #20
     a1c:	2f030400 	svccs	0x00030400
     a20:	03000003 	movweq	r0, #3
     a24:	00015b68 	andeq	r5, r1, r8, ror #22
     a28:	f0030800 			; <UNDEFINED> instruction: 0xf0030800
     a2c:	03000002 	movweq	r0, #2
     a30:	00018469 	andeq	r8, r1, r9, ror #8
     a34:	07000c00 	streq	r0, [r0, -r0, lsl #24]
     a38:	00000303 	andeq	r0, r0, r3, lsl #6
     a3c:	01b46a03 			; <UNDEFINED> instruction: 0x01b46a03
     a40:	01050000 	mrseq	r0, (UNDEF: 5)
     a44:	0000e708 	andeq	lr, r0, r8, lsl #14
     a48:	01f80b00 	mvnseq	r0, r0, lsl #22
     a4c:	040c0000 	streq	r0, [ip], #-0
     a50:	000000d6 	ldrdeq	r0, [r0], -r6
     a54:	0002a20d 	andeq	sl, r2, sp, lsl #4
     a58:	4c270100 	stfmis	f0, [r7], #-0
     a5c:	ec000002 	stc	0, cr0, [r0], {2}
     a60:	a0c00098 	smullge	r0, r0, r8, r0	; <UNPREDICTABLE>
     a64:	01000000 	mrseq	r0, (UNDEF: 0)
     a68:	00024c9c 	muleq	r2, ip, ip
     a6c:	032a0e00 			; <UNDEFINED> instruction: 0x032a0e00
     a70:	27010000 	strcs	r0, [r1, -r0]
     a74:	00000253 	andeq	r0, r0, r3, asr r2
     a78:	0f749102 	svceq	0x00749102
     a7c:	00637273 	rsbeq	r7, r3, r3, ror r2
     a80:	02532701 	subseq	r2, r3, #262144	; 0x40000
     a84:	91020000 	mrsls	r0, (UNDEF: 2)
     a88:	00691070 	rsbeq	r1, r9, r0, ror r0
     a8c:	024c2d01 	subeq	r2, ip, #1, 26	; 0x40
     a90:	91020000 	mrsls	r0, (UNDEF: 2)
     a94:	04110078 	ldreq	r0, [r1], #-120	; 0xffffff88
     a98:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
     a9c:	ff040c00 			; <UNDEFINED> instruction: 0xff040c00
     aa0:	12000001 	andne	r0, r0, #1
     aa4:	00000337 	andeq	r0, r0, r7, lsr r3
     aa8:	98641a01 	stmdals	r4!, {r0, r9, fp, ip}^
     aac:	0088c000 	addeq	ip, r8, r0
     ab0:	9c010000 	stcls	0, cr0, [r1], {-0}
     ab4:	00000299 	muleq	r0, r9, r2
     ab8:	0002ca0e 	andeq	ip, r2, lr, lsl #20
     abc:	041a0100 	ldreq	r0, [sl], #-256	; 0xffffff00
     ac0:	02000002 	andeq	r0, r0, #2
     ac4:	700f7891 	mulvc	pc, r1, r8	; <UNPREDICTABLE>
     ac8:	01006e69 	tsteq	r0, r9, ror #28
     acc:	0000ca1a 	andeq	ip, r0, sl, lsl sl
     ad0:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     ad4:	0002b90e 	andeq	fp, r2, lr, lsl #18
     ad8:	a91a0100 	ldmdbge	sl, {r8}
     adc:	02000001 	andeq	r0, r0, #1
     ae0:	12007091 	andne	r7, r0, #145	; 0x91
     ae4:	0000031c 	andeq	r0, r0, ip, lsl r3
     ae8:	97080301 	strls	r0, [r8, -r1, lsl #6]
     aec:	015cc000 	cmpeq	ip, r0
     af0:	9c010000 	stcls	0, cr0, [r1], {-0}
     af4:	000002d9 	ldrdeq	r0, [r0], -r9
     af8:	0002ca0e 	andeq	ip, r2, lr, lsl #20
     afc:	04030100 	streq	r0, [r3], #-256	; 0xffffff00
     b00:	02000002 	andeq	r0, r0, #2
     b04:	700f7891 	mulvc	pc, r1, r8	; <UNPREDICTABLE>
     b08:	01006e69 	tsteq	r0, r9, ror #28
     b0c:	0000ca03 	andeq	ip, r0, r3, lsl #20
     b10:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     b14:	000ec70e 	andeq	ip, lr, lr, lsl #14
     b18:	d9030100 	stmdble	r3, {r8}
     b1c:	02000002 	andeq	r0, r0, #2
     b20:	0c007091 	stceq	0, cr7, [r0], {145}	; 0x91
     b24:	0001ed04 	andeq	lr, r1, r4, lsl #26
     b28:	105c0000 	subsne	r0, ip, r0
     b2c:	00040000 	andeq	r0, r4, r0
     b30:	00000417 	andeq	r0, r0, r7, lsl r4
     b34:	00520104 	subseq	r0, r2, r4, lsl #2
     b38:	4f0c0000 	svcmi	0x000c0000
     b3c:	25000008 	strcs	r0, [r0, #-8]
     b40:	8c000001 	stchi	0, cr0, [r0], {1}
     b44:	a0c00099 	smullge	r0, r0, r9, r0	; <UNPREDICTABLE>
     b48:	26000003 	strcs	r0, [r0], -r3
     b4c:	02000005 	andeq	r0, r0, #5
     b50:	be040230 	mcrlt	2, 0, r0, cr4, cr0, {1}
     b54:	03000000 	movweq	r0, #0
     b58:	00315243 	eorseq	r5, r1, r3, asr #4
     b5c:	00c50502 	sbceq	r0, r5, r2, lsl #10
     b60:	03000000 	movweq	r0, #0
     b64:	00325243 	eorseq	r5, r2, r3, asr #4
     b68:	00c50602 	sbceq	r0, r5, r2, lsl #12
     b6c:	03040000 	movweq	r0, #16384	; 0x4000
     b70:	00335243 	eorseq	r5, r3, r3, asr #4
     b74:	00c50702 	sbceq	r0, r5, r2, lsl #14
     b78:	03080000 	movweq	r0, #32768	; 0x8000
     b7c:	00525242 	subseq	r5, r2, r2, asr #4
     b80:	00c50802 	sbceq	r0, r5, r2, lsl #16
     b84:	040c0000 	streq	r0, [ip], #-0
     b88:	00000225 	andeq	r0, r0, r5, lsr #4
     b8c:	00c50902 	sbceq	r0, r5, r2, lsl #18
     b90:	04100000 	ldreq	r0, [r0], #-0
     b94:	00000207 	andeq	r0, r0, r7, lsl #4
     b98:	00c50a02 	sbceq	r0, r5, r2, lsl #20
     b9c:	03140000 	tsteq	r4, #0
     ba0:	00525152 	subseq	r5, r2, r2, asr r1
     ba4:	00c50b02 	sbceq	r0, r5, r2, lsl #22
     ba8:	03180000 	tsteq	r8, #0
     bac:	00525349 	subseq	r5, r2, r9, asr #6
     bb0:	00c50c02 	sbceq	r0, r5, r2, lsl #24
     bb4:	031c0000 	tsteq	ip, #0
     bb8:	00524349 	subseq	r4, r2, r9, asr #6
     bbc:	00c50d02 	sbceq	r0, r5, r2, lsl #26
     bc0:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
     bc4:	00524452 	subseq	r4, r2, r2, asr r4
     bc8:	00c50e02 	sbceq	r0, r5, r2, lsl #28
     bcc:	03240000 			; <UNDEFINED> instruction: 0x03240000
     bd0:	00524454 	subseq	r4, r2, r4, asr r4
     bd4:	00c50f02 	sbceq	r0, r5, r2, lsl #30
     bd8:	04280000 	strteq	r0, [r8], #-0
     bdc:	0000022a 	andeq	r0, r0, sl, lsr #4
     be0:	00c51002 	sbceq	r1, r5, r2
     be4:	002c0000 	eoreq	r0, ip, r0
     be8:	f1070405 			; <UNDEFINED> instruction: 0xf1070405
     bec:	06000000 	streq	r0, [r0], -r0
     bf0:	000000be 	strheq	r0, [r0], -lr
     bf4:	00024d07 	andeq	r4, r2, r7, lsl #26
     bf8:	25110200 	ldrcs	r0, [r1, #-512]	; 0xfffffe00
     bfc:	02000000 	andeq	r0, r0, #0
     c00:	7a040334 	bvc	1018d8 <_start-0xbff06728>
     c04:	04000001 	streq	r0, [r0], #-1
     c08:	00000217 	andeq	r0, r0, r7, lsl r2
     c0c:	00c50503 	sbceq	r0, r5, r3, lsl #10
     c10:	04000000 	streq	r0, [r0], #-0
     c14:	00000254 	andeq	r0, r0, r4, asr r2
     c18:	00c50603 	sbceq	r0, r5, r3, lsl #12
     c1c:	04040000 	streq	r0, [r4], #-0
     c20:	0000021d 	andeq	r0, r0, sp, lsl r2
     c24:	00c50703 	sbceq	r0, r5, r3, lsl #14
     c28:	04080000 	streq	r0, [r8], #-0
     c2c:	00000211 	andeq	r0, r0, r1, lsl r2
     c30:	00c50803 	sbceq	r0, r5, r3, lsl #16
     c34:	030c0000 	movweq	r0, #49152	; 0xc000
     c38:	00524449 	subseq	r4, r2, r9, asr #8
     c3c:	00c50903 	sbceq	r0, r5, r3, lsl #18
     c40:	03100000 	tsteq	r0, #0
     c44:	0052444f 	subseq	r4, r2, pc, asr #8
     c48:	00c50a03 	sbceq	r0, r5, r3, lsl #20
     c4c:	04140000 	ldreq	r0, [r4], #-0
     c50:	0000020c 	andeq	r0, r0, ip, lsl #4
     c54:	00c50b03 	sbceq	r0, r5, r3, lsl #22
     c58:	04180000 	ldreq	r0, [r8], #-0
     c5c:	00000248 	andeq	r0, r0, r8, asr #4
     c60:	00c50c03 	sbceq	r0, r5, r3, lsl #24
     c64:	041c0000 	ldreq	r0, [ip], #-0
     c68:	0000025b 	andeq	r0, r0, fp, asr r2
     c6c:	00c50d03 	sbceq	r0, r5, r3, lsl #26
     c70:	04200000 	strteq	r0, [r0], #-0
     c74:	0000026c 	andeq	r0, r0, ip, ror #4
     c78:	00c50e03 	sbceq	r0, r5, r3, lsl #28
     c7c:	03240000 			; <UNDEFINED> instruction: 0x03240000
     c80:	00525242 	subseq	r5, r2, r2, asr #4
     c84:	00c50f03 	sbceq	r0, r5, r3, lsl #30
     c88:	03280000 			; <UNDEFINED> instruction: 0x03280000
     c8c:	00736572 	rsbseq	r6, r3, r2, ror r5
     c90:	00c51003 	sbceq	r1, r5, r3
     c94:	042c0000 	strteq	r0, [ip], #-0
     c98:	000001ee 	andeq	r0, r0, lr, ror #3
     c9c:	00c51103 	sbceq	r1, r5, r3, lsl #2
     ca0:	00300000 	eorseq	r0, r0, r0
     ca4:	00024107 	andeq	r4, r2, r7, lsl #2
     ca8:	d5130300 	ldrle	r0, [r3, #-768]	; 0xfffffd00
     cac:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     cb0:	04041000 	streq	r1, [r4], #-0
     cb4:	00000e37 	andeq	r0, r0, r7, lsr lr
     cb8:	000eb104 	andeq	fp, lr, r4, lsl #2
     cbc:	c5050400 	strgt	r0, [r5, #-1024]	; 0xfffffc00
     cc0:	00000000 	andeq	r0, r0, r0
     cc4:	00059304 	andeq	r9, r5, r4, lsl #6
     cc8:	47060400 	strmi	r0, [r6, -r0, lsl #8]
     ccc:	0400000e 	streq	r0, [r0], #-14
     cd0:	00064f04 	andeq	r4, r6, r4, lsl #30
     cd4:	c5070400 	strgt	r0, [r7, #-1024]	; 0xfffffc00
     cd8:	0c000000 	stceq	0, cr0, [r0], {-0}
     cdc:	00094e04 	andeq	r4, r9, r4, lsl #28
     ce0:	c5080400 	strgt	r0, [r8, #-1024]	; 0xfffffc00
     ce4:	10000000 	andne	r0, r0, r0
     ce8:	00059804 	andeq	r9, r5, r4, lsl #16
     cec:	5c090400 	cfstrspl	mvf0, [r9], {-0}
     cf0:	1400000e 	strne	r0, [r0], #-14
     cf4:	0007dc04 	andeq	sp, r7, r4, lsl #24
     cf8:	c50a0400 	strgt	r0, [sl, #-1024]	; 0xfffffc00
     cfc:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     d00:	000d7904 	andeq	r7, sp, r4, lsl #18
     d04:	c50b0400 	strgt	r0, [fp, #-1024]	; 0xfffffc00
     d08:	1c000000 	stcne	0, cr0, [r0], {-0}
     d0c:	0007ac04 	andeq	sl, r7, r4, lsl #24
     d10:	c50c0400 	strgt	r0, [ip, #-1024]	; 0xfffffc00
     d14:	20000000 	andcs	r0, r0, r0
     d18:	000e7c04 	andeq	r7, lr, r4, lsl #24
     d1c:	c50d0400 	strgt	r0, [sp, #-1024]	; 0xfffffc00
     d20:	24000000 	strcs	r0, [r0], #-0
     d24:	000a5004 	andeq	r5, sl, r4
     d28:	c50e0400 	strgt	r0, [lr, #-1024]	; 0xfffffc00
     d2c:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
     d30:	000afa04 	andeq	pc, sl, r4, lsl #20
     d34:	c50f0400 	strgt	r0, [pc, #-1024]	; 93c <_start-0xc00076c4>
     d38:	2c000000 	stccs	0, cr0, [r0], {-0}
     d3c:	0003d804 	andeq	sp, r3, r4, lsl #16
     d40:	c5100400 	ldrgt	r0, [r0, #-1024]	; 0xfffffc00
     d44:	30000000 	andcc	r0, r0, r0
     d48:	00059d04 	andeq	r9, r5, r4, lsl #26
     d4c:	47110400 	ldrmi	r0, [r1, -r0, lsl #8]
     d50:	3400000e 	strcc	r0, [r0], #-14
     d54:	00041a04 	andeq	r1, r4, r4, lsl #20
     d58:	c5120400 	ldrgt	r0, [r2, #-1024]	; 0xfffffc00
     d5c:	3c000000 	stccc	0, cr0, [r0], {-0}
     d60:	000be704 	andeq	lr, fp, r4, lsl #14
     d64:	c5130400 	ldrgt	r0, [r3, #-1024]	; 0xfffffc00
     d68:	40000000 	andmi	r0, r0, r0
     d6c:	00098604 	andeq	r8, r9, r4, lsl #12
     d70:	c5140400 	ldrgt	r0, [r4, #-1024]	; 0xfffffc00
     d74:	44000000 	strmi	r0, [r0], #-0
     d78:	000c6304 	andeq	r6, ip, r4, lsl #6
     d7c:	c5150400 	ldrgt	r0, [r5, #-1024]	; 0xfffffc00
     d80:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
     d84:	0005a204 	andeq	sl, r5, r4, lsl #4
     d88:	71160400 	tstvc	r6, r0, lsl #8
     d8c:	4c00000e 	stcmi	0, cr0, [r0], {14}
     d90:	000e9604 	andeq	r9, lr, r4, lsl #12
     d94:	c5170400 	ldrgt	r0, [r7, #-1024]	; 0xfffffc00
     d98:	80000000 	andhi	r0, r0, r0
     d9c:	0008c104 	andeq	ip, r8, r4, lsl #2
     da0:	c5180400 	ldrgt	r0, [r8, #-1024]	; 0xfffffc00
     da4:	84000000 	strhi	r0, [r0], #-0
     da8:	0008cb04 	andeq	ip, r8, r4, lsl #22
     dac:	c5190400 	ldrgt	r0, [r9, #-1024]	; 0xfffffc00
     db0:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
     db4:	00058904 	andeq	r8, r5, r4, lsl #18
     db8:	c51a0400 	ldrgt	r0, [sl, #-1024]	; 0xfffffc00
     dbc:	8c000000 	stchi	0, cr0, [r0], {-0}
     dc0:	00072d04 	andeq	r2, r7, r4, lsl #26
     dc4:	c51b0400 	ldrgt	r0, [fp, #-1024]	; 0xfffffc00
     dc8:	90000000 	andls	r0, r0, r0
     dcc:	000c5c04 	andeq	r5, ip, r4, lsl #24
     dd0:	c51c0400 	ldrgt	r0, [ip, #-1024]	; 0xfffffc00
     dd4:	94000000 	strls	r0, [r0], #-0
     dd8:	0004e704 	andeq	lr, r4, r4, lsl #14
     ddc:	c51d0400 	ldrgt	r0, [sp, #-1024]	; 0xfffffc00
     de0:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
     de4:	000a5a04 	andeq	r5, sl, r4, lsl #20
     de8:	c51e0400 	ldrgt	r0, [lr, #-1024]	; 0xfffffc00
     dec:	9c000000 	stcls	0, cr0, [r0], {-0}
     df0:	000e5a04 	andeq	r5, lr, r4, lsl #20
     df4:	c51f0400 	ldrgt	r0, [pc, #-1024]	; 9fc <_start-0xc0007604>
     df8:	a0000000 	andge	r0, r0, r0
     dfc:	000f1004 	andeq	r1, pc, r4
     e00:	c5200400 	strgt	r0, [r0, #-1024]!	; 0xfffffc00
     e04:	a4000000 	strge	r0, [r0], #-0
     e08:	0005a704 	andeq	sl, r5, r4, lsl #14
     e0c:	86210400 	strthi	r0, [r1], -r0, lsl #8
     e10:	a800000e 	stmdage	r0, {r1, r2, r3}
     e14:	000e4e04 	andeq	r4, lr, r4, lsl #28
     e18:	c5220400 	strgt	r0, [r2, #-1024]!	; 0xfffffc00
     e1c:	c0000000 	andgt	r0, r0, r0
     e20:	00050b04 	andeq	r0, r5, r4, lsl #22
     e24:	c5230400 	strgt	r0, [r3, #-1024]!	; 0xfffffc00
     e28:	c4000000 	strgt	r0, [r0], #-0
     e2c:	0004b204 	andeq	fp, r4, r4, lsl #4
     e30:	c5240400 	strgt	r0, [r4, #-1024]!	; 0xfffffc00
     e34:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
     e38:	000e3804 	andeq	r3, lr, r4, lsl #16
     e3c:	c5250400 	strgt	r0, [r5, #-1024]!	; 0xfffffc00
     e40:	cc000000 	stcgt	0, cr0, [r0], {-0}
     e44:	000b0c04 	andeq	r0, fp, r4, lsl #24
     e48:	c5260400 	strgt	r0, [r6, #-1024]!	; 0xfffffc00
     e4c:	d0000000 	andle	r0, r0, r0
     e50:	00098e04 	andeq	r8, r9, r4, lsl #28
     e54:	c5270400 	strgt	r0, [r7, #-1024]!	; 0xfffffc00
     e58:	d4000000 	strle	r0, [r0], #-0
     e5c:	000b0304 	andeq	r0, fp, r4, lsl #6
     e60:	c5280400 	strgt	r0, [r8, #-1024]!	; 0xfffffc00
     e64:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
     e68:	0005ac04 	andeq	sl, r5, r4, lsl #24
     e6c:	9b290400 	blls	a41e74 <_start-0xbf5c618c>
     e70:	dc00000e 	stcle	0, cr0, [r0], {14}
     e74:	00041009 	andeq	r1, r4, r9
     e78:	c52a0400 	strgt	r0, [sl, #-1024]!	; 0xfffffc00
     e7c:	00000000 	andeq	r0, r0, r0
     e80:	0aab0901 	beq	feac328c <__bss_end__+0x3eab88c4>
     e84:	2b040000 	blcs	100e8c <_start-0xbff07174>
     e88:	000000c5 	andeq	r0, r0, r5, asr #1
     e8c:	81090104 	tsthi	r9, r4, lsl #2
     e90:	0400000d 	streq	r0, [r0], #-13
     e94:	0000c52c 	andeq	ip, r0, ip, lsr #10
     e98:	09010800 	stmdbeq	r1, {fp}
     e9c:	00000bd3 	ldrdeq	r0, [r0], -r3
     ea0:	00c52d04 	sbceq	r2, r5, r4, lsl #26
     ea4:	010c0000 	mrseq	r0, (UNDEF: 12)
     ea8:	000b5d09 	andeq	r5, fp, r9, lsl #26
     eac:	c52e0400 	strgt	r0, [lr, #-1024]!	; 0xfffffc00
     eb0:	10000000 	andne	r0, r0, r0
     eb4:	0cc50901 			; <UNDEFINED> instruction: 0x0cc50901
     eb8:	2f040000 	svccs	0x00040000
     ebc:	000000c5 	andeq	r0, r0, r5, asr #1
     ec0:	b1090114 	tstlt	r9, r4, lsl r1
     ec4:	04000005 	streq	r0, [r0], #-5
     ec8:	000eb030 	andeq	fp, lr, r0, lsr r0
     ecc:	09011800 	stmdbeq	r1, {fp, ip}
     ed0:	00000e27 	andeq	r0, r0, r7, lsr #28
     ed4:	00c53104 	sbceq	r3, r5, r4, lsl #2
     ed8:	01400000 	mrseq	r0, (UNDEF: 64)
     edc:	000a4109 	andeq	r4, sl, r9, lsl #2
     ee0:	c5320400 	ldrgt	r0, [r2, #-1024]!	; 0xfffffc00
     ee4:	44000000 	strmi	r0, [r0], #-0
     ee8:	05b60901 	ldreq	r0, [r6, #2305]!	; 0x901
     eec:	33040000 	movwcc	r0, #16384	; 0x4000
     ef0:	00000ec5 	andeq	r0, r0, r5, asr #29
     ef4:	ec090148 	stfs	f0, [r9], {72}	; 0x48
     ef8:	0400000e 	streq	r0, [r0], #-14
     efc:	0000c534 	andeq	ip, r0, r4, lsr r5
     f00:	09018000 	stmdbeq	r1, {pc}
     f04:	0000057d 	andeq	r0, r0, sp, ror r5
     f08:	00c53504 	sbceq	r3, r5, r4, lsl #10
     f0c:	01840000 	orreq	r0, r4, r0
     f10:	000b6809 	andeq	r6, fp, r9, lsl #16
     f14:	c5360400 	ldrgt	r0, [r6, #-1024]!	; 0xfffffc00
     f18:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
     f1c:	0e2c0901 	vmuleq.f16	s0, s24, s2	; <UNPREDICTABLE>
     f20:	37040000 	strcc	r0, [r4, -r0]
     f24:	000000c5 	andeq	r0, r0, r5, asr #1
     f28:	fe09018c 	cdp2	1, 0, cr0, cr9, cr12, {4}
     f2c:	04000007 	streq	r0, [r0], #-7
     f30:	0000c538 	andeq	ip, r0, r8, lsr r5
     f34:	09019000 	stmdbeq	r1, {ip, pc}
     f38:	000004ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     f3c:	00c53904 	sbceq	r3, r5, r4, lsl #18
     f40:	01940000 	orrseq	r0, r4, r0
     f44:	000b5109 	andeq	r5, fp, r9, lsl #2
     f48:	c53a0400 	ldrgt	r0, [sl, #-1024]!	; 0xfffffc00
     f4c:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
     f50:	08e50901 	stmiaeq	r5!, {r0, r8, fp}^
     f54:	3b040000 	blcc	100f5c <_start-0xbff070a4>
     f58:	000000c5 	andeq	r0, r0, r5, asr #1
     f5c:	3509019c 	strcc	r0, [r9, #-412]	; 0xfffffe64
     f60:	04000005 	streq	r0, [r0], #-5
     f64:	0000c53c 	andeq	ip, r0, ip, lsr r5
     f68:	0901a000 	stmdbeq	r1, {sp, pc}
     f6c:	000008e3 	andeq	r0, r0, r3, ror #17
     f70:	00c53d04 	sbceq	r3, r5, r4, lsl #26
     f74:	01a40000 			; <UNDEFINED> instruction: 0x01a40000
     f78:	0005bb09 	andeq	fp, r5, r9, lsl #22
     f7c:	da3e0400 	ble	f81f84 <_start-0xbf08607c>
     f80:	a800000e 	stmdage	r0, {r1, r2, r3}
     f84:	06c70901 	strbeq	r0, [r7], r1, lsl #18
     f88:	3f040000 	svccc	0x00040000
     f8c:	000000c5 	andeq	r0, r0, r5, asr #1
     f90:	b7090200 	strlt	r0, [r9, -r0, lsl #4]
     f94:	04000009 	streq	r0, [r0], #-9
     f98:	0000c540 	andeq	ip, r0, r0, asr #10
     f9c:	09020400 	stmdbeq	r2, {sl}
     fa0:	00000d38 	andeq	r0, r0, r8, lsr sp
     fa4:	00c54104 	sbceq	r4, r5, r4, lsl #2
     fa8:	02080000 	andeq	r0, r8, #0
     fac:	00045c09 	andeq	r5, r4, r9, lsl #24
     fb0:	c5420400 	strbgt	r0, [r2, #-1024]	; 0xfffffc00
     fb4:	0c000000 	stceq	0, cr0, [r0], {-0}
     fb8:	03b60902 			; <UNDEFINED> instruction: 0x03b60902
     fbc:	43040000 	movwmi	r0, #16384	; 0x4000
     fc0:	000000c5 	andeq	r0, r0, r5, asr #1
     fc4:	9b090210 	blls	24180c <_start-0xbfdc67f4>
     fc8:	0400000d 	streq	r0, [r0], #-13
     fcc:	0000c544 	andeq	ip, r0, r4, asr #10
     fd0:	09021400 	stmdbeq	r2, {sl, ip}
     fd4:	000004be 			; <UNDEFINED> instruction: 0x000004be
     fd8:	00c54504 	sbceq	r4, r5, r4, lsl #10
     fdc:	02180000 	andseq	r0, r8, #0
     fe0:	00077509 	andeq	r7, r7, r9, lsl #10
     fe4:	c5460400 	strbgt	r0, [r6, #-1024]	; 0xfffffc00
     fe8:	1c000000 	stcne	0, cr0, [r0], {-0}
     fec:	0c3e0902 			; <UNDEFINED> instruction: 0x0c3e0902
     ff0:	47040000 	strmi	r0, [r4, -r0]
     ff4:	000000c5 	andeq	r0, r0, r5, asr #1
     ff8:	88090220 	stmdahi	r9, {r5, r9}
     ffc:	04000003 	streq	r0, [r0], #-3
    1000:	0000c548 	andeq	ip, r0, r8, asr #10
    1004:	09022400 	stmdbeq	r2, {sl, sp}
    1008:	000006d5 	ldrdeq	r0, [r0], -r5
    100c:	0eda4904 	vfnmseq.f16	s9, s20, s8	; <UNPREDICTABLE>
    1010:	02280000 	eoreq	r0, r8, #0
    1014:	0004f109 	andeq	pc, r4, r9, lsl #2
    1018:	c54a0400 	strbgt	r0, [sl, #-1024]	; 0xfffffc00
    101c:	80000000 	andhi	r0, r0, r0
    1020:	07c60902 	strbeq	r0, [r6, r2, lsl #18]
    1024:	4b040000 	blmi	10102c <_start-0xbff06fd4>
    1028:	000000c5 	andeq	r0, r0, r5, asr #1
    102c:	95090284 	strls	r0, [r9, #-644]	; 0xfffffd7c
    1030:	0400000b 	streq	r0, [r0], #-11
    1034:	0000c54c 	andeq	ip, r0, ip, asr #10
    1038:	09028800 	stmdbeq	r2, {fp, pc}
    103c:	00000e64 	andeq	r0, r0, r4, ror #28
    1040:	00c54d04 	sbceq	r4, r5, r4, lsl #26
    1044:	028c0000 	addeq	r0, ip, #0
    1048:	00091809 	andeq	r1, r9, r9, lsl #16
    104c:	c54e0400 	strbgt	r0, [lr, #-1024]	; 0xfffffc00
    1050:	90000000 	andls	r0, r0, r0
    1054:	0c200902 			; <UNDEFINED> instruction: 0x0c200902
    1058:	4f040000 	svcmi	0x00040000
    105c:	000000c5 	andeq	r0, r0, r5, asr #1
    1060:	40090294 	mulmi	r9, r4, r2
    1064:	0400000f 	streq	r0, [r0], #-15
    1068:	0000c550 	andeq	ip, r0, r0, asr r5
    106c:	09029800 	stmdbeq	r2, {fp, ip, pc}
    1070:	000005dc 	ldrdeq	r0, [r0], -ip
    1074:	00c55104 	sbceq	r5, r5, r4, lsl #2
    1078:	029c0000 	addseq	r0, ip, #0
    107c:	0003e009 	andeq	lr, r3, r9
    1080:	ef520400 	svc	0x00520400
    1084:	a000000e 	andge	r0, r0, lr
    1088:	0da90902 			; <UNDEFINED> instruction: 0x0da90902
    108c:	53040000 	movwpl	r0, #16384	; 0x4000
    1090:	000000c5 	andeq	r0, r0, r5, asr #1
    1094:	b9090300 	stmdblt	r9, {r8, r9}
    1098:	0400000d 	streq	r0, [r0], #-13
    109c:	0000c554 	andeq	ip, r0, r4, asr r5
    10a0:	09030400 	stmdbeq	r3, {sl}
    10a4:	00000d0e 	andeq	r0, r0, lr, lsl #26
    10a8:	00c55504 	sbceq	r5, r5, r4, lsl #10
    10ac:	03080000 	movweq	r0, #32768	; 0x8000
    10b0:	000ca709 	andeq	sl, ip, r9, lsl #14
    10b4:	c5560400 	ldrbgt	r0, [r6, #-1024]	; 0xfffffc00
    10b8:	0c000000 	stceq	0, cr0, [r0], {-0}
    10bc:	0a740903 	beq	1d034d0 <_start-0xbe304b30>
    10c0:	57040000 	strpl	r0, [r4, -r0]
    10c4:	000000c5 	andeq	r0, r0, r5, asr #1
    10c8:	46090310 			; <UNDEFINED> instruction: 0x46090310
    10cc:	0400000d 	streq	r0, [r0], #-13
    10d0:	0000c558 	andeq	ip, r0, r8, asr r5
    10d4:	09031400 	stmdbeq	r3, {sl, ip}
    10d8:	00000c87 	andeq	r0, r0, r7, lsl #25
    10dc:	00c55904 	sbceq	r5, r5, r4, lsl #18
    10e0:	03180000 	tsteq	r8, #0
    10e4:	000f1909 	andeq	r1, pc, r9, lsl #18
    10e8:	c55a0400 	ldrbgt	r0, [sl, #-1024]	; 0xfffffc00
    10ec:	1c000000 	stcne	0, cr0, [r0], {-0}
    10f0:	06100903 	ldreq	r0, [r0], -r3, lsl #18
    10f4:	5b040000 	blpl	1010fc <_start-0xbff06f04>
    10f8:	000000c5 	andeq	r0, r0, r5, asr #1
    10fc:	06090320 	streq	r0, [r9], -r0, lsr #6
    1100:	04000009 	streq	r0, [r0], #-9
    1104:	0000c55c 	andeq	ip, r0, ip, asr r5
    1108:	09032400 	stmdbeq	r3, {sl, sp}
    110c:	000003e6 	andeq	r0, r0, r6, ror #7
    1110:	0eda5d04 	cdpeq	13, 13, cr5, cr10, cr4, {0}
    1114:	03280000 			; <UNDEFINED> instruction: 0x03280000
    1118:	00099a09 	andeq	r9, r9, r9, lsl #20
    111c:	c55e0400 	ldrbgt	r0, [lr, #-1024]	; 0xfffffc00
    1120:	80000000 	andhi	r0, r0, r0
    1124:	0cd00903 			; <UNDEFINED> instruction: 0x0cd00903
    1128:	5f040000 	svcpl	0x00040000
    112c:	000000c5 	andeq	r0, r0, r5, asr #1
    1130:	b1090384 	smlabblt	r9, r4, r3, r0
    1134:	0400000b 	streq	r0, [r0], #-11
    1138:	0000c560 	andeq	ip, r0, r0, ror #10
    113c:	09038800 	stmdbeq	r3, {fp, pc}
    1140:	00000e86 	andeq	r0, r0, r6, lsl #29
    1144:	00c56104 	sbceq	r6, r5, r4, lsl #2
    1148:	038c0000 	orreq	r0, ip, #0
    114c:	00056d09 	andeq	r6, r5, r9, lsl #26
    1150:	c5620400 	strbgt	r0, [r2, #-1024]!	; 0xfffffc00
    1154:	90000000 	andls	r0, r0, r0
    1158:	08160903 	ldmdaeq	r6, {r0, r1, r8, fp}
    115c:	63040000 	movwvs	r0, #16384	; 0x4000
    1160:	000000c5 	andeq	r0, r0, r5, asr #1
    1164:	17090394 			; <UNDEFINED> instruction: 0x17090394
    1168:	04000007 	streq	r0, [r0], #-7
    116c:	0000c564 	andeq	ip, r0, r4, ror #10
    1170:	09039800 	stmdbeq	r3, {fp, ip, pc}
    1174:	00000a31 	andeq	r0, r0, r1, lsr sl
    1178:	00c56504 	sbceq	r6, r5, r4, lsl #10
    117c:	039c0000 	orrseq	r0, ip, #0
    1180:	0003ec09 	andeq	lr, r3, r9, lsl #24
    1184:	ef660400 	svc	0x00660400
    1188:	a000000e 	andge	r0, r0, lr
    118c:	046a0903 	strbteq	r0, [sl], #-2307	; 0xfffff6fd
    1190:	67040000 	strvs	r0, [r4, -r0]
    1194:	000000c5 	andeq	r0, r0, r5, asr #1
    1198:	67090400 	strvs	r0, [r9, -r0, lsl #8]
    119c:	04000008 	streq	r0, [r0], #-8
    11a0:	0000c568 	andeq	ip, r0, r8, ror #10
    11a4:	09040400 	stmdbeq	r4, {sl}
    11a8:	00000f37 	andeq	r0, r0, r7, lsr pc
    11ac:	00c56904 	sbceq	r6, r5, r4, lsl #18
    11b0:	04080000 	streq	r0, [r8], #-0
    11b4:	00097809 	andeq	r7, r9, r9, lsl #16
    11b8:	c56a0400 	strbgt	r0, [sl, #-1024]!	; 0xfffffc00
    11bc:	0c000000 	stceq	0, cr0, [r0], {-0}
    11c0:	0cb70904 			; <UNDEFINED> instruction: 0x0cb70904
    11c4:	6b040000 	blvs	1011cc <_start-0xbff06e34>
    11c8:	000000c5 	andeq	r0, r0, r5, asr #1
    11cc:	21090410 	tstcs	r9, r0, lsl r4
    11d0:	0400000b 	streq	r0, [r0], #-11
    11d4:	0000c56c 	andeq	ip, r0, ip, ror #10
    11d8:	09041400 	stmdbeq	r4, {sl, ip}
    11dc:	00000cf8 	strdeq	r0, [r0], -r8
    11e0:	00c56d04 	sbceq	r6, r5, r4, lsl #26
    11e4:	04180000 	ldreq	r0, [r8], #-0
    11e8:	00082609 	andeq	r2, r8, r9, lsl #12
    11ec:	c56e0400 	strbgt	r0, [lr, #-1024]!	; 0xfffffc00
    11f0:	1c000000 	stcne	0, cr0, [r0], {-0}
    11f4:	0d560904 	vldreq.16	s1, [r6, #-8]	; <UNPREDICTABLE>
    11f8:	6f040000 	svcvs	0x00040000
    11fc:	000000c5 	andeq	r0, r0, r5, asr #1
    1200:	f2090420 	vshl.s8	d0, d16, d9
    1204:	04000003 	streq	r0, [r0], #-3
    1208:	000f0470 	andeq	r0, pc, r0, ror r4	; <UNPREDICTABLE>
    120c:	09042400 	stmdbeq	r4, {sl, sp}
    1210:	000006f8 	strdeq	r0, [r0], -r8
    1214:	00c57104 	sbceq	r7, r5, r4, lsl #2
    1218:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    121c:	00096f09 	andeq	r6, r9, r9, lsl #30
    1220:	c5720400 	ldrbgt	r0, [r2, #-1024]!	; 0xfffffc00
    1224:	04000000 	streq	r0, [r0], #-0
    1228:	0eb60908 	vmoveq.f16	s0, #104	; 0x3f400000  0.750	; <UNPREDICTABLE>
    122c:	73040000 	movwvc	r0, #16384	; 0x4000
    1230:	000000c5 	andeq	r0, r0, r5, asr #1
    1234:	57090808 	strpl	r0, [r9, -r8, lsl #16]
    1238:	04000009 	streq	r0, [r0], #-9
    123c:	0000c574 	andeq	ip, r0, r4, ror r5
    1240:	09080c00 	stmdbeq	r8, {sl, fp}
    1244:	000003f8 	strdeq	r0, [r0], -r8
    1248:	0f197504 	svceq	0x00197504
    124c:	08100000 	ldmdaeq	r0, {}	; <UNPREDICTABLE>
    1250:	000b8209 	andeq	r8, fp, r9, lsl #4
    1254:	c5760400 	ldrbgt	r0, [r6, #-1024]!	; 0xfffffc00
    1258:	20000000 	andcs	r0, r0, r0
    125c:	06be0908 	ldrteq	r0, [lr], r8, lsl #18
    1260:	77040000 	strvc	r0, [r4, -r0]
    1264:	000000c5 	andeq	r0, r0, r5, asr #1
    1268:	c9090824 	stmdbgt	r9, {r2, r5, fp}
    126c:	0400000b 	streq	r0, [r0], #-11
    1270:	0000c578 	andeq	ip, r0, r8, ror r5
    1274:	09082800 	stmdbeq	r8, {fp, sp}
    1278:	000009dc 	ldrdeq	r0, [r0], -ip
    127c:	00c57904 	sbceq	r7, r5, r4, lsl #18
    1280:	082c0000 	stmdaeq	ip!, {}	; <UNPREDICTABLE>
    1284:	000bc109 	andeq	ip, fp, r9, lsl #2
    1288:	c57a0400 	ldrbgt	r0, [sl, #-1024]!	; 0xfffffc00
    128c:	30000000 	andcc	r0, r0, r0
    1290:	05640908 	strbeq	r0, [r4, #-2312]!	; 0xfffff6f8
    1294:	7b040000 	blvc	10129c <_start-0xbff06d64>
    1298:	000000c5 	andeq	r0, r0, r5, asr #1
    129c:	c5090834 	strgt	r0, [r9, #-2100]	; 0xfffff7cc
    12a0:	04000009 	streq	r0, [r0], #-9
    12a4:	0000c57c 	andeq	ip, r0, ip, ror r5
    12a8:	09083800 	stmdbeq	r8, {fp, ip, sp}
    12ac:	00000874 	andeq	r0, r0, r4, ror r8
    12b0:	00c57d04 	sbceq	r7, r5, r4, lsl #26
    12b4:	083c0000 	ldmdaeq	ip!, {}	; <UNPREDICTABLE>
    12b8:	0003fe09 	andeq	pc, r3, r9, lsl #28
    12bc:	2e7e0400 	cdpcs	4, 7, cr0, cr14, cr0, {0}
    12c0:	4000000f 	andmi	r0, r0, pc
    12c4:	09e60908 	stmibeq	r6!, {r3, r8, fp}^
    12c8:	7f040000 	svcvc	0x00040000
    12cc:	000000c5 	andeq	r0, r0, r5, asr #1
    12d0:	a7090880 	strge	r0, [r9, -r0, lsl #17]
    12d4:	0400000e 	streq	r0, [r0], #-14
    12d8:	0000c580 	andeq	ip, r0, r0, lsl #11
    12dc:	09088400 	stmdbeq	r8, {sl, pc}
    12e0:	00000bf0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    12e4:	00c58104 	sbceq	r8, r5, r4, lsl #2
    12e8:	08880000 	stmeq	r8, {}	; <UNPREDICTABLE>
    12ec:	000e9d09 	andeq	r9, lr, r9, lsl #26
    12f0:	c5820400 	strgt	r0, [r2, #1024]	; 0x400
    12f4:	8c000000 	stchi	0, cr0, [r0], {-0}
    12f8:	0aa20908 	beq	fe883720 <__bss_end__+0x3e878d58>
    12fc:	83040000 	movwhi	r0, #16384	; 0x4000
    1300:	000000c5 	andeq	r0, r0, r5, asr #1
    1304:	49090890 	stmdbmi	r9, {r4, r7, fp}
    1308:	0400000a 	streq	r0, [r0], #-10
    130c:	0000c584 	andeq	ip, r0, r4, lsl #11
    1310:	09089400 	stmdbeq	r8, {sl, ip, pc}
    1314:	00000a64 	andeq	r0, r0, r4, ror #20
    1318:	00c58504 	sbceq	r8, r5, r4, lsl #10
    131c:	08980000 	ldmeq	r8, {}	; <UNPREDICTABLE>
    1320:	000c0a09 	andeq	r0, ip, r9, lsl #20
    1324:	c5860400 	strgt	r0, [r6, #1024]	; 0x400
    1328:	9c000000 	stcls	0, cr0, [r0], {-0}
    132c:	09fb0908 	ldmibeq	fp!, {r3, r8, fp}^
    1330:	87040000 	strhi	r0, [r4, -r0]
    1334:	000000c5 	andeq	r0, r0, r5, asr #1
    1338:	ea0908a0 	b	2435c0 <_start-0xbfdc4a40>
    133c:	04000005 	streq	r0, [r0], #-5
    1340:	0000c588 	andeq	ip, r0, r8, lsl #11
    1344:	0908a400 	stmdbeq	r8, {sl, sp, pc}
    1348:	00000404 	andeq	r0, r0, r4, lsl #8
    134c:	0e868904 	vdiveq.f16	s16, s12, s8	; <UNPREDICTABLE>
    1350:	08a80000 	stmiaeq	r8!, {}	; <UNPREDICTABLE>
    1354:	00088d09 	andeq	r8, r8, r9, lsl #26
    1358:	c58a0400 	strgt	r0, [sl, #1024]	; 0x400
    135c:	c0000000 	andgt	r0, r0, r0
    1360:	085b0908 	ldmdaeq	fp, {r3, r8, fp}^
    1364:	8b040000 	blhi	10136c <_start-0xbff06c94>
    1368:	000000c5 	andeq	r0, r0, r5, asr #1
    136c:	420908c4 	andmi	r0, r9, #196, 16	; 0xc40000
    1370:	04000007 	streq	r0, [r0], #-7
    1374:	0000c58c 	andeq	ip, r0, ip, lsl #11
    1378:	0908c800 	stmdbeq	r8, {fp, lr, pc}
    137c:	00000dc9 	andeq	r0, r0, r9, asr #27
    1380:	00c58d04 	sbceq	r8, r5, r4, lsl #26
    1384:	08cc0000 	stmiaeq	ip, {}^	; <UNPREDICTABLE>
    1388:	0007a109 	andeq	sl, r7, r9, lsl #2
    138c:	c58e0400 	strgt	r0, [lr, #1024]	; 0x400
    1390:	d0000000 	andle	r0, r0, r0
    1394:	0e430908 	vmlaeq.f16	s1, s6, s16	; <UNPREDICTABLE>
    1398:	8f040000 	svchi	0x00040000
    139c:	000000c5 	andeq	r0, r0, r5, asr #1
    13a0:	da0908d4 	ble	2436f8 <_start-0xbfdc4908>
    13a4:	0400000b 	streq	r0, [r0], #-11
    13a8:	0000c590 	muleq	r0, r0, r5
    13ac:	0908d800 	stmdbeq	r8, {fp, ip, lr, pc}
    13b0:	00000940 	andeq	r0, r0, r0, asr #18
    13b4:	00c59104 	sbceq	r9, r5, r4, lsl #2
    13b8:	08dc0000 	ldmeq	ip, {}^	; <UNPREDICTABLE>
    13bc:	000e0b09 	andeq	r0, lr, r9, lsl #22
    13c0:	c5920400 	ldrgt	r0, [r2, #1024]	; 0x400
    13c4:	e0000000 	and	r0, r0, r0
    13c8:	0c140908 			; <UNDEFINED> instruction: 0x0c140908
    13cc:	93040000 	movwls	r0, #16384	; 0x4000
    13d0:	000000c5 	andeq	r0, r0, r5, asr #1
    13d4:	eb0908e4 	bl	24376c <_start-0xbfdc4894>
    13d8:	04000006 	streq	r0, [r0], #-6
    13dc:	0000c594 	muleq	r0, r4, r5
    13e0:	0908e800 	stmdbeq	r8, {fp, sp, lr, pc}
    13e4:	000009aa 	andeq	r0, r0, sl, lsr #19
    13e8:	00c59504 	sbceq	r9, r5, r4, lsl #10
    13ec:	08ec0000 	stmiaeq	ip!, {}^	; <UNPREDICTABLE>
    13f0:	00052209 	andeq	r2, r5, r9, lsl #4
    13f4:	c5960400 	ldrgt	r0, [r6, #1024]	; 0x400
    13f8:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    13fc:	0dd40908 	vldreq.16	s1, [r4, #16]	; <UNPREDICTABLE>
    1400:	97040000 	strls	r0, [r4, -r0]
    1404:	000000c5 	andeq	r0, r0, r5, asr #1
    1408:	4f0908f4 	svcmi	0x000908f4
    140c:	04000004 	streq	r0, [r0], #-4
    1410:	0000c598 	muleq	r0, r8, r5
    1414:	0908f800 	stmdbeq	r8, {fp, ip, sp, lr, pc}
    1418:	00000628 	andeq	r0, r0, r8, lsr #12
    141c:	00c59904 	sbceq	r9, r5, r4, lsl #18
    1420:	08fc0000 	ldmeq	ip!, {}^	; <UNPREDICTABLE>
    1424:	000df209 	andeq	pc, sp, r9, lsl #4
    1428:	c59a0400 	ldrgt	r0, [sl, #1024]	; 0x400
    142c:	00000000 	andeq	r0, r0, r0
    1430:	0f060909 	svceq	0x00060909
    1434:	9b040000 	blls	10143c <_start-0xbff06bc4>
    1438:	000000c5 	andeq	r0, r0, r5, asr #1
    143c:	27090904 	strcs	r0, [r9, -r4, lsl #18]
    1440:	04000007 	streq	r0, [r0], #-7
    1444:	000e5c9c 	muleq	lr, ip, ip
    1448:	09090800 	stmdbeq	r9, {fp}
    144c:	00000736 	andeq	r0, r0, r6, lsr r7
    1450:	00c59d04 	sbceq	r9, r5, r4, lsl #26
    1454:	090c0000 	stmdbeq	ip, {}	; <UNPREDICTABLE>
    1458:	00040a09 	andeq	r0, r4, r9, lsl #20
    145c:	5c9e0400 	cfldrspl	mvf0, [lr], {0}
    1460:	1000000e 	andne	r0, r0, lr
    1464:	0c6d0909 			; <UNDEFINED> instruction: 0x0c6d0909
    1468:	9f040000 	svcls	0x00040000
    146c:	000000c5 	andeq	r0, r0, r5, asr #1
    1470:	17090914 	smladne	r9, r4, r9, r0
    1474:	0400000b 	streq	r0, [r0], #-11
    1478:	0000c5a0 	andeq	ip, r0, r0, lsr #11
    147c:	09091800 	stmdbeq	r9, {fp, ip}
    1480:	00000e72 	andeq	r0, r0, r2, ror lr
    1484:	00c5a104 	sbceq	sl, r5, r4, lsl #2
    1488:	091c0000 	ldmdbeq	ip, {}	; <UNPREDICTABLE>
    148c:	0007e409 	andeq	lr, r7, r9, lsl #8
    1490:	c5a20400 	strgt	r0, [r2, #1024]!	; 0x400
    1494:	20000000 	andcs	r0, r0, r0
    1498:	09360909 	ldmdbeq	r6!, {r0, r3, r8, fp}
    149c:	a3040000 	movwge	r0, #16384	; 0x4000
    14a0:	000000c5 	andeq	r0, r0, r5, asr #1
    14a4:	29090924 	stmdbcs	r9, {r2, r5, r8, fp}
    14a8:	0400000b 	streq	r0, [r0], #-11
    14ac:	0000c5a4 	andeq	ip, r0, r4, lsr #11
    14b0:	09092800 	stmdbeq	r9, {fp, sp}
    14b4:	000005f3 	strdeq	r0, [r0], -r3
    14b8:	00c5a504 	sbceq	sl, r5, r4, lsl #10
    14bc:	092c0000 	stmdbeq	ip!, {}	; <UNPREDICTABLE>
    14c0:	000c7909 	andeq	r7, ip, r9, lsl #18
    14c4:	c5a60400 	strgt	r0, [r6, #1024]!	; 0x400
    14c8:	30000000 	andcc	r0, r0, r0
    14cc:	04970909 	ldreq	r0, [r7], #2313	; 0x909
    14d0:	a7040000 	strge	r0, [r4, -r0]
    14d4:	000000c5 	andeq	r0, r0, r5, asr #1
    14d8:	16090934 			; <UNDEFINED> instruction: 0x16090934
    14dc:	04000005 	streq	r0, [r0], #-5
    14e0:	000f43a8 	andeq	r4, pc, r8, lsr #7
    14e4:	09093800 	stmdbeq	r9, {fp, ip, sp}
    14e8:	00000a15 	andeq	r0, r0, r5, lsl sl
    14ec:	00c5a904 	sbceq	sl, r5, r4, lsl #18
    14f0:	09800000 	stmibeq	r0, {}	; <UNPREDICTABLE>
    14f4:	000d2c09 	andeq	r2, sp, r9, lsl #24
    14f8:	c5aa0400 	strgt	r0, [sl, #1024]!	; 0x400
    14fc:	84000000 	strhi	r0, [r0], #-0
    1500:	06430909 	strbeq	r0, [r3], -r9, lsl #18
    1504:	ab040000 	blge	10150c <_start-0xbff06af4>
    1508:	000000c5 	andeq	r0, r0, r5, asr #1
    150c:	52090988 	andpl	r0, r9, #136, 18	; 0x220000
    1510:	04000005 	streq	r0, [r0], #-5
    1514:	0000c5ac 	andeq	ip, r0, ip, lsr #11
    1518:	09098c00 	stmdbeq	r9, {sl, fp, pc}
    151c:	0000080a 	andeq	r0, r0, sl, lsl #16
    1520:	00c5ad04 	sbceq	sl, r5, r4, lsl #26
    1524:	09900000 	ldmibeq	r0, {}	; <UNPREDICTABLE>
    1528:	000d6d09 	andeq	r6, sp, r9, lsl #26
    152c:	c5ae0400 	strgt	r0, [lr, #1024]!	; 0x400
    1530:	94000000 	strls	r0, [r0], #-0
    1534:	06b20909 	ldrteq	r0, [r2], r9, lsl #18
    1538:	af040000 	svcge	0x00040000
    153c:	000000c5 	andeq	r0, r0, r5, asr #1
    1540:	ec090998 			; <UNDEFINED> instruction: 0xec090998
    1544:	0400000c 	streq	r0, [r0], #-12
    1548:	0000c5b0 			; <UNDEFINED> instruction: 0x0000c5b0
    154c:	09099c00 	stmdbeq	r9, {sl, fp, ip, pc}
    1550:	00000831 	andeq	r0, r0, r1, lsr r8
    1554:	00c5b104 	sbceq	fp, r5, r4, lsl #2
    1558:	09a00000 	stmibeq	r0!, {}	; <UNPREDICTABLE>
    155c:	0008f109 	andeq	pc, r8, r9, lsl #2
    1560:	c5b20400 	ldrgt	r0, [r2, #1024]!	; 0x400
    1564:	a4000000 	strge	r0, [r0], #-0
    1568:	0ce00909 			; <UNDEFINED> instruction: 0x0ce00909
    156c:	b3040000 	movwlt	r0, #16384	; 0x4000
    1570:	000000c5 	andeq	r0, r0, r5, asr #1
    1574:	c00909a8 	andgt	r0, r9, r8, lsr #19
    1578:	04000005 	streq	r0, [r0], #-5
    157c:	0000c5b4 			; <UNDEFINED> instruction: 0x0000c5b4
    1580:	0909ac00 	stmdbeq	r9, {sl, fp, sp, pc}
    1584:	0000051c 	andeq	r0, r0, ip, lsl r5
    1588:	0f58b504 	svceq	0x0058b504
    158c:	09b00000 	ldmibeq	r0!, {}	; <UNPREDICTABLE>
    1590:	0008d509 	andeq	sp, r8, r9, lsl #10
    1594:	c5b60400 	ldrgt	r0, [r6, #1024]!	; 0x400
    1598:	00000000 	andeq	r0, r0, r0
    159c:	0441090a 	strbeq	r0, [r1], #-2314	; 0xfffff6f6
    15a0:	b7040000 	strlt	r0, [r4, -r0]
    15a4:	000000c5 	andeq	r0, r0, r5, asr #1
    15a8:	ed090a04 	vstr	s0, [r9, #-16]
    15ac:	04000009 	streq	r0, [r0], #-9
    15b0:	0000c5b8 			; <UNDEFINED> instruction: 0x0000c5b8
    15b4:	090a0800 	stmdbeq	sl, {fp}
    15b8:	00000c4e 	andeq	r0, r0, lr, asr #24
    15bc:	00c5b904 	sbceq	fp, r5, r4, lsl #18
    15c0:	0a0c0000 	beq	3015c8 <_start-0xbfd06a38>
    15c4:	000d1e09 	andeq	r1, sp, r9, lsl #28
    15c8:	c5ba0400 	ldrgt	r0, [sl, #1024]!	; 0x400
    15cc:	10000000 	andne	r0, r0, r0
    15d0:	03c4090a 	biceq	r0, r4, #163840	; 0x28000
    15d4:	bb040000 	bllt	1015dc <_start-0xbff06a24>
    15d8:	000000c5 	andeq	r0, r0, r5, asr #1
    15dc:	00090a14 	andeq	r0, r9, r4, lsl sl
    15e0:	0400000d 	streq	r0, [r0], #-13
    15e4:	0000c5bc 			; <UNDEFINED> instruction: 0x0000c5bc
    15e8:	090a1800 	stmdbeq	sl, {fp, ip}
    15ec:	000003a8 	andeq	r0, r0, r8, lsr #7
    15f0:	00c5bd04 	sbceq	fp, r5, r4, lsl #26
    15f4:	0a1c0000 	beq	7015fc <_start-0xbf906a04>
    15f8:	000a9409 	andeq	r9, sl, r9, lsl #8
    15fc:	c5be0400 	ldrgt	r0, [lr, #1024]!	; 0x400
    1600:	20000000 	andcs	r0, r0, r0
    1604:	0d5f090a 	vldreq.16	s1, [pc, #-20]	; 15f8 <_start-0xc0006a08>	; <UNPREDICTABLE>
    1608:	bf040000 	svclt	0x00040000
    160c:	000000c5 	andeq	r0, r0, r5, asr #1
    1610:	93090a24 	movwls	r0, #39460	; 0x9a24
    1614:	04000007 	streq	r0, [r0], #-7
    1618:	0000c5c0 	andeq	ip, r0, r0, asr #11
    161c:	090a2800 	stmdbeq	sl, {fp, sp}
    1620:	00000668 	andeq	r0, r0, r8, ror #12
    1624:	00c5c104 	sbceq	ip, r5, r4, lsl #2
    1628:	0a2c0000 	beq	b01630 <_start-0xbf5069d0>
    162c:	000f3109 	andeq	r3, pc, r9, lsl #2
    1630:	47c20400 	strbmi	r0, [r2, r0, lsl #8]
    1634:	3000000e 	andcc	r0, r0, lr
    1638:	0543090a 	strbeq	r0, [r3, #-2314]	; 0xfffff6f6
    163c:	c3040000 	movwgt	r0, #16384	; 0x4000
    1640:	000000c5 	andeq	r0, r0, r5, asr #1
    1644:	ef090a38 	svc	0x00090a38
    1648:	04000007 	streq	r0, [r0], #-7
    164c:	0000c5c4 	andeq	ip, r0, r4, asr #11
    1650:	090a3c00 	stmdbeq	sl, {sl, fp, ip, sp}
    1654:	0000052f 	andeq	r0, r0, pc, lsr #10
    1658:	0f2ec504 	svceq	0x002ec504
    165c:	0a400000 	beq	1001664 <_start-0xbf00699c>
    1660:	000ae709 	andeq	lr, sl, r9, lsl #14
    1664:	c5c60400 	strbgt	r0, [r6, #1024]	; 0x400
    1668:	80000000 	andhi	r0, r0, r0
    166c:	0d8d090a 	vstreq.16	s0, [sp, #20]	; <UNPREDICTABLE>
    1670:	c7040000 	strgt	r0, [r4, -r0]
    1674:	000000c5 	andeq	r0, r0, r5, asr #1
    1678:	a4090a84 	strge	r0, [r9], #-2692	; 0xfffff57c
    167c:	04000004 	streq	r0, [r0], #-4
    1680:	0000c5c8 	andeq	ip, r0, r8, asr #11
    1684:	090a8800 	stmdbeq	sl, {fp, pc}
    1688:	00000767 	andeq	r0, r0, r7, ror #14
    168c:	00c5c904 	sbceq	ip, r5, r4, lsl #18
    1690:	0a8c0000 	beq	fe301698 <__bss_end__+0x3e2f6cd0>
    1694:	000b3309 	andeq	r3, fp, r9, lsl #6
    1698:	c5ca0400 	strbgt	r0, [sl, #1024]	; 0x400
    169c:	90000000 	andls	r0, r0, r0
    16a0:	09ce090a 	stmibeq	lr, {r1, r3, r8, fp}^
    16a4:	cb040000 	blgt	1016ac <_start-0xbff06954>
    16a8:	000000c5 	andeq	r0, r0, r5, asr #1
    16ac:	a3090a94 	movwge	r0, #39572	; 0x9a94
    16b0:	0400000b 	streq	r0, [r0], #-11
    16b4:	0000c5cc 	andeq	ip, r0, ip, asr #11
    16b8:	090a9800 	stmdbeq	sl, {fp, ip, pc}
    16bc:	00000433 	andeq	r0, r0, r3, lsr r4
    16c0:	00c5cd04 	sbceq	ip, r5, r4, lsl #26
    16c4:	0a9c0000 	beq	fe7016cc <__bss_end__+0x3e6f6d04>
    16c8:	0008b309 	andeq	fp, r8, r9, lsl #6
    16cc:	c5ce0400 	strbgt	r0, [lr, #1024]	; 0x400
    16d0:	a0000000 	andge	r0, r0, r0
    16d4:	0b74090a 	bleq	1d03b04 <_start-0xbe3044fc>
    16d8:	cf040000 	svcgt	0x00040000
    16dc:	000000c5 	andeq	r0, r0, r5, asr #1
    16e0:	f8090aa4 			; <UNDEFINED> instruction: 0xf8090aa4
    16e4:	0400000e 	streq	r0, [r0], #-14
    16e8:	0000c5d0 	ldrdeq	ip, [r0], -r0
    16ec:	090aa800 	stmdbeq	sl, {fp, sp, pc}
    16f0:	000006a4 	andeq	r0, r0, r4, lsr #13
    16f4:	00c5d104 	sbceq	sp, r5, r4, lsl #2
    16f8:	0aac0000 	beq	feb01700 <__bss_end__+0x3eaf6d38>
    16fc:	000dfd09 	andeq	pc, sp, r9, lsl #26
    1700:	c5d20400 	ldrbgt	r0, [r2, #1024]	; 0x400
    1704:	b0000000 	andlt	r0, r0, r0
    1708:	0696090a 	ldreq	r0, [r6], sl, lsl #18
    170c:	d3040000 	movwle	r0, #16384	; 0x4000
    1710:	000000c5 	andeq	r0, r0, r5, asr #1
    1714:	99090ab4 	stmdbls	r9, {r2, r4, r5, r7, r9, fp}
    1718:	04000008 	streq	r0, [r0], #-8
    171c:	0000c5d4 	ldrdeq	ip, [r0], -r4
    1720:	090ab800 	stmdbeq	sl, {fp, ip, sp, pc}
    1724:	00000601 	andeq	r0, r0, r1, lsl #12
    1728:	00c5d504 	sbceq	sp, r5, r4, lsl #10
    172c:	0abc0000 	beq	fef01734 <__bss_end__+0x3eef6d6c>
    1730:	000a6e09 	andeq	r6, sl, r9, lsl #28
    1734:	2ed60400 	cdpcs	4, 13, cr0, cr6, cr0, {0}
    1738:	c000000f 	andgt	r0, r0, pc
    173c:	0e17090a 	vnmlseq.f16	s0, s14, s20	; <UNPREDICTABLE>
    1740:	d7040000 	strle	r0, [r4, -r0]
    1744:	000000c5 	andeq	r0, r0, r5, asr #1
    1748:	cc090b00 			; <UNDEFINED> instruction: 0xcc090b00
    174c:	0400000e 	streq	r0, [r0], #-14
    1750:	0000c5d8 	ldrdeq	ip, [r0], -r8
    1754:	090b0400 	stmdbeq	fp, {sl}
    1758:	00000edc 	ldrdeq	r0, [r0], -ip
    175c:	00c5d904 	sbceq	sp, r5, r4, lsl #18
    1760:	0b080000 	bleq	201768 <_start-0xbfe06898>
    1764:	000a0509 	andeq	r0, sl, r9, lsl #10
    1768:	c5da0400 	ldrbgt	r0, [sl, #1024]	; 0x400
    176c:	0c000000 	stceq	0, cr0, [r0], {-0}
    1770:	0926090b 	stmdbeq	r6!, {r0, r1, r3, r8, fp}
    1774:	db040000 	blle	10177c <_start-0xbff06884>
    1778:	000000c5 	andeq	r0, r0, r5, asr #1
    177c:	2e090b10 	vmovcs.32	d9[0], r0
    1780:	0400000c 	streq	r0, [r0], #-12
    1784:	0000c5dc 	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    1788:	090b1400 	stmdbeq	fp, {sl, ip}
    178c:	000004cc 	andeq	r0, r0, ip, asr #9
    1790:	00c5dd04 	sbceq	sp, r5, r4, lsl #26
    1794:	0b180000 	bleq	60179c <_start-0xbfa06864>
    1798:	00078309 	andeq	r8, r7, r9, lsl #6
    179c:	c5de0400 	ldrbgt	r0, [lr, #1024]	; 0x400
    17a0:	1c000000 	stcne	0, cr0, [r0], {-0}
    17a4:	0686090b 	streq	r0, [r6], fp, lsl #18
    17a8:	df040000 	svcle	0x00040000
    17ac:	000000c5 	andeq	r0, r0, r5, asr #1
    17b0:	fa090b20 	blx	244438 <_start-0xbfdc3bc8>
    17b4:	0400000b 	streq	r0, [r0], #-11
    17b8:	0000c5e0 	andeq	ip, r0, r0, ror #11
    17bc:	090b2400 	stmdbeq	fp, {sl, sp}
    17c0:	0000087d 	andeq	r0, r0, sp, ror r8
    17c4:	00c5e104 	sbceq	lr, r5, r4, lsl #2
    17c8:	0b280000 	bleq	a017d0 <_start-0xbf606830>
    17cc:	0005cc09 	andeq	ip, r5, r9, lsl #24
    17d0:	c5e20400 	strbgt	r0, [r2, #1024]!	; 0x400
    17d4:	2c000000 	stccs	0, cr0, [r0], {-0}
    17d8:	0ac7090b 	beq	ff1c3c0c <__bss_end__+0x3f1b9244>
    17dc:	e3040000 	movw	r0, #16384	; 0x4000
    17e0:	000000c5 	andeq	r0, r0, r5, asr #1
    17e4:	98090b30 	stmdals	r9, {r4, r5, r8, r9, fp}
    17e8:	04000003 	streq	r0, [r0], #-3
    17ec:	0000c5e4 	andeq	ip, r0, r4, ror #11
    17f0:	090b3400 	stmdbeq	fp, {sl, ip, sp}
    17f4:	00000486 	andeq	r0, r0, r6, lsl #9
    17f8:	00c5e504 	sbceq	lr, r5, r4, lsl #10
    17fc:	0b380000 	bleq	e01804 <_start-0xbf2067fc>
    1800:	00075609 	andeq	r5, r7, r9, lsl #12
    1804:	c5e60400 	strbgt	r0, [r6, #1024]!	; 0x400
    1808:	3c000000 	stccc	0, cr0, [r0], {-0}
    180c:	0622090b 	strteq	r0, [r2], -fp, lsl #18
    1810:	e7040000 	str	r0, [r4, -r0]
    1814:	00000f2e 	andeq	r0, r0, lr, lsr #30
    1818:	23090b40 	movwcs	r0, #39744	; 0x9b40
    181c:	04000004 	streq	r0, [r0], #-4
    1820:	0000c5e8 	andeq	ip, r0, r8, ror #11
    1824:	090b8000 	stmdbeq	fp, {pc}
    1828:	000006db 	ldrdeq	r0, [r0], -fp
    182c:	00c5e904 	sbceq	lr, r5, r4, lsl #18
    1830:	0b840000 	bleq	fe101838 <__bss_end__+0x3e0f6e70>
    1834:	00070109 	andeq	r0, r7, r9, lsl #2
    1838:	c5ea0400 	strbgt	r0, [sl, #1024]!	; 0x400
    183c:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    1840:	0c97090b 			; <UNDEFINED> instruction: 0x0c97090b
    1844:	eb040000 	bl	10184c <_start-0xbff067b4>
    1848:	000000c5 	andeq	r0, r0, r5, asr #1
    184c:	5f090b8c 	svcpl	0x00090b8c
    1850:	04000009 	streq	r0, [r0], #-9
    1854:	0000c5ec 	andeq	ip, r0, ip, ror #11
    1858:	090b9000 	stmdbeq	fp, {ip, pc}
    185c:	00000ad7 	ldrdeq	r0, [r0], -r7
    1860:	00c5ed04 	sbceq	lr, r5, r4, lsl #26
    1864:	0b940000 	bleq	fe50186c <__bss_end__+0x3e4f6ea4>
    1868:	000ab709 	andeq	fp, sl, r9, lsl #14
    186c:	c5ee0400 	strbgt	r0, [lr, #1024]!	; 0x400
    1870:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
    1874:	0de2090b 			; <UNDEFINED> instruction: 0x0de2090b
    1878:	ef040000 	svc	0x00040000
    187c:	000000c5 	andeq	r0, r0, r5, asr #1
    1880:	21090b9c 			; <UNDEFINED> instruction: 0x21090b9c
    1884:	0400000a 	streq	r0, [r0], #-10
    1888:	0000c5f0 	strdeq	ip, [r0], -r0
    188c:	090ba000 	stmdbeq	fp, {sp, pc}
    1890:	00000476 	andeq	r0, r0, r6, ror r4
    1894:	00c5f104 	sbceq	pc, r5, r4, lsl #2
    1898:	0ba40000 	bleq	fe9018a0 <__bss_end__+0x3e8f6ed8>
    189c:	000a8409 	andeq	r8, sl, r9, lsl #8
    18a0:	c5f20400 	ldrbgt	r0, [r2, #1024]!	; 0x400
    18a4:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
    18a8:	0658090b 	ldrbeq	r0, [r8], -fp, lsl #18
    18ac:	f3040000 	vhadd.u8	d0, d4, d0
    18b0:	000000c5 	andeq	r0, r0, r5, asr #1
    18b4:	76090bac 	strvc	r0, [r9], -ip, lsr #23
    18b8:	04000006 	streq	r0, [r0], #-6
    18bc:	0000c5f4 	strdeq	ip, [r0], -r4
    18c0:	090bb000 	stmdbeq	fp, {ip, sp, pc}
    18c4:	00000b41 	andeq	r0, r0, r1, asr #22
    18c8:	00c5f504 	sbceq	pc, r5, r4, lsl #10
    18cc:	0bb40000 	bleq	fed018d4 <__bss_end__+0x3ecf6f0c>
    18d0:	00063209 	andeq	r3, r6, r9, lsl #4
    18d4:	c5f60400 	ldrbgt	r0, [r6, #1024]!	; 0x400
    18d8:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
    18dc:	07b5090b 	ldreq	r0, [r5, fp, lsl #18]!
    18e0:	f7040000 			; <UNDEFINED> instruction: 0xf7040000
    18e4:	000000c5 	andeq	r0, r0, r5, asr #1
    18e8:	3d090bbc 	vstrcc	d0, [r9, #-752]	; 0xfffffd10
    18ec:	04000008 	streq	r0, [r0], #-8
    18f0:	000f2ef8 	strdeq	r2, [pc], -r8
    18f4:	090bc000 	stmdbeq	fp, {lr, pc}
    18f8:	00000843 	andeq	r0, r0, r3, asr #16
    18fc:	00c5f904 	sbceq	pc, r5, r4, lsl #18
    1900:	0c000000 	stceq	0, cr0, [r0], {-0}
    1904:	00055e09 	andeq	r5, r5, r9, lsl #28
    1908:	19fa0400 	ldmibne	sl!, {sl}^
    190c:	0400000f 	streq	r0, [r0], #-15
    1910:	07d4090c 	ldrbeq	r0, [r4, ip, lsl #18]
    1914:	fb040000 	blx	10191e <_start-0xbff066e2>
    1918:	000000c5 	andeq	r0, r0, r5, asr #1
    191c:	29090c14 	stmdbcs	r9, {r2, r4, sl, fp}
    1920:	0400000f 	streq	r0, [r0], #-15
    1924:	0000c5fc 	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    1928:	090c1800 	stmdbeq	ip, {fp, ip}
    192c:	000003d2 	ldrdeq	r0, [r0], -r2
    1930:	0f6dfd04 	svceq	0x006dfd04
    1934:	0c1c0000 	ldceq	0, cr0, [ip], {-0}
    1938:	000b8b09 	andeq	r8, fp, r9, lsl #22
    193c:	c5fe0400 	ldrbgt	r0, [lr, #1024]!	; 0x400
    1940:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    1944:	44490a0f 	strbmi	r0, [r9], #-2575	; 0xfffff5f1
    1948:	ff040052 			; <UNDEFINED> instruction: 0xff040052
    194c:	000000c5 	andeq	r0, r0, r5, asr #1
    1950:	f50b0ff8 			; <UNDEFINED> instruction: 0xf50b0ff8
    1954:	0400000a 	streq	r0, [r0], #-10
    1958:	00c50100 	sbceq	r0, r5, r0, lsl #2
    195c:	0ffc0000 	svceq	0x00fc0000
    1960:	00c50c00 	sbceq	r0, r5, r0, lsl #24
    1964:	0e470000 	cdpeq	0, 4, cr0, cr7, cr0, {0}
    1968:	be0d0000 	cdplt	0, 0, cr0, cr13, cr0, {0}
    196c:	01000000 	mrseq	r0, (UNDEF: 0)
    1970:	0e370600 	cfmsuba32eq	mvax0, mvax0, mvfx7, mvfx0
    1974:	c50c0000 	strgt	r0, [ip, #-0]
    1978:	5c000000 	stcpl	0, cr0, [r0], {-0}
    197c:	0d00000e 	stceq	0, cr0, [r0, #-56]	; 0xffffffc8
    1980:	000000be 	strheq	r0, [r0], -lr
    1984:	4c060000 	stcmi	0, cr0, [r6], {-0}
    1988:	0c00000e 	stceq	0, cr0, [r0], {14}
    198c:	000000c5 	andeq	r0, r0, r5, asr #1
    1990:	00000e71 	andeq	r0, r0, r1, ror lr
    1994:	0000be0d 	andeq	fp, r0, sp, lsl #28
    1998:	06000c00 	streq	r0, [r0], -r0, lsl #24
    199c:	00000e61 	andeq	r0, r0, r1, ror #28
    19a0:	0000c50c 	andeq	ip, r0, ip, lsl #10
    19a4:	000e8600 	andeq	r8, lr, r0, lsl #12
    19a8:	00be0d00 	adcseq	r0, lr, r0, lsl #26
    19ac:	00050000 	andeq	r0, r5, r0
    19b0:	000e7606 	andeq	r7, lr, r6, lsl #12
    19b4:	00c50c00 	sbceq	r0, r5, r0, lsl #24
    19b8:	0e9b0000 	cdpeq	0, 9, cr0, cr11, cr0, {0}
    19bc:	be0d0000 	cdplt	0, 0, cr0, cr13, cr0, {0}
    19c0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    19c4:	0e8b0600 	cdpeq	6, 8, cr0, cr11, cr0, {0}
    19c8:	c50c0000 	strgt	r0, [ip, #-0]
    19cc:	b0000000 	andlt	r0, r0, r0
    19d0:	0d00000e 	stceq	0, cr0, [r0, #-56]	; 0xffffffc8
    19d4:	000000be 	strheq	r0, [r0], -lr
    19d8:	a0060009 	andge	r0, r6, r9
    19dc:	0c00000e 	stceq	0, cr0, [r0], {14}
    19e0:	000000c5 	andeq	r0, r0, r5, asr #1
    19e4:	00000ec5 	andeq	r0, r0, r5, asr #29
    19e8:	0000be0d 	andeq	fp, r0, sp, lsl #28
    19ec:	06000d00 	streq	r0, [r0], -r0, lsl #26
    19f0:	00000eb5 			; <UNDEFINED> instruction: 0x00000eb5
    19f4:	0000c50c 	andeq	ip, r0, ip, lsl #10
    19f8:	000eda00 	andeq	sp, lr, r0, lsl #20
    19fc:	00be0d00 	adcseq	r0, lr, r0, lsl #26
    1a00:	00150000 	andseq	r0, r5, r0
    1a04:	000eca06 	andeq	ip, lr, r6, lsl #20
    1a08:	00c50c00 	sbceq	r0, r5, r0, lsl #24
    1a0c:	0eef0000 	cdpeq	0, 14, cr0, cr15, cr0, {0}
    1a10:	be0d0000 	cdplt	0, 0, cr0, cr13, cr0, {0}
    1a14:	17000000 	strne	r0, [r0, -r0]
    1a18:	0edf0600 	cdpeq	6, 13, cr0, cr15, cr0, {0}
    1a1c:	c50c0000 	strgt	r0, [ip, #-0]
    1a20:	04000000 	streq	r0, [r0], #-0
    1a24:	0d00000f 	stceq	0, cr0, [r0, #-60]	; 0xffffffc4
    1a28:	000000be 	strheq	r0, [r0], -lr
    1a2c:	f40600f6 	vst4.<illegal width 64>	{d0-d3}, [r6 :256], r6
    1a30:	0c00000e 	stceq	0, cr0, [r0], {14}
    1a34:	000000c5 	andeq	r0, r0, r5, asr #1
    1a38:	00000f19 	andeq	r0, r0, r9, lsl pc
    1a3c:	0000be0d 	andeq	fp, r0, sp, lsl #28
    1a40:	06000300 	streq	r0, [r0], -r0, lsl #6
    1a44:	00000f09 	andeq	r0, r0, r9, lsl #30
    1a48:	0000c50c 	andeq	ip, r0, ip, lsl #10
    1a4c:	000f2e00 	andeq	r2, pc, r0, lsl #28
    1a50:	00be0d00 	adcseq	r0, lr, r0, lsl #26
    1a54:	000f0000 	andeq	r0, pc, r0
    1a58:	000f1e06 	andeq	r1, pc, r6, lsl #28
    1a5c:	00c50c00 	sbceq	r0, r5, r0, lsl #24
    1a60:	0f430000 	svceq	0x00430000
    1a64:	be0d0000 	cdplt	0, 0, cr0, cr13, cr0, {0}
    1a68:	11000000 	mrsne	r0, (UNDEF: 0)
    1a6c:	0f330600 	svceq	0x00330600
    1a70:	c50c0000 	strgt	r0, [ip, #-0]
    1a74:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
    1a78:	0d00000f 	stceq	0, cr0, [r0, #-60]	; 0xffffffc4
    1a7c:	000000be 	strheq	r0, [r0], -lr
    1a80:	48060013 	stmdami	r6, {r0, r1, r4}
    1a84:	0c00000f 	stceq	0, cr0, [r0], {15}
    1a88:	000000c5 	andeq	r0, r0, r5, asr #1
    1a8c:	00000f6d 	andeq	r0, r0, sp, ror #30
    1a90:	0000be0d 	andeq	fp, r0, sp, lsl #28
    1a94:	0600f500 	streq	pc, [r0], -r0, lsl #10
    1a98:	00000f5d 	andeq	r0, r0, sp, asr pc
    1a9c:	0007110e 	andeq	r1, r7, lr, lsl #2
    1aa0:	01010400 	tsteq	r1, r0, lsl #8
    1aa4:	00000185 	andeq	r0, r0, r5, lsl #3
    1aa8:	0f84040f 	svceq	0x0084040f
    1aac:	01050000 	mrseq	r0, (UNDEF: 5)
    1ab0:	0000e708 	andeq	lr, r0, r8, lsl #14
    1ab4:	0f841000 	svceq	0x00841000
    1ab8:	840c0000 	strhi	r0, [ip], #-0
    1abc:	a000000f 	andge	r0, r0, pc
    1ac0:	0d00000f 	stceq	0, cr0, [r0, #-60]	; 0xffffffc4
    1ac4:	000000be 	strheq	r0, [r0], -lr
    1ac8:	90110031 	andsls	r0, r1, r1, lsr r0
    1acc:	0100000b 	tsteq	r0, fp
    1ad0:	000f9004 	andeq	r9, pc, r4
    1ad4:	04dc1200 	ldrbeq	r1, [ip], #512	; 0x200
    1ad8:	5c010000 	stcpl	0, cr0, [r1], {-0}
    1adc:	00000f7e 	andeq	r0, r0, lr, ror pc
    1ae0:	c0009c74 	andgt	r9, r0, r4, ror ip
    1ae4:	000000b8 	strheq	r0, [r0], -r8
    1ae8:	0fd19c01 	svceq	0x00d19c01
    1aec:	69130000 	ldmdbvs	r3, {}	; <UNPREDICTABLE>
    1af0:	d15e0100 	cmple	lr, r0, lsl #2
    1af4:	0200000f 	andeq	r0, r0, #15
    1af8:	14007491 	strne	r7, [r0], #-1169	; 0xfffffb6f
    1afc:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    1b00:	4d150074 	ldcmi	0, cr0, [r5, #-464]	; 0xfffffe30
    1b04:	01000007 	tsteq	r0, r7
    1b08:	000f8450 	andeq	r8, pc, r0, asr r4	; <UNPREDICTABLE>
    1b0c:	009c2800 	addseq	r2, ip, r0, lsl #16
    1b10:	00004cc0 	andeq	r4, r0, r0, asr #25
    1b14:	009c0100 	addseq	r0, ip, r0, lsl #2
    1b18:	13000010 	movwne	r0, #16
    1b1c:	00746572 	rsbseq	r6, r4, r2, ror r5
    1b20:	0f845201 	svceq	0x00845201
    1b24:	91020000 	mrsls	r0, (UNDEF: 2)
    1b28:	a816007b 	ldmdage	r6, {r0, r1, r3, r4, r5, r6}
    1b2c:	01000008 	tsteq	r0, r8
    1b30:	009be03b 	addseq	lr, fp, fp, lsr r0
    1b34:	000048c0 	andeq	r4, r0, r0, asr #17
    1b38:	249c0100 	ldrcs	r0, [ip], #256	; 0x100
    1b3c:	17000010 	smladne	r0, r0, r0, r0
    1b40:	000004e0 	andeq	r0, r0, r0, ror #9
    1b44:	10243b01 	eorne	r3, r4, r1, lsl #22
    1b48:	91020000 	mrsls	r0, (UNDEF: 2)
    1b4c:	040f0074 	streq	r0, [pc], #-116	; 1b54 <_start-0xc00064ac>
    1b50:	00000f8b 	andeq	r0, r0, fp, lsl #31
    1b54:	0008fd18 	andeq	pc, r8, r8, lsl sp	; <UNPREDICTABLE>
    1b58:	742f0100 	strtvc	r0, [pc], #-256	; 1b60 <_start-0xc00064a0>
    1b5c:	6cc0009b 	stclvs	0, cr0, [r0], {155}	; 0x9b
    1b60:	01000000 	mrseq	r0, (UNDEF: 0)
    1b64:	00104e9c 	mulseq	r0, ip, lr
    1b68:	74731900 	ldrbtvc	r1, [r3], #-2304	; 0xfffff700
    1b6c:	2f010072 	svccs	0x00010072
    1b70:	00000f8b 	andeq	r0, r0, fp, lsl #31
    1b74:	00789102 	rsbseq	r9, r8, r2, lsl #2
    1b78:	000ebd1a 	andeq	fp, lr, sl, lsl sp
    1b7c:	8c080100 	stfhis	f0, [r8], {-0}
    1b80:	e8c00099 	stmia	r0, {r0, r3, r4, r7}^
    1b84:	01000001 	tsteq	r0, r1
    1b88:	1169009c 			; <UNDEFINED> instruction: 0x1169009c
    1b8c:	00040000 	andeq	r0, r4, r0
    1b90:	000005a5 	andeq	r0, r0, r5, lsr #11
    1b94:	00520104 	subseq	r0, r2, r4, lsl #2
    1b98:	650c0000 	strvs	r0, [ip, #-0]
    1b9c:	2500000f 	strcs	r0, [r0, #-15]
    1ba0:	2c000001 	stccs	0, cr0, [r0], {1}
    1ba4:	48c0009d 	stmiami	r0, {r0, r2, r3, r4, r7}^
    1ba8:	00000002 	andeq	r0, r0, r2
    1bac:	02000006 	andeq	r0, r0, #6
    1bb0:	ca040234 	bgt	102488 <_start-0xbff05b78>
    1bb4:	03000000 	movweq	r0, #0
    1bb8:	00000217 	andeq	r0, r0, r7, lsl r2
    1bbc:	00d10502 	sbcseq	r0, r1, r2, lsl #10
    1bc0:	03000000 	movweq	r0, #0
    1bc4:	00000254 	andeq	r0, r0, r4, asr r2
    1bc8:	00d10602 	sbcseq	r0, r1, r2, lsl #12
    1bcc:	03040000 	movweq	r0, #16384	; 0x4000
    1bd0:	0000021d 	andeq	r0, r0, sp, lsl r2
    1bd4:	00d10702 	sbcseq	r0, r1, r2, lsl #14
    1bd8:	03080000 	movweq	r0, #32768	; 0x8000
    1bdc:	00000211 	andeq	r0, r0, r1, lsl r2
    1be0:	00d10802 	sbcseq	r0, r1, r2, lsl #16
    1be4:	040c0000 	streq	r0, [ip], #-0
    1be8:	00524449 	subseq	r4, r2, r9, asr #8
    1bec:	00d10902 	sbcseq	r0, r1, r2, lsl #18
    1bf0:	04100000 	ldreq	r0, [r0], #-0
    1bf4:	0052444f 	subseq	r4, r2, pc, asr #8
    1bf8:	00d10a02 	sbcseq	r0, r1, r2, lsl #20
    1bfc:	03140000 	tsteq	r4, #0
    1c00:	0000020c 	andeq	r0, r0, ip, lsl #4
    1c04:	00d10b02 	sbcseq	r0, r1, r2, lsl #22
    1c08:	03180000 	tsteq	r8, #0
    1c0c:	00000248 	andeq	r0, r0, r8, asr #4
    1c10:	00d10c02 	sbcseq	r0, r1, r2, lsl #24
    1c14:	031c0000 	tsteq	ip, #0
    1c18:	0000025b 	andeq	r0, r0, fp, asr r2
    1c1c:	00d10d02 	sbcseq	r0, r1, r2, lsl #26
    1c20:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
    1c24:	0000026c 	andeq	r0, r0, ip, ror #4
    1c28:	00d10e02 	sbcseq	r0, r1, r2, lsl #28
    1c2c:	04240000 	strteq	r0, [r4], #-0
    1c30:	00525242 	subseq	r5, r2, r2, asr #4
    1c34:	00d10f02 	sbcseq	r0, r1, r2, lsl #30
    1c38:	04280000 	strteq	r0, [r8], #-0
    1c3c:	00736572 	rsbseq	r6, r3, r2, ror r5
    1c40:	00d11002 	sbcseq	r1, r1, r2
    1c44:	032c0000 			; <UNDEFINED> instruction: 0x032c0000
    1c48:	000001ee 	andeq	r0, r0, lr, ror #3
    1c4c:	00d11102 	sbcseq	r1, r1, r2, lsl #2
    1c50:	00300000 	eorseq	r0, r0, r0
    1c54:	f1070405 			; <UNDEFINED> instruction: 0xf1070405
    1c58:	06000000 	streq	r0, [r0], -r0
    1c5c:	000000ca 	andeq	r0, r0, sl, asr #1
    1c60:	00024107 	andeq	r4, r2, r7, lsl #2
    1c64:	25130200 	ldrcs	r0, [r3, #-512]	; 0xfffffe00
    1c68:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1c6c:	00ca0407 	sbceq	r0, sl, r7, lsl #8
    1c70:	39030000 	stmdbcc	r3, {}	; <UNPREDICTABLE>
    1c74:	00000107 	andeq	r0, r0, r7, lsl #2
    1c78:	0002f609 	andeq	pc, r2, r9, lsl #12
    1c7c:	7b090000 	blvc	241c84 <_start-0xbfdc637c>
    1c80:	01000003 	tsteq	r0, r3
    1c84:	464c410a 	strbmi	r4, [ip], -sl, lsl #2
    1c88:	ab090200 	blge	242490 <_start-0xbfdc5b70>
    1c8c:	03000002 	movweq	r0, #2
    1c90:	03550700 	cmpeq	r5, #0, 14
    1c94:	3e030000 	cdpcc	0, 0, cr0, cr3, cr0, {0}
    1c98:	000000e1 	andeq	r0, r0, r1, ror #1
    1c9c:	ca040708 	bgt	1038c4 <_start-0xbff0473c>
    1ca0:	03000000 	movweq	r0, #0
    1ca4:	00012a43 	andeq	r2, r1, r3, asr #20
    1ca8:	50500a00 	subspl	r0, r0, r0, lsl #20
    1cac:	4f0a0000 	svcmi	0x000a0000
    1cb0:	00010044 	andeq	r0, r1, r4, asr #32
    1cb4:	00036207 	andeq	r6, r3, r7, lsl #4
    1cb8:	12460300 	subne	r0, r6, #0, 6
    1cbc:	08000001 	stmdaeq	r0, {r0}
    1cc0:	00ca0407 	sbceq	r0, sl, r7, lsl #8
    1cc4:	4a030000 	bmi	c1ccc <_start-0xbff46334>
    1cc8:	0000015b 	andeq	r0, r0, fp, asr r1
    1ccc:	574f4c0a 	strbpl	r4, [pc, -sl, lsl #24]
    1cd0:	fc090000 	stc2	0, cr0, [r9], {-0}
    1cd4:	01000002 	tsteq	r0, r2
    1cd8:	0002c509 	andeq	ip, r2, r9, lsl #10
    1cdc:	c0090200 	andgt	r0, r9, r0, lsl #4
    1ce0:	03000002 	movweq	r0, #2
    1ce4:	03460700 	movteq	r0, #26368	; 0x6700
    1ce8:	50030000 	andpl	r0, r3, r0
    1cec:	00000135 	andeq	r0, r0, r5, lsr r1
    1cf0:	ca040708 	bgt	103918 <_start-0xbff046e8>
    1cf4:	03000000 	movweq	r0, #0
    1cf8:	00018454 	andeq	r8, r1, r4, asr r4
    1cfc:	02db0900 	sbcseq	r0, fp, #0, 18
    1d00:	0a000000 	beq	1d08 <_start-0xc00062f8>
    1d04:	01005550 	tsteq	r0, r0, asr r5
    1d08:	0044500a 	subeq	r5, r4, sl
    1d0c:	0f070002 	svceq	0x00070002
    1d10:	03000003 	movweq	r0, #3
    1d14:	00016659 	andeq	r6, r1, r9, asr r6
    1d18:	04070800 	streq	r0, [r7], #-2048	; 0xfffff800
    1d1c:	000000ca 	andeq	r0, r0, sl, asr #1
    1d20:	01a95d03 			; <UNDEFINED> instruction: 0x01a95d03
    1d24:	e3090000 	movw	r0, #36864	; 0x9000
    1d28:	00000002 	andeq	r0, r0, r2
    1d2c:	0002d009 	andeq	sp, r2, r9
    1d30:	07000100 	streq	r0, [r0, -r0, lsl #2]
    1d34:	00000297 	muleq	r0, r7, r2
    1d38:	018f6103 	orreq	r6, pc, r3, lsl #2
    1d3c:	10020000 	andne	r0, r2, r0
    1d40:	01ed6403 	mvneq	r6, r3, lsl #8
    1d44:	82030000 	andhi	r0, r3, #0
    1d48:	03000003 	movweq	r0, #3
    1d4c:	00010766 	andeq	r0, r1, r6, ror #14
    1d50:	b2030000 	andlt	r0, r3, #0
    1d54:	03000002 	movweq	r0, #2
    1d58:	00012a67 	andeq	r2, r1, r7, ror #20
    1d5c:	2f030400 	svccs	0x00030400
    1d60:	03000003 	movweq	r0, #3
    1d64:	00015b68 	andeq	r5, r1, r8, ror #22
    1d68:	f0030800 			; <UNDEFINED> instruction: 0xf0030800
    1d6c:	03000002 	movweq	r0, #2
    1d70:	00018469 	andeq	r8, r1, r9, ror #8
    1d74:	07000c00 	streq	r0, [r0, -r0, lsl #24]
    1d78:	00000303 	andeq	r0, r0, r3, lsl #6
    1d7c:	01b46a03 			; <UNDEFINED> instruction: 0x01b46a03
    1d80:	14020000 	strne	r0, [r2], #-0
    1d84:	023d7803 	eorseq	r7, sp, #196608	; 0x30000
    1d88:	4e030000 	cdpmi	0, 0, cr0, cr3, cr0, {0}
    1d8c:	0300000f 	movweq	r0, #15
    1d90:	00023d7a 	andeq	r3, r2, sl, ror sp
    1d94:	ca030000 	bgt	c1d9c <_start-0xbff46264>
    1d98:	03000002 	movweq	r0, #2
    1d9c:	00024a7b 	andeq	r4, r2, fp, ror sl
    1da0:	70040400 	andvc	r0, r4, r0, lsl #8
    1da4:	03006e69 	movweq	r6, #3689	; 0xe69
    1da8:	0000ca7c 	andeq	ip, r0, ip, ror sl
    1dac:	b9030800 	stmdblt	r3, {fp}
    1db0:	03000002 	movweq	r0, #2
    1db4:	0001a97d 	andeq	sl, r1, sp, ror r9
    1db8:	3b030c00 	blcc	c4dc0 <_start-0xbff43240>
    1dbc:	03000003 	movweq	r0, #3
    1dc0:	0002657e 	andeq	r6, r2, lr, ror r5
    1dc4:	0b001000 	bleq	5dcc <_start-0xc0002234>
    1dc8:	00024304 	andeq	r4, r2, r4, lsl #6
    1dcc:	08010500 	stmdaeq	r1, {r8, sl}
    1dd0:	000000e7 	andeq	r0, r0, r7, ror #1
    1dd4:	00d6040b 	sbcseq	r0, r6, fp, lsl #8
    1dd8:	650c0000 	strvs	r0, [ip, #-0]
    1ddc:	0d000002 	stceq	0, cr0, [r0, #-8]
    1de0:	0000024a 	andeq	r0, r0, sl, asr #4
    1de4:	0000ca0d 	andeq	ip, r0, sp, lsl #20
    1de8:	01a90d00 			; <UNDEFINED> instruction: 0x01a90d00
    1dec:	0b000000 	bleq	1df4 <_start-0xc000620c>
    1df0:	00025004 	andeq	r5, r2, r4
    1df4:	0f560700 	svceq	0x00560700
    1df8:	80030000 	andhi	r0, r3, r0
    1dfc:	000001f8 	strdeq	r0, [r0], -r8
    1e00:	0410000e 	ldreq	r0, [r0], #-14
    1e04:	000f2804 	andeq	r2, pc, r4, lsl #16
    1e08:	0eb10300 	cdpeq	3, 11, cr0, cr1, cr0, {0}
    1e0c:	05040000 	streq	r0, [r4, #-0]
    1e10:	000000d1 	ldrdeq	r0, [r0], -r1
    1e14:	05930300 	ldreq	r0, [r3, #768]	; 0x300
    1e18:	06040000 	streq	r0, [r4], -r0
    1e1c:	00000f38 	andeq	r0, r0, r8, lsr pc
    1e20:	064f0304 	strbeq	r0, [pc], -r4, lsl #6
    1e24:	07040000 	streq	r0, [r4, -r0]
    1e28:	000000d1 	ldrdeq	r0, [r0], -r1
    1e2c:	094e030c 	stmdbeq	lr, {r2, r3, r8, r9}^
    1e30:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    1e34:	000000d1 	ldrdeq	r0, [r0], -r1
    1e38:	05980310 	ldreq	r0, [r8, #784]	; 0x310
    1e3c:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    1e40:	00000f4d 	andeq	r0, r0, sp, asr #30
    1e44:	07dc0314 	bfieq	r0, r4, #6, #23
    1e48:	0a040000 	beq	101e50 <_start-0xbff061b0>
    1e4c:	000000d1 	ldrdeq	r0, [r0], -r1
    1e50:	0d790318 	ldcleq	3, cr0, [r9, #-96]!	; 0xffffffa0
    1e54:	0b040000 	bleq	101e5c <_start-0xbff061a4>
    1e58:	000000d1 	ldrdeq	r0, [r0], -r1
    1e5c:	07ac031c 			; <UNDEFINED> instruction: 0x07ac031c
    1e60:	0c040000 	stceq	0, cr0, [r4], {-0}
    1e64:	000000d1 	ldrdeq	r0, [r0], -r1
    1e68:	0e7c0320 	cdpeq	3, 7, cr0, cr12, cr0, {1}
    1e6c:	0d040000 	stceq	0, cr0, [r4, #-0]
    1e70:	000000d1 	ldrdeq	r0, [r0], -r1
    1e74:	0a500324 	beq	1402b0c <_start-0xbec054f4>
    1e78:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
    1e7c:	000000d1 	ldrdeq	r0, [r0], -r1
    1e80:	0afa0328 	beq	ffe82b28 <__bss_end__+0x3fe78160>
    1e84:	0f040000 	svceq	0x00040000
    1e88:	000000d1 	ldrdeq	r0, [r0], -r1
    1e8c:	03d8032c 	bicseq	r0, r8, #44, 6	; 0xb0000000
    1e90:	10040000 	andne	r0, r4, r0
    1e94:	000000d1 	ldrdeq	r0, [r0], -r1
    1e98:	059d0330 	ldreq	r0, [sp, #816]	; 0x330
    1e9c:	11040000 	mrsne	r0, (UNDEF: 4)
    1ea0:	00000f38 	andeq	r0, r0, r8, lsr pc
    1ea4:	041a0334 	ldreq	r0, [sl], #-820	; 0xfffffccc
    1ea8:	12040000 	andne	r0, r4, #0
    1eac:	000000d1 	ldrdeq	r0, [r0], -r1
    1eb0:	0be7033c 	bleq	ff9c2ba8 <__bss_end__+0x3f9b81e0>
    1eb4:	13040000 	movwne	r0, #16384	; 0x4000
    1eb8:	000000d1 	ldrdeq	r0, [r0], -r1
    1ebc:	09860340 	stmibeq	r6, {r6, r8, r9}
    1ec0:	14040000 	strne	r0, [r4], #-0
    1ec4:	000000d1 	ldrdeq	r0, [r0], -r1
    1ec8:	0c630344 	stcleq	3, cr0, [r3], #-272	; 0xfffffef0
    1ecc:	15040000 	strne	r0, [r4, #-0]
    1ed0:	000000d1 	ldrdeq	r0, [r0], -r1
    1ed4:	05a20348 	streq	r0, [r2, #840]!	; 0x348
    1ed8:	16040000 	strne	r0, [r4], -r0
    1edc:	00000f62 	andeq	r0, r0, r2, ror #30
    1ee0:	0e96034c 	cdpeq	3, 9, cr0, cr6, cr12, {2}
    1ee4:	17040000 	strne	r0, [r4, -r0]
    1ee8:	000000d1 	ldrdeq	r0, [r0], -r1
    1eec:	08c10380 	stmiaeq	r1, {r7, r8, r9}^
    1ef0:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
    1ef4:	000000d1 	ldrdeq	r0, [r0], -r1
    1ef8:	08cb0384 	stmiaeq	fp, {r2, r7, r8, r9}^
    1efc:	19040000 	stmdbne	r4, {}	; <UNPREDICTABLE>
    1f00:	000000d1 	ldrdeq	r0, [r0], -r1
    1f04:	05890388 	streq	r0, [r9, #904]	; 0x388
    1f08:	1a040000 	bne	101f10 <_start-0xbff060f0>
    1f0c:	000000d1 	ldrdeq	r0, [r0], -r1
    1f10:	072d038c 	streq	r0, [sp, -ip, lsl #7]!
    1f14:	1b040000 	blne	101f1c <_start-0xbff060e4>
    1f18:	000000d1 	ldrdeq	r0, [r0], -r1
    1f1c:	0c5c0390 	mrrceq	3, 9, r0, ip, cr0
    1f20:	1c040000 	stcne	0, cr0, [r4], {-0}
    1f24:	000000d1 	ldrdeq	r0, [r0], -r1
    1f28:	04e70394 	strbteq	r0, [r7], #916	; 0x394
    1f2c:	1d040000 	stcne	0, cr0, [r4, #-0]
    1f30:	000000d1 	ldrdeq	r0, [r0], -r1
    1f34:	0a5a0398 	beq	1682d9c <_start-0xbe985264>
    1f38:	1e040000 	cdpne	0, 0, cr0, cr4, cr0, {0}
    1f3c:	000000d1 	ldrdeq	r0, [r0], -r1
    1f40:	0e5a039c 	mrceq	3, 2, r0, cr10, cr12, {4}
    1f44:	1f040000 	svcne	0x00040000
    1f48:	000000d1 	ldrdeq	r0, [r0], -r1
    1f4c:	0f1003a0 	svceq	0x001003a0
    1f50:	20040000 	andcs	r0, r4, r0
    1f54:	000000d1 	ldrdeq	r0, [r0], -r1
    1f58:	05a703a4 	streq	r0, [r7, #932]!	; 0x3a4
    1f5c:	21040000 	mrscs	r0, (UNDEF: 4)
    1f60:	00000f77 	andeq	r0, r0, r7, ror pc
    1f64:	0e4e03a8 	cdpeq	3, 4, cr0, cr14, cr8, {5}
    1f68:	22040000 	andcs	r0, r4, #0
    1f6c:	000000d1 	ldrdeq	r0, [r0], -r1
    1f70:	050b03c0 	streq	r0, [fp, #-960]	; 0xfffffc40
    1f74:	23040000 	movwcs	r0, #16384	; 0x4000
    1f78:	000000d1 	ldrdeq	r0, [r0], -r1
    1f7c:	04b203c4 	ldrteq	r0, [r2], #964	; 0x3c4
    1f80:	24040000 	strcs	r0, [r4], #-0
    1f84:	000000d1 	ldrdeq	r0, [r0], -r1
    1f88:	0e3803c8 	cdpeq	3, 3, cr0, cr8, cr8, {6}
    1f8c:	25040000 	strcs	r0, [r4, #-0]
    1f90:	000000d1 	ldrdeq	r0, [r0], -r1
    1f94:	0b0c03cc 	bleq	302ecc <_start-0xbfd05134>
    1f98:	26040000 	strcs	r0, [r4], -r0
    1f9c:	000000d1 	ldrdeq	r0, [r0], -r1
    1fa0:	098e03d0 	stmibeq	lr, {r4, r6, r7, r8, r9}
    1fa4:	27040000 	strcs	r0, [r4, -r0]
    1fa8:	000000d1 	ldrdeq	r0, [r0], -r1
    1fac:	0b0303d4 	bleq	c2f04 <_start-0xbff450fc>
    1fb0:	28040000 	stmdacs	r4, {}	; <UNPREDICTABLE>
    1fb4:	000000d1 	ldrdeq	r0, [r0], -r1
    1fb8:	05ac03d8 	streq	r0, [ip, #984]!	; 0x3d8
    1fbc:	29040000 	stmdbcs	r4, {}	; <UNPREDICTABLE>
    1fc0:	00000f8c 	andeq	r0, r0, ip, lsl #31
    1fc4:	04100fdc 	ldreq	r0, [r0], #-4060	; 0xfffff024
    1fc8:	2a040000 	bcs	101fd0 <_start-0xbff06030>
    1fcc:	000000d1 	ldrdeq	r0, [r0], -r1
    1fd0:	ab0f0100 	blge	3c23d8 <_start-0xbfc45c28>
    1fd4:	0400000a 	streq	r0, [r0], #-10
    1fd8:	0000d12b 	andeq	sp, r0, fp, lsr #2
    1fdc:	0f010400 	svceq	0x00010400
    1fe0:	00000d81 	andeq	r0, r0, r1, lsl #27
    1fe4:	00d12c04 	sbcseq	r2, r1, r4, lsl #24
    1fe8:	01080000 	mrseq	r0, (UNDEF: 8)
    1fec:	000bd30f 	andeq	sp, fp, pc, lsl #6
    1ff0:	d12d0400 			; <UNDEFINED> instruction: 0xd12d0400
    1ff4:	0c000000 	stceq	0, cr0, [r0], {-0}
    1ff8:	0b5d0f01 	bleq	1745c04 <_start-0xbe8c23fc>
    1ffc:	2e040000 	cdpcs	0, 0, cr0, cr4, cr0, {0}
    2000:	000000d1 	ldrdeq	r0, [r0], -r1
    2004:	c50f0110 	strgt	r0, [pc, #-272]	; 1efc <_start-0xc0006104>
    2008:	0400000c 	streq	r0, [r0], #-12
    200c:	0000d12f 	andeq	sp, r0, pc, lsr #2
    2010:	0f011400 	svceq	0x00011400
    2014:	000005b1 			; <UNDEFINED> instruction: 0x000005b1
    2018:	0fa13004 	svceq	0x00a13004
    201c:	01180000 	tsteq	r8, r0
    2020:	000e270f 	andeq	r2, lr, pc, lsl #14
    2024:	d1310400 	teqle	r1, r0, lsl #8
    2028:	40000000 	andmi	r0, r0, r0
    202c:	0a410f01 	beq	1045c38 <_start-0xbefc23c8>
    2030:	32040000 	andcc	r0, r4, #0
    2034:	000000d1 	ldrdeq	r0, [r0], -r1
    2038:	b60f0144 	strlt	r0, [pc], -r4, asr #2
    203c:	04000005 	streq	r0, [r0], #-5
    2040:	000fb633 	andeq	fp, pc, r3, lsr r6	; <UNPREDICTABLE>
    2044:	0f014800 	svceq	0x00014800
    2048:	00000eec 	andeq	r0, r0, ip, ror #29
    204c:	00d13404 	sbcseq	r3, r1, r4, lsl #8
    2050:	01800000 	orreq	r0, r0, r0
    2054:	00057d0f 	andeq	r7, r5, pc, lsl #26
    2058:	d1350400 	teqle	r5, r0, lsl #8
    205c:	84000000 	strhi	r0, [r0], #-0
    2060:	0b680f01 	bleq	1a05c6c <_start-0xbe602394>
    2064:	36040000 	strcc	r0, [r4], -r0
    2068:	000000d1 	ldrdeq	r0, [r0], -r1
    206c:	2c0f0188 	stfcss	f0, [pc], {136}	; 0x88
    2070:	0400000e 	streq	r0, [r0], #-14
    2074:	0000d137 	andeq	sp, r0, r7, lsr r1
    2078:	0f018c00 	svceq	0x00018c00
    207c:	000007fe 	strdeq	r0, [r0], -lr
    2080:	00d13804 	sbcseq	r3, r1, r4, lsl #16
    2084:	01900000 	orrseq	r0, r0, r0
    2088:	0004ff0f 	andeq	pc, r4, pc, lsl #30
    208c:	d1390400 	teqle	r9, r0, lsl #8
    2090:	94000000 	strls	r0, [r0], #-0
    2094:	0b510f01 	bleq	1445ca0 <_start-0xbebc2360>
    2098:	3a040000 	bcc	1020a0 <_start-0xbff05f60>
    209c:	000000d1 	ldrdeq	r0, [r0], -r1
    20a0:	e50f0198 	str	r0, [pc, #-408]	; 1f10 <_start-0xc00060f0>
    20a4:	04000008 	streq	r0, [r0], #-8
    20a8:	0000d13b 	andeq	sp, r0, fp, lsr r1
    20ac:	0f019c00 	svceq	0x00019c00
    20b0:	00000535 	andeq	r0, r0, r5, lsr r5
    20b4:	00d13c04 	sbcseq	r3, r1, r4, lsl #24
    20b8:	01a00000 	moveq	r0, r0
    20bc:	0008e30f 	andeq	lr, r8, pc, lsl #6
    20c0:	d13d0400 	teqle	sp, r0, lsl #8
    20c4:	a4000000 	strge	r0, [r0], #-0
    20c8:	05bb0f01 	ldreq	r0, [fp, #3841]!	; 0xf01
    20cc:	3e040000 	cdpcc	0, 0, cr0, cr4, cr0, {0}
    20d0:	00000fcb 	andeq	r0, r0, fp, asr #31
    20d4:	c70f01a8 	strgt	r0, [pc, -r8, lsr #3]
    20d8:	04000006 	streq	r0, [r0], #-6
    20dc:	0000d13f 	andeq	sp, r0, pc, lsr r1
    20e0:	0f020000 	svceq	0x00020000
    20e4:	000009b7 			; <UNDEFINED> instruction: 0x000009b7
    20e8:	00d14004 	sbcseq	r4, r1, r4
    20ec:	02040000 	andeq	r0, r4, #0
    20f0:	000d380f 	andeq	r3, sp, pc, lsl #16
    20f4:	d1410400 	cmple	r1, r0, lsl #8
    20f8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    20fc:	045c0f02 	ldrbeq	r0, [ip], #-3842	; 0xfffff0fe
    2100:	42040000 	andmi	r0, r4, #0
    2104:	000000d1 	ldrdeq	r0, [r0], -r1
    2108:	b60f020c 	strlt	r0, [pc], -ip, lsl #4
    210c:	04000003 	streq	r0, [r0], #-3
    2110:	0000d143 	andeq	sp, r0, r3, asr #2
    2114:	0f021000 	svceq	0x00021000
    2118:	00000d9b 	muleq	r0, fp, sp
    211c:	00d14404 	sbcseq	r4, r1, r4, lsl #8
    2120:	02140000 	andseq	r0, r4, #0
    2124:	0004be0f 	andeq	fp, r4, pc, lsl #28
    2128:	d1450400 	cmple	r5, r0, lsl #8
    212c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    2130:	07750f02 	ldrbeq	r0, [r5, -r2, lsl #30]!
    2134:	46040000 	strmi	r0, [r4], -r0
    2138:	000000d1 	ldrdeq	r0, [r0], -r1
    213c:	3e0f021c 	mcrcc	2, 0, r0, cr15, cr12, {0}
    2140:	0400000c 	streq	r0, [r0], #-12
    2144:	0000d147 	andeq	sp, r0, r7, asr #2
    2148:	0f022000 	svceq	0x00022000
    214c:	00000388 	andeq	r0, r0, r8, lsl #7
    2150:	00d14804 	sbcseq	r4, r1, r4, lsl #16
    2154:	02240000 	eoreq	r0, r4, #0
    2158:	0006d50f 	andeq	sp, r6, pc, lsl #10
    215c:	cb490400 	blgt	1243164 <_start-0xbedc4e9c>
    2160:	2800000f 	stmdacs	r0, {r0, r1, r2, r3}
    2164:	04f10f02 	ldrbteq	r0, [r1], #3842	; 0xf02
    2168:	4a040000 	bmi	102170 <_start-0xbff05e90>
    216c:	000000d1 	ldrdeq	r0, [r0], -r1
    2170:	c60f0280 	strgt	r0, [pc], -r0, lsl #5
    2174:	04000007 	streq	r0, [r0], #-7
    2178:	0000d14b 	andeq	sp, r0, fp, asr #2
    217c:	0f028400 	svceq	0x00028400
    2180:	00000b95 	muleq	r0, r5, fp
    2184:	00d14c04 	sbcseq	r4, r1, r4, lsl #24
    2188:	02880000 	addeq	r0, r8, #0
    218c:	000e640f 	andeq	r6, lr, pc, lsl #8
    2190:	d14d0400 	cmple	sp, r0, lsl #8
    2194:	8c000000 	stchi	0, cr0, [r0], {-0}
    2198:	09180f02 	ldmdbeq	r8, {r1, r8, r9, sl, fp}
    219c:	4e040000 	cdpmi	0, 0, cr0, cr4, cr0, {0}
    21a0:	000000d1 	ldrdeq	r0, [r0], -r1
    21a4:	200f0290 	mulcs	pc, r0, r2	; <UNPREDICTABLE>
    21a8:	0400000c 	streq	r0, [r0], #-12
    21ac:	0000d14f 	andeq	sp, r0, pc, asr #2
    21b0:	0f029400 	svceq	0x00029400
    21b4:	00000f40 	andeq	r0, r0, r0, asr #30
    21b8:	00d15004 	sbcseq	r5, r1, r4
    21bc:	02980000 	addseq	r0, r8, #0
    21c0:	0005dc0f 	andeq	sp, r5, pc, lsl #24
    21c4:	d1510400 	cmple	r1, r0, lsl #8
    21c8:	9c000000 	stcls	0, cr0, [r0], {-0}
    21cc:	03e00f02 	mvneq	r0, #2, 30
    21d0:	52040000 	andpl	r0, r4, #0
    21d4:	00000fe0 	andeq	r0, r0, r0, ror #31
    21d8:	a90f02a0 	stmdbge	pc, {r5, r7, r9}	; <UNPREDICTABLE>
    21dc:	0400000d 	streq	r0, [r0], #-13
    21e0:	0000d153 	andeq	sp, r0, r3, asr r1
    21e4:	0f030000 	svceq	0x00030000
    21e8:	00000db9 			; <UNDEFINED> instruction: 0x00000db9
    21ec:	00d15404 	sbcseq	r5, r1, r4, lsl #8
    21f0:	03040000 	movweq	r0, #16384	; 0x4000
    21f4:	000d0e0f 	andeq	r0, sp, pc, lsl #28
    21f8:	d1550400 	cmple	r5, r0, lsl #8
    21fc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2200:	0ca70f03 	stceq	15, cr0, [r7], #12
    2204:	56040000 	strpl	r0, [r4], -r0
    2208:	000000d1 	ldrdeq	r0, [r0], -r1
    220c:	740f030c 	strvc	r0, [pc], #-780	; 2214 <_start-0xc0005dec>
    2210:	0400000a 	streq	r0, [r0], #-10
    2214:	0000d157 	andeq	sp, r0, r7, asr r1
    2218:	0f031000 	svceq	0x00031000
    221c:	00000d46 	andeq	r0, r0, r6, asr #26
    2220:	00d15804 	sbcseq	r5, r1, r4, lsl #16
    2224:	03140000 	tsteq	r4, #0
    2228:	000c870f 	andeq	r8, ip, pc, lsl #14
    222c:	d1590400 	cmple	r9, r0, lsl #8
    2230:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    2234:	0f190f03 	svceq	0x00190f03
    2238:	5a040000 	bpl	102240 <_start-0xbff05dc0>
    223c:	000000d1 	ldrdeq	r0, [r0], -r1
    2240:	100f031c 	andne	r0, pc, ip, lsl r3	; <UNPREDICTABLE>
    2244:	04000006 	streq	r0, [r0], #-6
    2248:	0000d15b 	andeq	sp, r0, fp, asr r1
    224c:	0f032000 	svceq	0x00032000
    2250:	00000906 	andeq	r0, r0, r6, lsl #18
    2254:	00d15c04 	sbcseq	r5, r1, r4, lsl #24
    2258:	03240000 			; <UNDEFINED> instruction: 0x03240000
    225c:	0003e60f 	andeq	lr, r3, pc, lsl #12
    2260:	cb5d0400 	blgt	1743268 <_start-0xbe8c4d98>
    2264:	2800000f 	stmdacs	r0, {r0, r1, r2, r3}
    2268:	099a0f03 	ldmibeq	sl, {r0, r1, r8, r9, sl, fp}
    226c:	5e040000 	cdppl	0, 0, cr0, cr4, cr0, {0}
    2270:	000000d1 	ldrdeq	r0, [r0], -r1
    2274:	d00f0380 	andle	r0, pc, r0, lsl #7
    2278:	0400000c 	streq	r0, [r0], #-12
    227c:	0000d15f 	andeq	sp, r0, pc, asr r1
    2280:	0f038400 	svceq	0x00038400
    2284:	00000bb1 			; <UNDEFINED> instruction: 0x00000bb1
    2288:	00d16004 	sbcseq	r6, r1, r4
    228c:	03880000 	orreq	r0, r8, #0
    2290:	000e860f 	andeq	r8, lr, pc, lsl #12
    2294:	d1610400 	cmnle	r1, r0, lsl #8
    2298:	8c000000 	stchi	0, cr0, [r0], {-0}
    229c:	056d0f03 	strbeq	r0, [sp, #-3843]!	; 0xfffff0fd
    22a0:	62040000 	andvs	r0, r4, #0
    22a4:	000000d1 	ldrdeq	r0, [r0], -r1
    22a8:	160f0390 			; <UNDEFINED> instruction: 0x160f0390
    22ac:	04000008 	streq	r0, [r0], #-8
    22b0:	0000d163 	andeq	sp, r0, r3, ror #2
    22b4:	0f039400 	svceq	0x00039400
    22b8:	00000717 	andeq	r0, r0, r7, lsl r7
    22bc:	00d16404 	sbcseq	r6, r1, r4, lsl #8
    22c0:	03980000 	orrseq	r0, r8, #0
    22c4:	000a310f 	andeq	r3, sl, pc, lsl #2
    22c8:	d1650400 	cmnle	r5, r0, lsl #8
    22cc:	9c000000 	stcls	0, cr0, [r0], {-0}
    22d0:	03ec0f03 	mvneq	r0, #3, 30
    22d4:	66040000 	strvs	r0, [r4], -r0
    22d8:	00000fe0 	andeq	r0, r0, r0, ror #31
    22dc:	6a0f03a0 	bvs	3c3164 <_start-0xbfc44e9c>
    22e0:	04000004 	streq	r0, [r0], #-4
    22e4:	0000d167 	andeq	sp, r0, r7, ror #2
    22e8:	0f040000 	svceq	0x00040000
    22ec:	00000867 	andeq	r0, r0, r7, ror #16
    22f0:	00d16804 	sbcseq	r6, r1, r4, lsl #16
    22f4:	04040000 	streq	r0, [r4], #-0
    22f8:	000f370f 	andeq	r3, pc, pc, lsl #14
    22fc:	d1690400 	cmnle	r9, r0, lsl #8
    2300:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2304:	09780f04 	ldmdbeq	r8!, {r2, r8, r9, sl, fp}^
    2308:	6a040000 	bvs	102310 <_start-0xbff05cf0>
    230c:	000000d1 	ldrdeq	r0, [r0], -r1
    2310:	b70f040c 	strlt	r0, [pc, -ip, lsl #8]
    2314:	0400000c 	streq	r0, [r0], #-12
    2318:	0000d16b 	andeq	sp, r0, fp, ror #2
    231c:	0f041000 	svceq	0x00041000
    2320:	00000b21 	andeq	r0, r0, r1, lsr #22
    2324:	00d16c04 	sbcseq	r6, r1, r4, lsl #24
    2328:	04140000 	ldreq	r0, [r4], #-0
    232c:	000cf80f 	andeq	pc, ip, pc, lsl #16
    2330:	d16d0400 	cmnle	sp, r0, lsl #8
    2334:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    2338:	08260f04 	stmdaeq	r6!, {r2, r8, r9, sl, fp}
    233c:	6e040000 	cdpvs	0, 0, cr0, cr4, cr0, {0}
    2340:	000000d1 	ldrdeq	r0, [r0], -r1
    2344:	560f041c 			; <UNDEFINED> instruction: 0x560f041c
    2348:	0400000d 	streq	r0, [r0], #-13
    234c:	0000d16f 	andeq	sp, r0, pc, ror #2
    2350:	0f042000 	svceq	0x00042000
    2354:	000003f2 	strdeq	r0, [r0], -r2
    2358:	0ff57004 	svceq	0x00f57004
    235c:	04240000 	strteq	r0, [r4], #-0
    2360:	0006f80f 	andeq	pc, r6, pc, lsl #16
    2364:	d1710400 	cmnle	r1, r0, lsl #8
    2368:	00000000 	andeq	r0, r0, r0
    236c:	096f0f08 	stmdbeq	pc!, {r3, r8, r9, sl, fp}^	; <UNPREDICTABLE>
    2370:	72040000 	andvc	r0, r4, #0
    2374:	000000d1 	ldrdeq	r0, [r0], -r1
    2378:	b60f0804 	strlt	r0, [pc], -r4, lsl #16
    237c:	0400000e 	streq	r0, [r0], #-14
    2380:	0000d173 	andeq	sp, r0, r3, ror r1
    2384:	0f080800 	svceq	0x00080800
    2388:	00000957 	andeq	r0, r0, r7, asr r9
    238c:	00d17404 	sbcseq	r7, r1, r4, lsl #8
    2390:	080c0000 	stmdaeq	ip, {}	; <UNPREDICTABLE>
    2394:	0003f80f 	andeq	pc, r3, pc, lsl #16
    2398:	0a750400 	beq	1d433a0 <_start-0xbe2c4c60>
    239c:	10000010 	andne	r0, r0, r0, lsl r0
    23a0:	0b820f08 	bleq	fe085fc8 <__bss_end__+0x3e07b600>
    23a4:	76040000 	strvc	r0, [r4], -r0
    23a8:	000000d1 	ldrdeq	r0, [r0], -r1
    23ac:	be0f0820 	cdplt	8, 0, cr0, cr15, cr0, {1}
    23b0:	04000006 	streq	r0, [r0], #-6
    23b4:	0000d177 	andeq	sp, r0, r7, ror r1
    23b8:	0f082400 	svceq	0x00082400
    23bc:	00000bc9 	andeq	r0, r0, r9, asr #23
    23c0:	00d17804 	sbcseq	r7, r1, r4, lsl #16
    23c4:	08280000 	stmdaeq	r8!, {}	; <UNPREDICTABLE>
    23c8:	0009dc0f 	andeq	sp, r9, pc, lsl #24
    23cc:	d1790400 	cmnle	r9, r0, lsl #8
    23d0:	2c000000 	stccs	0, cr0, [r0], {-0}
    23d4:	0bc10f08 	bleq	ff045ffc <__bss_end__+0x3f03b634>
    23d8:	7a040000 	bvc	1023e0 <_start-0xbff05c20>
    23dc:	000000d1 	ldrdeq	r0, [r0], -r1
    23e0:	640f0830 	strvs	r0, [pc], #-2096	; 23e8 <_start-0xc0005c18>
    23e4:	04000005 	streq	r0, [r0], #-5
    23e8:	0000d17b 	andeq	sp, r0, fp, ror r1
    23ec:	0f083400 	svceq	0x00083400
    23f0:	000009c5 	andeq	r0, r0, r5, asr #19
    23f4:	00d17c04 	sbcseq	r7, r1, r4, lsl #24
    23f8:	08380000 	ldmdaeq	r8!, {}	; <UNPREDICTABLE>
    23fc:	0008740f 	andeq	r7, r8, pc, lsl #8
    2400:	d17d0400 	cmnle	sp, r0, lsl #8
    2404:	3c000000 	stccc	0, cr0, [r0], {-0}
    2408:	03fe0f08 	mvnseq	r0, #8, 30
    240c:	7e040000 	cdpvc	0, 0, cr0, cr4, cr0, {0}
    2410:	0000101f 	andeq	r1, r0, pc, lsl r0
    2414:	e60f0840 	str	r0, [pc], -r0, asr #16
    2418:	04000009 	streq	r0, [r0], #-9
    241c:	0000d17f 	andeq	sp, r0, pc, ror r1
    2420:	0f088000 	svceq	0x00088000
    2424:	00000ea7 	andeq	r0, r0, r7, lsr #29
    2428:	00d18004 	sbcseq	r8, r1, r4
    242c:	08840000 	stmeq	r4, {}	; <UNPREDICTABLE>
    2430:	000bf00f 	andeq	pc, fp, pc
    2434:	d1810400 	orrle	r0, r1, r0, lsl #8
    2438:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    243c:	0e9d0f08 	cdpeq	15, 9, cr0, cr13, cr8, {0}
    2440:	82040000 	andhi	r0, r4, #0
    2444:	000000d1 	ldrdeq	r0, [r0], -r1
    2448:	a20f088c 	andge	r0, pc, #140, 16	; 0x8c0000
    244c:	0400000a 	streq	r0, [r0], #-10
    2450:	0000d183 	andeq	sp, r0, r3, lsl #3
    2454:	0f089000 	svceq	0x00089000
    2458:	00000a49 	andeq	r0, r0, r9, asr #20
    245c:	00d18404 	sbcseq	r8, r1, r4, lsl #8
    2460:	08940000 	ldmeq	r4, {}	; <UNPREDICTABLE>
    2464:	000a640f 	andeq	r6, sl, pc, lsl #8
    2468:	d1850400 	orrle	r0, r5, r0, lsl #8
    246c:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
    2470:	0c0a0f08 	stceq	15, cr0, [sl], {8}
    2474:	86040000 	strhi	r0, [r4], -r0
    2478:	000000d1 	ldrdeq	r0, [r0], -r1
    247c:	fb0f089c 	blx	3c46f6 <_start-0xbfc4390a>
    2480:	04000009 	streq	r0, [r0], #-9
    2484:	0000d187 	andeq	sp, r0, r7, lsl #3
    2488:	0f08a000 	svceq	0x0008a000
    248c:	000005ea 	andeq	r0, r0, sl, ror #11
    2490:	00d18804 	sbcseq	r8, r1, r4, lsl #16
    2494:	08a40000 	stmiaeq	r4!, {}	; <UNPREDICTABLE>
    2498:	0004040f 	andeq	r0, r4, pc, lsl #8
    249c:	77890400 	strvc	r0, [r9, r0, lsl #8]
    24a0:	a800000f 	stmdage	r0, {r0, r1, r2, r3}
    24a4:	088d0f08 	stmeq	sp, {r3, r8, r9, sl, fp}
    24a8:	8a040000 	bhi	1024b0 <_start-0xbff05b50>
    24ac:	000000d1 	ldrdeq	r0, [r0], -r1
    24b0:	5b0f08c0 	blpl	3c47b8 <_start-0xbfc43848>
    24b4:	04000008 	streq	r0, [r0], #-8
    24b8:	0000d18b 	andeq	sp, r0, fp, lsl #3
    24bc:	0f08c400 	svceq	0x0008c400
    24c0:	00000742 	andeq	r0, r0, r2, asr #14
    24c4:	00d18c04 	sbcseq	r8, r1, r4, lsl #24
    24c8:	08c80000 	stmiaeq	r8, {}^	; <UNPREDICTABLE>
    24cc:	000dc90f 	andeq	ip, sp, pc, lsl #18
    24d0:	d18d0400 	orrle	r0, sp, r0, lsl #8
    24d4:	cc000000 	stcgt	0, cr0, [r0], {-0}
    24d8:	07a10f08 	streq	r0, [r1, r8, lsl #30]!
    24dc:	8e040000 	cdphi	0, 0, cr0, cr4, cr0, {0}
    24e0:	000000d1 	ldrdeq	r0, [r0], -r1
    24e4:	430f08d0 	movwmi	r0, #63696	; 0xf8d0
    24e8:	0400000e 	streq	r0, [r0], #-14
    24ec:	0000d18f 	andeq	sp, r0, pc, lsl #3
    24f0:	0f08d400 	svceq	0x0008d400
    24f4:	00000bda 	ldrdeq	r0, [r0], -sl
    24f8:	00d19004 	sbcseq	r9, r1, r4
    24fc:	08d80000 	ldmeq	r8, {}^	; <UNPREDICTABLE>
    2500:	0009400f 	andeq	r4, r9, pc
    2504:	d1910400 	orrsle	r0, r1, r0, lsl #8
    2508:	dc000000 	stcle	0, cr0, [r0], {-0}
    250c:	0e0b0f08 	cdpeq	15, 0, cr0, cr11, cr8, {0}
    2510:	92040000 	andls	r0, r4, #0
    2514:	000000d1 	ldrdeq	r0, [r0], -r1
    2518:	140f08e0 	strne	r0, [pc], #-2272	; 2520 <_start-0xc0005ae0>
    251c:	0400000c 	streq	r0, [r0], #-12
    2520:	0000d193 	muleq	r0, r3, r1
    2524:	0f08e400 	svceq	0x0008e400
    2528:	000006eb 	andeq	r0, r0, fp, ror #13
    252c:	00d19404 	sbcseq	r9, r1, r4, lsl #8
    2530:	08e80000 	stmiaeq	r8!, {}^	; <UNPREDICTABLE>
    2534:	0009aa0f 	andeq	sl, r9, pc, lsl #20
    2538:	d1950400 	orrsle	r0, r5, r0, lsl #8
    253c:	ec000000 	stc	0, cr0, [r0], {-0}
    2540:	05220f08 	streq	r0, [r2, #-3848]!	; 0xfffff0f8
    2544:	96040000 	strls	r0, [r4], -r0
    2548:	000000d1 	ldrdeq	r0, [r0], -r1
    254c:	d40f08f0 	strle	r0, [pc], #-2288	; 2554 <_start-0xc0005aac>
    2550:	0400000d 	streq	r0, [r0], #-13
    2554:	0000d197 	muleq	r0, r7, r1
    2558:	0f08f400 	svceq	0x0008f400
    255c:	0000044f 	andeq	r0, r0, pc, asr #8
    2560:	00d19804 	sbcseq	r9, r1, r4, lsl #16
    2564:	08f80000 	ldmeq	r8!, {}^	; <UNPREDICTABLE>
    2568:	0006280f 	andeq	r2, r6, pc, lsl #16
    256c:	d1990400 	orrsle	r0, r9, r0, lsl #8
    2570:	fc000000 	stc2	0, cr0, [r0], {-0}
    2574:	0df20f08 	ldcleq	15, cr0, [r2, #32]!
    2578:	9a040000 	bls	102580 <_start-0xbff05a80>
    257c:	000000d1 	ldrdeq	r0, [r0], -r1
    2580:	060f0900 	streq	r0, [pc], -r0, lsl #18
    2584:	0400000f 	streq	r0, [r0], #-15
    2588:	0000d19b 	muleq	r0, fp, r1
    258c:	0f090400 	svceq	0x00090400
    2590:	00000727 	andeq	r0, r0, r7, lsr #14
    2594:	0f4d9c04 	svceq	0x004d9c04
    2598:	09080000 	stmdbeq	r8, {}	; <UNPREDICTABLE>
    259c:	0007360f 	andeq	r3, r7, pc, lsl #12
    25a0:	d19d0400 	orrsle	r0, sp, r0, lsl #8
    25a4:	0c000000 	stceq	0, cr0, [r0], {-0}
    25a8:	040a0f09 	streq	r0, [sl], #-3849	; 0xfffff0f7
    25ac:	9e040000 	cdpls	0, 0, cr0, cr4, cr0, {0}
    25b0:	00000f4d 	andeq	r0, r0, sp, asr #30
    25b4:	6d0f0910 	vstrvs.16	s0, [pc, #-32]	; 259c <_start-0xc0005a64>	; <UNPREDICTABLE>
    25b8:	0400000c 	streq	r0, [r0], #-12
    25bc:	0000d19f 	muleq	r0, pc, r1	; <UNPREDICTABLE>
    25c0:	0f091400 	svceq	0x00091400
    25c4:	00000b17 	andeq	r0, r0, r7, lsl fp
    25c8:	00d1a004 	sbcseq	sl, r1, r4
    25cc:	09180000 	ldmdbeq	r8, {}	; <UNPREDICTABLE>
    25d0:	000e720f 	andeq	r7, lr, pc, lsl #4
    25d4:	d1a10400 			; <UNDEFINED> instruction: 0xd1a10400
    25d8:	1c000000 	stcne	0, cr0, [r0], {-0}
    25dc:	07e40f09 	strbeq	r0, [r4, r9, lsl #30]!
    25e0:	a2040000 	andge	r0, r4, #0
    25e4:	000000d1 	ldrdeq	r0, [r0], -r1
    25e8:	360f0920 	strcc	r0, [pc], -r0, lsr #18
    25ec:	04000009 	streq	r0, [r0], #-9
    25f0:	0000d1a3 	andeq	sp, r0, r3, lsr #3
    25f4:	0f092400 	svceq	0x00092400
    25f8:	00000b29 	andeq	r0, r0, r9, lsr #22
    25fc:	00d1a404 	sbcseq	sl, r1, r4, lsl #8
    2600:	09280000 	stmdbeq	r8!, {}	; <UNPREDICTABLE>
    2604:	0005f30f 	andeq	pc, r5, pc, lsl #6
    2608:	d1a50400 			; <UNDEFINED> instruction: 0xd1a50400
    260c:	2c000000 	stccs	0, cr0, [r0], {-0}
    2610:	0c790f09 	ldcleq	15, cr0, [r9], #-36	; 0xffffffdc
    2614:	a6040000 	strge	r0, [r4], -r0
    2618:	000000d1 	ldrdeq	r0, [r0], -r1
    261c:	970f0930 	smladxls	pc, r0, r9, r0	; <UNPREDICTABLE>
    2620:	04000004 	streq	r0, [r0], #-4
    2624:	0000d1a7 	andeq	sp, r0, r7, lsr #3
    2628:	0f093400 	svceq	0x00093400
    262c:	00000516 	andeq	r0, r0, r6, lsl r5
    2630:	1034a804 	eorsne	sl, r4, r4, lsl #16
    2634:	09380000 	ldmdbeq	r8!, {}	; <UNPREDICTABLE>
    2638:	000a150f 	andeq	r1, sl, pc, lsl #10
    263c:	d1a90400 			; <UNDEFINED> instruction: 0xd1a90400
    2640:	80000000 	andhi	r0, r0, r0
    2644:	0d2c0f09 	stceq	15, cr0, [ip, #-36]!	; 0xffffffdc
    2648:	aa040000 	bge	102650 <_start-0xbff059b0>
    264c:	000000d1 	ldrdeq	r0, [r0], -r1
    2650:	430f0984 	movwmi	r0, #63876	; 0xf984
    2654:	04000006 	streq	r0, [r0], #-6
    2658:	0000d1ab 	andeq	sp, r0, fp, lsr #3
    265c:	0f098800 	svceq	0x00098800
    2660:	00000552 	andeq	r0, r0, r2, asr r5
    2664:	00d1ac04 	sbcseq	sl, r1, r4, lsl #24
    2668:	098c0000 	stmibeq	ip, {}	; <UNPREDICTABLE>
    266c:	00080a0f 	andeq	r0, r8, pc, lsl #20
    2670:	d1ad0400 			; <UNDEFINED> instruction: 0xd1ad0400
    2674:	90000000 	andls	r0, r0, r0
    2678:	0d6d0f09 	stcleq	15, cr0, [sp, #-36]!	; 0xffffffdc
    267c:	ae040000 	cdpge	0, 0, cr0, cr4, cr0, {0}
    2680:	000000d1 	ldrdeq	r0, [r0], -r1
    2684:	b20f0994 	andlt	r0, pc, #148, 18	; 0x250000
    2688:	04000006 	streq	r0, [r0], #-6
    268c:	0000d1af 	andeq	sp, r0, pc, lsr #3
    2690:	0f099800 	svceq	0x00099800
    2694:	00000cec 	andeq	r0, r0, ip, ror #25
    2698:	00d1b004 	sbcseq	fp, r1, r4
    269c:	099c0000 	ldmibeq	ip, {}	; <UNPREDICTABLE>
    26a0:	0008310f 	andeq	r3, r8, pc, lsl #2
    26a4:	d1b10400 			; <UNDEFINED> instruction: 0xd1b10400
    26a8:	a0000000 	andge	r0, r0, r0
    26ac:	08f10f09 	ldmeq	r1!, {r0, r3, r8, r9, sl, fp}^
    26b0:	b2040000 	andlt	r0, r4, #0
    26b4:	000000d1 	ldrdeq	r0, [r0], -r1
    26b8:	e00f09a4 	and	r0, pc, r4, lsr #19
    26bc:	0400000c 	streq	r0, [r0], #-12
    26c0:	0000d1b3 			; <UNDEFINED> instruction: 0x0000d1b3
    26c4:	0f09a800 	svceq	0x0009a800
    26c8:	000005c0 	andeq	r0, r0, r0, asr #11
    26cc:	00d1b404 	sbcseq	fp, r1, r4, lsl #8
    26d0:	09ac0000 	stmibeq	ip!, {}	; <UNPREDICTABLE>
    26d4:	00051c0f 	andeq	r1, r5, pc, lsl #24
    26d8:	49b50400 	ldmibmi	r5!, {sl}
    26dc:	b0000010 	andlt	r0, r0, r0, lsl r0
    26e0:	08d50f09 	ldmeq	r5, {r0, r3, r8, r9, sl, fp}^
    26e4:	b6040000 	strlt	r0, [r4], -r0
    26e8:	000000d1 	ldrdeq	r0, [r0], -r1
    26ec:	410f0a00 	tstmi	pc, r0, lsl #20
    26f0:	04000004 	streq	r0, [r0], #-4
    26f4:	0000d1b7 			; <UNDEFINED> instruction: 0x0000d1b7
    26f8:	0f0a0400 	svceq	0x000a0400
    26fc:	000009ed 	andeq	r0, r0, sp, ror #19
    2700:	00d1b804 	sbcseq	fp, r1, r4, lsl #16
    2704:	0a080000 	beq	20270c <_start-0xbfe058f4>
    2708:	000c4e0f 	andeq	r4, ip, pc, lsl #28
    270c:	d1b90400 			; <UNDEFINED> instruction: 0xd1b90400
    2710:	0c000000 	stceq	0, cr0, [r0], {-0}
    2714:	0d1e0f0a 	ldceq	15, cr0, [lr, #-40]	; 0xffffffd8
    2718:	ba040000 	blt	102720 <_start-0xbff058e0>
    271c:	000000d1 	ldrdeq	r0, [r0], -r1
    2720:	c40f0a10 	strgt	r0, [pc], #-2576	; 2728 <_start-0xc00058d8>
    2724:	04000003 	streq	r0, [r0], #-3
    2728:	0000d1bb 			; <UNDEFINED> instruction: 0x0000d1bb
    272c:	0f0a1400 	svceq	0x000a1400
    2730:	00000d00 	andeq	r0, r0, r0, lsl #26
    2734:	00d1bc04 	sbcseq	fp, r1, r4, lsl #24
    2738:	0a180000 	beq	602740 <_start-0xbfa058c0>
    273c:	0003a80f 	andeq	sl, r3, pc, lsl #16
    2740:	d1bd0400 			; <UNDEFINED> instruction: 0xd1bd0400
    2744:	1c000000 	stcne	0, cr0, [r0], {-0}
    2748:	0a940f0a 	beq	fe506378 <__bss_end__+0x3e4fb9b0>
    274c:	be040000 	cdplt	0, 0, cr0, cr4, cr0, {0}
    2750:	000000d1 	ldrdeq	r0, [r0], -r1
    2754:	5f0f0a20 	svcpl	0x000f0a20
    2758:	0400000d 	streq	r0, [r0], #-13
    275c:	0000d1bf 			; <UNDEFINED> instruction: 0x0000d1bf
    2760:	0f0a2400 	svceq	0x000a2400
    2764:	00000793 	muleq	r0, r3, r7
    2768:	00d1c004 	sbcseq	ip, r1, r4
    276c:	0a280000 	beq	a02774 <_start-0xbf60588c>
    2770:	0006680f 	andeq	r6, r6, pc, lsl #16
    2774:	d1c10400 	bicle	r0, r1, r0, lsl #8
    2778:	2c000000 	stccs	0, cr0, [r0], {-0}
    277c:	0f310f0a 	svceq	0x00310f0a
    2780:	c2040000 	andgt	r0, r4, #0
    2784:	00000f38 	andeq	r0, r0, r8, lsr pc
    2788:	430f0a30 	movwmi	r0, #64048	; 0xfa30
    278c:	04000005 	streq	r0, [r0], #-5
    2790:	0000d1c3 	andeq	sp, r0, r3, asr #3
    2794:	0f0a3800 	svceq	0x000a3800
    2798:	000007ef 	andeq	r0, r0, pc, ror #15
    279c:	00d1c404 	sbcseq	ip, r1, r4, lsl #8
    27a0:	0a3c0000 	beq	f027a8 <_start-0xbf105858>
    27a4:	00052f0f 	andeq	r2, r5, pc, lsl #30
    27a8:	1fc50400 	svcne	0x00c50400
    27ac:	40000010 	andmi	r0, r0, r0, lsl r0
    27b0:	0ae70f0a 	beq	ff9c63e0 <__bss_end__+0x3f9bba18>
    27b4:	c6040000 	strgt	r0, [r4], -r0
    27b8:	000000d1 	ldrdeq	r0, [r0], -r1
    27bc:	8d0f0a80 	vstrhi	s0, [pc, #-512]	; 25c4 <_start-0xc0005a3c>
    27c0:	0400000d 	streq	r0, [r0], #-13
    27c4:	0000d1c7 	andeq	sp, r0, r7, asr #3
    27c8:	0f0a8400 	svceq	0x000a8400
    27cc:	000004a4 	andeq	r0, r0, r4, lsr #9
    27d0:	00d1c804 	sbcseq	ip, r1, r4, lsl #16
    27d4:	0a880000 	beq	fe2027dc <__bss_end__+0x3e1f7e14>
    27d8:	0007670f 	andeq	r6, r7, pc, lsl #14
    27dc:	d1c90400 	bicle	r0, r9, r0, lsl #8
    27e0:	8c000000 	stchi	0, cr0, [r0], {-0}
    27e4:	0b330f0a 	bleq	cc6414 <_start-0xbf341bec>
    27e8:	ca040000 	bgt	1027f0 <_start-0xbff05810>
    27ec:	000000d1 	ldrdeq	r0, [r0], -r1
    27f0:	ce0f0a90 	vmovgt	s31, r0
    27f4:	04000009 	streq	r0, [r0], #-9
    27f8:	0000d1cb 	andeq	sp, r0, fp, asr #3
    27fc:	0f0a9400 	svceq	0x000a9400
    2800:	00000ba3 	andeq	r0, r0, r3, lsr #23
    2804:	00d1cc04 	sbcseq	ip, r1, r4, lsl #24
    2808:	0a980000 	beq	fe602810 <__bss_end__+0x3e5f7e48>
    280c:	0004330f 	andeq	r3, r4, pc, lsl #6
    2810:	d1cd0400 	bicle	r0, sp, r0, lsl #8
    2814:	9c000000 	stcls	0, cr0, [r0], {-0}
    2818:	08b30f0a 	ldmeq	r3!, {r1, r3, r8, r9, sl, fp}
    281c:	ce040000 	cdpgt	0, 0, cr0, cr4, cr0, {0}
    2820:	000000d1 	ldrdeq	r0, [r0], -r1
    2824:	740f0aa0 	strvc	r0, [pc], #-2720	; 282c <_start-0xc00057d4>
    2828:	0400000b 	streq	r0, [r0], #-11
    282c:	0000d1cf 	andeq	sp, r0, pc, asr #3
    2830:	0f0aa400 	svceq	0x000aa400
    2834:	00000ef8 	strdeq	r0, [r0], -r8
    2838:	00d1d004 	sbcseq	sp, r1, r4
    283c:	0aa80000 	beq	fea02844 <__bss_end__+0x3e9f7e7c>
    2840:	0006a40f 	andeq	sl, r6, pc, lsl #8
    2844:	d1d10400 	bicsle	r0, r1, r0, lsl #8
    2848:	ac000000 	stcge	0, cr0, [r0], {-0}
    284c:	0dfd0f0a 	ldcleq	15, cr0, [sp, #40]!	; 0x28
    2850:	d2040000 	andle	r0, r4, #0
    2854:	000000d1 	ldrdeq	r0, [r0], -r1
    2858:	960f0ab0 			; <UNDEFINED> instruction: 0x960f0ab0
    285c:	04000006 	streq	r0, [r0], #-6
    2860:	0000d1d3 	ldrdeq	sp, [r0], -r3
    2864:	0f0ab400 	svceq	0x000ab400
    2868:	00000899 	muleq	r0, r9, r8
    286c:	00d1d404 	sbcseq	sp, r1, r4, lsl #8
    2870:	0ab80000 	beq	fee02878 <__bss_end__+0x3edf7eb0>
    2874:	0006010f 	andeq	r0, r6, pc, lsl #2
    2878:	d1d50400 	bicsle	r0, r5, r0, lsl #8
    287c:	bc000000 	stclt	0, cr0, [r0], {-0}
    2880:	0a6e0f0a 	beq	1b864b0 <_start-0xbe481b50>
    2884:	d6040000 	strle	r0, [r4], -r0
    2888:	0000101f 	andeq	r1, r0, pc, lsl r0
    288c:	170f0ac0 	strne	r0, [pc, -r0, asr #21]
    2890:	0400000e 	streq	r0, [r0], #-14
    2894:	0000d1d7 	ldrdeq	sp, [r0], -r7
    2898:	0f0b0000 	svceq	0x000b0000
    289c:	00000ecc 	andeq	r0, r0, ip, asr #29
    28a0:	00d1d804 	sbcseq	sp, r1, r4, lsl #16
    28a4:	0b040000 	bleq	1028ac <_start-0xbff05754>
    28a8:	000edc0f 	andeq	sp, lr, pc, lsl #24
    28ac:	d1d90400 	bicsle	r0, r9, r0, lsl #8
    28b0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    28b4:	0a050f0b 	beq	1464e8 <_start-0xbfec1b18>
    28b8:	da040000 	ble	1028c0 <_start-0xbff05740>
    28bc:	000000d1 	ldrdeq	r0, [r0], -r1
    28c0:	260f0b0c 	strcs	r0, [pc], -ip, lsl #22
    28c4:	04000009 	streq	r0, [r0], #-9
    28c8:	0000d1db 	ldrdeq	sp, [r0], -fp
    28cc:	0f0b1000 	svceq	0x000b1000
    28d0:	00000c2e 	andeq	r0, r0, lr, lsr #24
    28d4:	00d1dc04 	sbcseq	sp, r1, r4, lsl #24
    28d8:	0b140000 	bleq	5028e0 <_start-0xbfb05720>
    28dc:	0004cc0f 	andeq	ip, r4, pc, lsl #24
    28e0:	d1dd0400 	bicsle	r0, sp, r0, lsl #8
    28e4:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    28e8:	07830f0b 	streq	r0, [r3, fp, lsl #30]
    28ec:	de040000 	cdple	0, 0, cr0, cr4, cr0, {0}
    28f0:	000000d1 	ldrdeq	r0, [r0], -r1
    28f4:	860f0b1c 			; <UNDEFINED> instruction: 0x860f0b1c
    28f8:	04000006 	streq	r0, [r0], #-6
    28fc:	0000d1df 	ldrdeq	sp, [r0], -pc	; <UNPREDICTABLE>
    2900:	0f0b2000 	svceq	0x000b2000
    2904:	00000bfa 	strdeq	r0, [r0], -sl
    2908:	00d1e004 	sbcseq	lr, r1, r4
    290c:	0b240000 	bleq	902914 <_start-0xbf7056ec>
    2910:	00087d0f 	andeq	r7, r8, pc, lsl #26
    2914:	d1e10400 	mvnle	r0, r0, lsl #8
    2918:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    291c:	05cc0f0b 	strbeq	r0, [ip, #3851]	; 0xf0b
    2920:	e2040000 	and	r0, r4, #0
    2924:	000000d1 	ldrdeq	r0, [r0], -r1
    2928:	c70f0b2c 	strgt	r0, [pc, -ip, lsr #22]
    292c:	0400000a 	streq	r0, [r0], #-10
    2930:	0000d1e3 	andeq	sp, r0, r3, ror #3
    2934:	0f0b3000 	svceq	0x000b3000
    2938:	00000398 	muleq	r0, r8, r3
    293c:	00d1e404 	sbcseq	lr, r1, r4, lsl #8
    2940:	0b340000 	bleq	d02948 <_start-0xbf3056b8>
    2944:	0004860f 	andeq	r8, r4, pc, lsl #12
    2948:	d1e50400 	mvnle	r0, r0, lsl #8
    294c:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    2950:	07560f0b 	ldrbeq	r0, [r6, -fp, lsl #30]
    2954:	e6040000 	str	r0, [r4], -r0
    2958:	000000d1 	ldrdeq	r0, [r0], -r1
    295c:	220f0b3c 	andcs	r0, pc, #60, 22	; 0xf000
    2960:	04000006 	streq	r0, [r0], #-6
    2964:	00101fe7 	andseq	r1, r0, r7, ror #31
    2968:	0f0b4000 	svceq	0x000b4000
    296c:	00000423 	andeq	r0, r0, r3, lsr #8
    2970:	00d1e804 	sbcseq	lr, r1, r4, lsl #16
    2974:	0b800000 	bleq	fe00297c <__bss_end__+0x3dff7fb4>
    2978:	0006db0f 	andeq	sp, r6, pc, lsl #22
    297c:	d1e90400 	mvnle	r0, r0, lsl #8
    2980:	84000000 	strhi	r0, [r0], #-0
    2984:	07010f0b 	streq	r0, [r1, -fp, lsl #30]
    2988:	ea040000 	b	102990 <_start-0xbff05670>
    298c:	000000d1 	ldrdeq	r0, [r0], -r1
    2990:	970f0b88 	strls	r0, [pc, -r8, lsl #23]
    2994:	0400000c 	streq	r0, [r0], #-12
    2998:	0000d1eb 	andeq	sp, r0, fp, ror #3
    299c:	0f0b8c00 	svceq	0x000b8c00
    29a0:	0000095f 	andeq	r0, r0, pc, asr r9
    29a4:	00d1ec04 	sbcseq	lr, r1, r4, lsl #24
    29a8:	0b900000 	bleq	fe4029b0 <__bss_end__+0x3e3f7fe8>
    29ac:	000ad70f 	andeq	sp, sl, pc, lsl #14
    29b0:	d1ed0400 	mvnle	r0, r0, lsl #8
    29b4:	94000000 	strls	r0, [r0], #-0
    29b8:	0ab70f0b 	beq	fedc65ec <__bss_end__+0x3edbbc24>
    29bc:	ee040000 	cdp	0, 0, cr0, cr4, cr0, {0}
    29c0:	000000d1 	ldrdeq	r0, [r0], -r1
    29c4:	e20f0b98 	and	r0, pc, #152, 22	; 0x26000
    29c8:	0400000d 	streq	r0, [r0], #-13
    29cc:	0000d1ef 	andeq	sp, r0, pc, ror #3
    29d0:	0f0b9c00 	svceq	0x000b9c00
    29d4:	00000a21 	andeq	r0, r0, r1, lsr #20
    29d8:	00d1f004 	sbcseq	pc, r1, r4
    29dc:	0ba00000 	bleq	fe8029e4 <__bss_end__+0x3e7f801c>
    29e0:	0004760f 	andeq	r7, r4, pc, lsl #12
    29e4:	d1f10400 	mvnsle	r0, r0, lsl #8
    29e8:	a4000000 	strge	r0, [r0], #-0
    29ec:	0a840f0b 	beq	fe106620 <__bss_end__+0x3e0fbc58>
    29f0:	f2040000 	vhadd.s8	d0, d4, d0
    29f4:	000000d1 	ldrdeq	r0, [r0], -r1
    29f8:	580f0ba8 	stmdapl	pc, {r3, r5, r7, r8, r9, fp}	; <UNPREDICTABLE>
    29fc:	04000006 	streq	r0, [r0], #-6
    2a00:	0000d1f3 	strdeq	sp, [r0], -r3
    2a04:	0f0bac00 	svceq	0x000bac00
    2a08:	00000676 	andeq	r0, r0, r6, ror r6
    2a0c:	00d1f404 	sbcseq	pc, r1, r4, lsl #8
    2a10:	0bb00000 	bleq	fec02a18 <__bss_end__+0x3ebf8050>
    2a14:	000b410f 	andeq	r4, fp, pc, lsl #2
    2a18:	d1f50400 	mvnsle	r0, r0, lsl #8
    2a1c:	b4000000 	strlt	r0, [r0], #-0
    2a20:	06320f0b 	ldrteq	r0, [r2], -fp, lsl #30
    2a24:	f6040000 			; <UNDEFINED> instruction: 0xf6040000
    2a28:	000000d1 	ldrdeq	r0, [r0], -r1
    2a2c:	b50f0bb8 	strlt	r0, [pc, #-3000]	; 1e7c <_start-0xc0006184>
    2a30:	04000007 	streq	r0, [r0], #-7
    2a34:	0000d1f7 	strdeq	sp, [r0], -r7
    2a38:	0f0bbc00 	svceq	0x000bbc00
    2a3c:	0000083d 	andeq	r0, r0, sp, lsr r8
    2a40:	101ff804 	andsne	pc, pc, r4, lsl #16
    2a44:	0bc00000 	bleq	ff002a4c <__bss_end__+0x3eff8084>
    2a48:	0008430f 	andeq	r4, r8, pc, lsl #6
    2a4c:	d1f90400 	mvnsle	r0, r0, lsl #8
    2a50:	00000000 	andeq	r0, r0, r0
    2a54:	055e0f0c 	ldrbeq	r0, [lr, #-3852]	; 0xfffff0f4
    2a58:	fa040000 	blx	102a60 <_start-0xbff055a0>
    2a5c:	0000100a 	andeq	r1, r0, sl
    2a60:	d40f0c04 	strle	r0, [pc], #-3076	; 2a68 <_start-0xc0005598>
    2a64:	04000007 	streq	r0, [r0], #-7
    2a68:	0000d1fb 	strdeq	sp, [r0], -fp
    2a6c:	0f0c1400 	svceq	0x000c1400
    2a70:	00000f29 	andeq	r0, r0, r9, lsr #30
    2a74:	00d1fc04 	sbcseq	pc, r1, r4, lsl #24
    2a78:	0c180000 	ldceq	0, cr0, [r8], {-0}
    2a7c:	0003d20f 	andeq	sp, r3, pc, lsl #4
    2a80:	5efd0400 	cdppl	4, 15, cr0, cr13, cr0, {0}
    2a84:	1c000010 	stcne	0, cr0, [r0], {16}
    2a88:	0b8b0f0c 	bleq	fe2c66c0 <__bss_end__+0x3e2bbcf8>
    2a8c:	fe040000 	cdp2	0, 0, cr0, cr4, cr0, {0}
    2a90:	000000d1 	ldrdeq	r0, [r0], -r1
    2a94:	49100ff4 	ldmdbmi	r0, {r2, r4, r5, r6, r7, r8, r9, sl, fp}
    2a98:	04005244 	streq	r5, [r0], #-580	; 0xfffffdbc
    2a9c:	0000d1ff 	strdeq	sp, [r0], -pc	; <UNPREDICTABLE>
    2aa0:	110ff800 	tstne	pc, r0, lsl #16	; <UNPREDICTABLE>
    2aa4:	00000af5 	strdeq	r0, [r0], -r5
    2aa8:	d1010004 	tstle	r1, r4
    2aac:	fc000000 	stc2	0, cr0, [r0], {-0}
    2ab0:	d112000f 	tstle	r2, pc
    2ab4:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    2ab8:	1300000f 	movwne	r0, #15
    2abc:	000000ca 	andeq	r0, r0, sl, asr #1
    2ac0:	28060001 	stmdacs	r6, {r0}
    2ac4:	1200000f 	andne	r0, r0, #15
    2ac8:	000000d1 	ldrdeq	r0, [r0], -r1
    2acc:	00000f4d 	andeq	r0, r0, sp, asr #30
    2ad0:	0000ca13 	andeq	ip, r0, r3, lsl sl
    2ad4:	06000000 	streq	r0, [r0], -r0
    2ad8:	00000f3d 	andeq	r0, r0, sp, lsr pc
    2adc:	0000d112 	andeq	sp, r0, r2, lsl r1
    2ae0:	000f6200 	andeq	r6, pc, r0, lsl #4
    2ae4:	00ca1300 	sbceq	r1, sl, r0, lsl #6
    2ae8:	000c0000 	andeq	r0, ip, r0
    2aec:	000f5206 	andeq	r5, pc, r6, lsl #4
    2af0:	00d11200 	sbcseq	r1, r1, r0, lsl #4
    2af4:	0f770000 	svceq	0x00770000
    2af8:	ca130000 	bgt	4c2b00 <_start-0xbfb45500>
    2afc:	05000000 	streq	r0, [r0, #-0]
    2b00:	0f670600 	svceq	0x00670600
    2b04:	d1120000 	tstle	r2, r0
    2b08:	8c000000 	stchi	0, cr0, [r0], {-0}
    2b0c:	1300000f 	movwne	r0, #15
    2b10:	000000ca 	andeq	r0, r0, sl, asr #1
    2b14:	7c060008 	stcvc	0, cr0, [r6], {8}
    2b18:	1200000f 	andne	r0, r0, #15
    2b1c:	000000d1 	ldrdeq	r0, [r0], -r1
    2b20:	00000fa1 	andeq	r0, r0, r1, lsr #31
    2b24:	0000ca13 	andeq	ip, r0, r3, lsl sl
    2b28:	06000900 	streq	r0, [r0], -r0, lsl #18
    2b2c:	00000f91 	muleq	r0, r1, pc	; <UNPREDICTABLE>
    2b30:	0000d112 	andeq	sp, r0, r2, lsl r1
    2b34:	000fb600 	andeq	fp, pc, r0, lsl #12
    2b38:	00ca1300 	sbceq	r1, sl, r0, lsl #6
    2b3c:	000d0000 	andeq	r0, sp, r0
    2b40:	000fa606 	andeq	sl, pc, r6, lsl #12
    2b44:	00d11200 	sbcseq	r1, r1, r0, lsl #4
    2b48:	0fcb0000 	svceq	0x00cb0000
    2b4c:	ca130000 	bgt	4c2b54 <_start-0xbfb454ac>
    2b50:	15000000 	strne	r0, [r0, #-0]
    2b54:	0fbb0600 	svceq	0x00bb0600
    2b58:	d1120000 	tstle	r2, r0
    2b5c:	e0000000 	and	r0, r0, r0
    2b60:	1300000f 	movwne	r0, #15
    2b64:	000000ca 	andeq	r0, r0, sl, asr #1
    2b68:	d0060017 	andle	r0, r6, r7, lsl r0
    2b6c:	1200000f 	andne	r0, r0, #15
    2b70:	000000d1 	ldrdeq	r0, [r0], -r1
    2b74:	00000ff5 	strdeq	r0, [r0], -r5
    2b78:	0000ca13 	andeq	ip, r0, r3, lsl sl
    2b7c:	0600f600 	streq	pc, [r0], -r0, lsl #12
    2b80:	00000fe5 	andeq	r0, r0, r5, ror #31
    2b84:	0000d112 	andeq	sp, r0, r2, lsl r1
    2b88:	00100a00 	andseq	r0, r0, r0, lsl #20
    2b8c:	00ca1300 	sbceq	r1, sl, r0, lsl #6
    2b90:	00030000 	andeq	r0, r3, r0
    2b94:	000ffa06 	andeq	pc, pc, r6, lsl #20
    2b98:	00d11200 	sbcseq	r1, r1, r0, lsl #4
    2b9c:	101f0000 	andsne	r0, pc, r0
    2ba0:	ca130000 	bgt	4c2ba8 <_start-0xbfb45458>
    2ba4:	0f000000 	svceq	0x00000000
    2ba8:	100f0600 	andne	r0, pc, r0, lsl #12
    2bac:	d1120000 	tstle	r2, r0
    2bb0:	34000000 	strcc	r0, [r0], #-0
    2bb4:	13000010 	movwne	r0, #16
    2bb8:	000000ca 	andeq	r0, r0, sl, asr #1
    2bbc:	24060011 	strcs	r0, [r6], #-17	; 0xffffffef
    2bc0:	12000010 	andne	r0, r0, #16
    2bc4:	000000d1 	ldrdeq	r0, [r0], -r1
    2bc8:	00001049 	andeq	r1, r0, r9, asr #32
    2bcc:	0000ca13 	andeq	ip, r0, r3, lsl sl
    2bd0:	06001300 	streq	r1, [r0], -r0, lsl #6
    2bd4:	00001039 	andeq	r1, r0, r9, lsr r0
    2bd8:	0000d112 	andeq	sp, r0, r2, lsl r1
    2bdc:	00105e00 	andseq	r5, r0, r0, lsl #28
    2be0:	00ca1300 	sbceq	r1, sl, r0, lsl #6
    2be4:	00f50000 	rscseq	r0, r5, r0
    2be8:	00104e06 	andseq	r4, r0, r6, lsl #28
    2bec:	07111400 	ldreq	r1, [r1, -r0, lsl #8]
    2bf0:	01040000 	mrseq	r0, (UNDEF: 4)
    2bf4:	00027601 	andeq	r7, r2, r1, lsl #12
    2bf8:	02431200 	subeq	r1, r3, #0, 4
    2bfc:	107f0000 	rsbsne	r0, pc, r0
    2c00:	ca130000 	bgt	4c2c08 <_start-0xbfb453f8>
    2c04:	31000000 	mrscc	r0, (UNDEF: 0)
    2c08:	0b901500 	bleq	fe408010 <__bss_end__+0x3e3fd648>
    2c0c:	04010000 	streq	r0, [r1], #-0
    2c10:	0000106f 	andeq	r1, r0, pc, rrx
    2c14:	a9900305 	ldmibge	r0, {r0, r2, r8, r9}
    2c18:	6b12c000 	blvs	4b2c20 <_start-0xbfb553e0>
    2c1c:	a0000002 	andge	r0, r0, r2
    2c20:	13000010 	movwne	r0, #16
    2c24:	000000ca 	andeq	r0, r0, sl, asr #1
    2c28:	61160005 	tstvs	r6, r5
    2c2c:	01007272 	tsteq	r0, r2, ror r2
    2c30:	00109019 	andseq	r9, r0, r9, lsl r0
    2c34:	14030500 	strne	r0, [r3], #-1280	; 0xfffffb00
    2c38:	15c000a9 	strbne	r0, [r0, #169]	; 0xa9
    2c3c:	00000f6c 	andeq	r0, r0, ip, ror #30
    2c40:	023d4701 	eorseq	r4, sp, #262144	; 0x40000
    2c44:	03050000 	movweq	r0, #20480	; 0x5000
    2c48:	c000a9c4 	andgt	sl, r0, r4, asr #19
    2c4c:	000f7317 	andeq	r7, pc, r7, lsl r3	; <UNPREDICTABLE>
    2c50:	0a480100 	beq	1203058 <_start-0xbee04fa8>
    2c54:	30000011 	andcc	r0, r0, r1, lsl r0
    2c58:	44c0009e 	strbmi	r0, [r0], #158	; 0x9e
    2c5c:	01000001 	tsteq	r0, r1
    2c60:	00110a9c 	mulseq	r1, ip, sl
    2c64:	9e441800 	cdpls	8, 4, cr1, cr4, cr0, {0}
    2c68:	012cc000 			; <UNDEFINED> instruction: 0x012cc000
    2c6c:	6c190000 	ldcvs	0, cr0, [r9], {-0}
    2c70:	0100000f 	tsteq	r0, pc
    2c74:	00023d58 	andeq	r3, r2, r8, asr sp
    2c78:	70910200 	addsvc	r0, r1, r0, lsl #4
    2c7c:	009e5418 	addseq	r5, lr, r8, lsl r4
    2c80:	00011cc0 	andeq	r1, r1, r0, asr #25
    2c84:	00691a00 	rsbeq	r1, r9, r0, lsl #20
    2c88:	110a5a01 	tstne	sl, r1, lsl #20
    2c8c:	91020000 	mrsls	r0, (UNDEF: 2)
    2c90:	00000074 	andeq	r0, r0, r4, ror r0
    2c94:	6905041b 	stmdbvs	r5, {r0, r1, r3, r4, sl}
    2c98:	1c00746e 	cfstrsne	mvf7, [r0], {110}	; 0x6e
    2c9c:	00000f78 	andeq	r0, r0, r8, ror pc
    2ca0:	9d9c0f01 	ldcls	15, cr0, [ip, #4]
    2ca4:	0094c000 	addseq	ip, r4, r0
    2ca8:	9c010000 	stcls	0, cr0, [r1], {-0}
    2cac:	00001135 	andeq	r1, r0, r5, lsr r1
    2cb0:	000ec719 	andeq	ip, lr, r9, lsl r7
    2cb4:	ed120100 	ldfs	f0, [r2, #-0]
    2cb8:	02000001 	andeq	r0, r0, #1
    2cbc:	1d006891 	stcne	8, cr6, [r0, #-580]	; 0xfffffdbc
    2cc0:	00000f5c 	andeq	r0, r0, ip, asr pc
    2cc4:	9d2c0601 	stcls	6, cr0, [ip, #-4]!
    2cc8:	0070c000 	rsbseq	ip, r0, r0
    2ccc:	9c010000 	stcls	0, cr0, [r1], {-0}
    2cd0:	00736d1e 	rsbseq	r6, r3, lr, lsl sp
    2cd4:	110a0601 	tstne	sl, r1, lsl #12
    2cd8:	91020000 	mrsls	r0, (UNDEF: 2)
    2cdc:	00691a70 	rsbeq	r1, r9, r0, ror sl
    2ce0:	110a0801 	tstne	sl, r1, lsl #16
    2ce4:	91020000 	mrsls	r0, (UNDEF: 2)
    2ce8:	006a1a78 	rsbeq	r1, sl, r8, ror sl
    2cec:	110a0801 	tstne	sl, r1, lsl #16
    2cf0:	91020000 	mrsls	r0, (UNDEF: 2)
    2cf4:	Address 0x00002cf4 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	10001101 	andne	r1, r0, r1, lsl #2
   4:	12011106 	andne	r1, r1, #-2147483647	; 0x80000001
   8:	1b080301 	blne	200c14 <_start-0xbfe073ec>
   c:	13082508 	movwne	r2, #34056	; 0x8508
  10:	00000005 	andeq	r0, r0, r5
  14:	10001101 	andne	r1, r0, r1, lsl #2
  18:	12011106 	andne	r1, r1, #-2147483647	; 0x80000001
  1c:	1b080301 	blne	200c28 <_start-0xbfe073d8>
  20:	13082508 	movwne	r2, #34056	; 0x8508
  24:	00000005 	andeq	r0, r0, r5
  28:	10001101 	andne	r1, r0, r1, lsl #2
  2c:	12011106 	andne	r1, r1, #-2147483647	; 0x80000001
  30:	1b080301 	blne	200c3c <_start-0xbfe073c4>
  34:	13082508 	movwne	r2, #34056	; 0x8508
  38:	00000005 	andeq	r0, r0, r5
  3c:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
  40:	030b130e 	movweq	r1, #45838	; 0xb30e
  44:	110e1b0e 	tstne	lr, lr, lsl #22
  48:	10061201 	andne	r1, r6, r1, lsl #4
  4c:	02000017 	andeq	r0, r0, #23
  50:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
  54:	0b3b0b3a 	bleq	ec2d44 <_start-0xbf1452bc>
  58:	00001349 	andeq	r1, r0, r9, asr #6
  5c:	0b000f03 	bleq	3c70 <_start-0xc0004390>
  60:	000e030b 	andeq	r0, lr, fp, lsl #6
  64:	01010400 	tsteq	r1, r0, lsl #8
  68:	13011349 	movwne	r1, #4937	; 0x1349
  6c:	21050000 	mrscs	r0, (UNDEF: 5)
  70:	2f134900 	svccs	0x00134900
  74:	0600000b 	streq	r0, [r0], -fp
  78:	0b0b0024 	bleq	2c0110 <_start-0xbfd47ef0>
  7c:	0e030b3e 	vmoveq.16	d3[0], r0
  80:	34070000 	strcc	r0, [r7], #-0
  84:	3a0e0300 	bcc	380c8c <_start-0xbfc87374>
  88:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  8c:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
  90:	08000018 	stmdaeq	r0, {r3, r4}
  94:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  98:	0b3a0e03 	bleq	e838ac <_start-0xbf184754>
  9c:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
  a0:	06120111 			; <UNDEFINED> instruction: 0x06120111
  a4:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  a8:	00130119 	andseq	r0, r3, r9, lsl r1
  ac:	00050900 	andeq	r0, r5, r0, lsl #18
  b0:	0b3a0803 	bleq	e820c4 <_start-0xbf185f3c>
  b4:	1349053b 	movtne	r0, #38203	; 0x953b
  b8:	00001802 	andeq	r1, r0, r2, lsl #16
  bc:	0000180a 	andeq	r1, r0, sl, lsl #16
  c0:	00340b00 	eorseq	r0, r4, r0, lsl #22
  c4:	0b3a0e03 	bleq	e838d8 <_start-0xbf184728>
  c8:	1349053b 	movtne	r0, #38203	; 0x953b
  cc:	00001802 	andeq	r1, r0, r2, lsl #16
  d0:	0b000f0c 	bleq	3d08 <_start-0xc00042f8>
  d4:	0013490b 	andseq	r4, r3, fp, lsl #18
  d8:	00260d00 	eoreq	r0, r6, r0, lsl #26
  dc:	00001349 	andeq	r1, r0, r9, asr #6
  e0:	3f012e0e 	svccc	0x00012e0e
  e4:	3a0e0319 	bcc	380d50 <_start-0xbfc872b0>
  e8:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
  ec:	11134919 	tstne	r3, r9, lsl r9
  f0:	40061201 	andmi	r1, r6, r1, lsl #4
  f4:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
  f8:	00001301 	andeq	r1, r0, r1, lsl #6
  fc:	0300340f 	movweq	r3, #1039	; 0x40f
 100:	3b0b3a08 	blcc	2ce928 <_start-0xbfd396d8>
 104:	02134905 	andseq	r4, r3, #81920	; 0x14000
 108:	10000018 	andne	r0, r0, r8, lsl r0
 10c:	0b0b0024 	bleq	2c01a4 <_start-0xbfd47e5c>
 110:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 114:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
 118:	03193f01 	tsteq	r9, #1, 30
 11c:	3b0b3a0e 	blcc	2ce95c <_start-0xbfd396a4>
 120:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
 124:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 128:	96184006 	ldrls	r4, [r8], -r6
 12c:	13011942 	movwne	r1, #6466	; 0x1942
 130:	05120000 	ldreq	r0, [r2, #-0]
 134:	3a080300 	bcc	200d3c <_start-0xbfe072c4>
 138:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 13c:	00180213 	andseq	r0, r8, r3, lsl r2
 140:	00051300 	andeq	r1, r5, r0, lsl #6
 144:	0b3a0e03 	bleq	e83958 <_start-0xbf1846a8>
 148:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 14c:	00001802 	andeq	r1, r0, r2, lsl #16
 150:	03003414 	movweq	r3, #1044	; 0x414
 154:	3b0b3a08 	blcc	2ce97c <_start-0xbfd39684>
 158:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 15c:	15000018 	strne	r0, [r0, #-24]	; 0xffffffe8
 160:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 164:	0b3b0b3a 	bleq	ec2e54 <_start-0xbf1451ac>
 168:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 16c:	0a160000 	beq	580174 <_start-0xbfa87e8c>
 170:	3a0e0300 	bcc	380d78 <_start-0xbfc87288>
 174:	110b3b0b 	tstne	fp, fp, lsl #22
 178:	17000001 	strne	r0, [r0, -r1]
 17c:	0111010b 	tsteq	r1, fp, lsl #2
 180:	13010612 	movwne	r0, #5650	; 0x1612
 184:	0b180000 	bleq	60018c <_start-0xbfa07e74>
 188:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
 18c:	19000006 	stmdbne	r0, {r1, r2}
 190:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 194:	0b3a0e03 	bleq	e839a8 <_start-0xbf184658>
 198:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 19c:	01111349 	tsteq	r1, r9, asr #6
 1a0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 1a4:	01194297 			; <UNDEFINED> instruction: 0x01194297
 1a8:	1a000013 	bne	1fc <_start-0xc0007e04>
 1ac:	0e03012e 	adfeqsp	f0, f3, #0.5
 1b0:	0b3b0b3a 	bleq	ec2ea0 <_start-0xbf145160>
 1b4:	13491927 	movtne	r1, #39207	; 0x9927
 1b8:	06120111 			; <UNDEFINED> instruction: 0x06120111
 1bc:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 1c0:	00130119 	andseq	r0, r3, r9, lsl r1
 1c4:	012e1b00 			; <UNDEFINED> instruction: 0x012e1b00
 1c8:	0b3a0e03 	bleq	e839dc <_start-0xbf184624>
 1cc:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 1d0:	01111349 	tsteq	r1, r9, asr #6
 1d4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 1d8:	01194297 			; <UNDEFINED> instruction: 0x01194297
 1dc:	1c000013 	stcne	0, cr0, [r0], {19}
 1e0:	0e03012e 	adfeqsp	f0, f3, #0.5
 1e4:	0b3b0b3a 	bleq	ec2ed4 <_start-0xbf14512c>
 1e8:	13491927 	movtne	r1, #39207	; 0x9927
 1ec:	06120111 			; <UNDEFINED> instruction: 0x06120111
 1f0:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 1f4:	00000019 	andeq	r0, r0, r9, lsl r0
 1f8:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 1fc:	030b130e 	movweq	r1, #45838	; 0xb30e
 200:	110e1b0e 	tstne	lr, lr, lsl #22
 204:	10061201 	andne	r1, r6, r1, lsl #4
 208:	02000017 	andeq	r0, r0, #23
 20c:	0b0b0113 	bleq	2c0660 <_start-0xbfd479a0>
 210:	0b3b0b3a 	bleq	ec2f00 <_start-0xbf145100>
 214:	00001301 	andeq	r1, r0, r1, lsl #6
 218:	03000d03 	movweq	r0, #3331	; 0xd03
 21c:	3b0b3a0e 	blcc	2cea5c <_start-0xbfd395a4>
 220:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 224:	0400000b 	streq	r0, [r0], #-11
 228:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 22c:	0b3b0b3a 	bleq	ec2f1c <_start-0xbf1450e4>
 230:	0b381349 	bleq	e04f5c <_start-0xbf2030a4>
 234:	24050000 	strcs	r0, [r5], #-0
 238:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 23c:	000e030b 	andeq	r0, lr, fp, lsl #6
 240:	00350600 	eorseq	r0, r5, r0, lsl #12
 244:	00001349 	andeq	r1, r0, r9, asr #6
 248:	03001607 	movweq	r1, #1543	; 0x607
 24c:	3b0b3a0e 	blcc	2cea8c <_start-0xbfd39574>
 250:	0013490b 	andseq	r4, r3, fp, lsl #18
 254:	012e0800 			; <UNDEFINED> instruction: 0x012e0800
 258:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 25c:	0b3b0b3a 	bleq	ec2f4c <_start-0xbf1450b4>
 260:	13491927 	movtne	r1, #39207	; 0x9927
 264:	06120111 			; <UNDEFINED> instruction: 0x06120111
 268:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 26c:	00130119 	andseq	r0, r3, r9, lsl r1
 270:	00340900 	eorseq	r0, r4, r0, lsl #18
 274:	0b3a0803 	bleq	e82288 <_start-0xbf185d78>
 278:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 27c:	00001802 	andeq	r1, r0, r2, lsl #16
 280:	4900260a 	stmdbmi	r0, {r1, r3, r9, sl, sp}
 284:	0b000013 	bleq	2d8 <_start-0xc0007d28>
 288:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 28c:	0b3a0e03 	bleq	e83aa0 <_start-0xbf184560>
 290:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 294:	06120111 			; <UNDEFINED> instruction: 0x06120111
 298:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 29c:	00130119 	andseq	r0, r3, r9, lsl r1
 2a0:	00050c00 	andeq	r0, r5, r0, lsl #24
 2a4:	0b3a0e03 	bleq	e83ab8 <_start-0xbf184548>
 2a8:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 2ac:	00001802 	andeq	r1, r0, r2, lsl #16
 2b0:	0b000f0d 	bleq	3eec <_start-0xc0004114>
 2b4:	0013490b 	andseq	r4, r3, fp, lsl #18
 2b8:	002e0e00 	eoreq	r0, lr, r0, lsl #28
 2bc:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 2c0:	0b3b0b3a 	bleq	ec2fb0 <_start-0xbf145050>
 2c4:	06120111 			; <UNDEFINED> instruction: 0x06120111
 2c8:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 2cc:	00000019 	andeq	r0, r0, r9, lsl r0
 2d0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 2d4:	030b130e 	movweq	r1, #45838	; 0xb30e
 2d8:	110e1b0e 	tstne	lr, lr, lsl #22
 2dc:	10061201 	andne	r1, r6, r1, lsl #4
 2e0:	02000017 	andeq	r0, r0, #23
 2e4:	08030034 	stmdaeq	r3, {r2, r4, r5}
 2e8:	0b3b0b3a 	bleq	ec2fd8 <_start-0xbf145028>
 2ec:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
 2f0:	00001802 	andeq	r1, r0, r2, lsl #16
 2f4:	0b002403 	bleq	9308 <_start-0xbfffecf8>
 2f8:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 2fc:	0400000e 	streq	r0, [r0], #-14
 300:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 304:	0b3a0e03 	bleq	e83b18 <_start-0xbf1844e8>
 308:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 30c:	06120111 			; <UNDEFINED> instruction: 0x06120111
 310:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 314:	00000019 	andeq	r0, r0, r9, lsl r0
 318:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 31c:	030b130e 	movweq	r1, #45838	; 0xb30e
 320:	110e1b0e 	tstne	lr, lr, lsl #22
 324:	10061201 	andne	r1, r6, r1, lsl #4
 328:	02000017 	andeq	r0, r0, #23
 32c:	0b0b0113 	bleq	2c0780 <_start-0xbfd47880>
 330:	0b3b0b3a 	bleq	ec3020 <_start-0xbf144fe0>
 334:	00001301 	andeq	r1, r0, r1, lsl #6
 338:	03000d03 	movweq	r0, #3331	; 0xd03
 33c:	3b0b3a0e 	blcc	2ceb7c <_start-0xbfd39484>
 340:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 344:	0400000b 	streq	r0, [r0], #-11
 348:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 34c:	0b3b0b3a 	bleq	ec303c <_start-0xbf144fc4>
 350:	0b381349 	bleq	e0507c <_start-0xbf202f84>
 354:	24050000 	strcs	r0, [r5], #-0
 358:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 35c:	000e030b 	andeq	r0, lr, fp, lsl #6
 360:	00350600 	eorseq	r0, r5, r0, lsl #12
 364:	00001349 	andeq	r1, r0, r9, asr #6
 368:	03001607 	movweq	r1, #1543	; 0x607
 36c:	3b0b3a0e 	blcc	2cebac <_start-0xbfd39454>
 370:	0013490b 	andseq	r4, r3, fp, lsl #18
 374:	01040800 	tsteq	r4, r0, lsl #16
 378:	0b0b0b3e 	bleq	2c3078 <_start-0xbfd44f88>
 37c:	0b3a1349 	bleq	e850a8 <_start-0xbf182f58>
 380:	13010b3b 	movwne	r0, #6971	; 0x1b3b
 384:	28090000 	stmdacs	r9, {}	; <UNPREDICTABLE>
 388:	1c0e0300 	stcne	3, cr0, [lr], {-0}
 38c:	0a00000b 	beq	3c0 <_start-0xc0007c40>
 390:	08030028 	stmdaeq	r3, {r3, r5}
 394:	00000b1c 	andeq	r0, r0, ip, lsl fp
 398:	4900260b 	stmdbmi	r0, {r0, r1, r3, r9, sl, sp}
 39c:	0c000013 	stceq	0, cr0, [r0], {19}
 3a0:	0b0b000f 	bleq	2c03e4 <_start-0xbfd47c1c>
 3a4:	00001349 	andeq	r1, r0, r9, asr #6
 3a8:	3f012e0d 	svccc	0x00012e0d
 3ac:	3a0e0319 	bcc	381018 <_start-0xbfc86fe8>
 3b0:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 3b4:	11134919 	tstne	r3, r9, lsl r9
 3b8:	40061201 	andmi	r1, r6, r1, lsl #4
 3bc:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 3c0:	00001301 	andeq	r1, r0, r1, lsl #6
 3c4:	0300050e 	movweq	r0, #1294	; 0x50e
 3c8:	3b0b3a0e 	blcc	2cec08 <_start-0xbfd393f8>
 3cc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 3d0:	0f000018 	svceq	0x00000018
 3d4:	08030005 	stmdaeq	r3, {r0, r2}
 3d8:	0b3b0b3a 	bleq	ec30c8 <_start-0xbf144f38>
 3dc:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 3e0:	34100000 	ldrcc	r0, [r0], #-0
 3e4:	3a080300 	bcc	200fec <_start-0xbfe07014>
 3e8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 3ec:	00180213 	andseq	r0, r8, r3, lsl r2
 3f0:	00241100 	eoreq	r1, r4, r0, lsl #2
 3f4:	0b3e0b0b 	bleq	f83028 <_start-0xbf084fd8>
 3f8:	00000803 	andeq	r0, r0, r3, lsl #16
 3fc:	3f012e12 	svccc	0x00012e12
 400:	3a0e0319 	bcc	38106c <_start-0xbfc86f94>
 404:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 408:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 40c:	97184006 	ldrls	r4, [r8, -r6]
 410:	13011942 	movwne	r1, #6466	; 0x1942
 414:	01000000 	mrseq	r0, (UNDEF: 0)
 418:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 41c:	0e030b13 	vmoveq.32	d3[0], r0
 420:	01110e1b 	tsteq	r1, fp, lsl lr
 424:	17100612 			; <UNDEFINED> instruction: 0x17100612
 428:	13020000 	movwne	r0, #8192	; 0x2000
 42c:	3a0b0b01 	bcc	2c3038 <_start-0xbfd44fc8>
 430:	010b3b0b 	tsteq	fp, fp, lsl #22
 434:	03000013 	movweq	r0, #19
 438:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 43c:	0b3b0b3a 	bleq	ec312c <_start-0xbf144ed4>
 440:	0b381349 	bleq	e0516c <_start-0xbf202e94>
 444:	0d040000 	stceq	0, cr0, [r4, #-0]
 448:	3a0e0300 	bcc	381050 <_start-0xbfc86fb0>
 44c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 450:	000b3813 	andeq	r3, fp, r3, lsl r8
 454:	00240500 	eoreq	r0, r4, r0, lsl #10
 458:	0b3e0b0b 	bleq	f8308c <_start-0xbf084f74>
 45c:	00000e03 	andeq	r0, r0, r3, lsl #28
 460:	49003506 	stmdbmi	r0, {r1, r2, r8, sl, ip, sp}
 464:	07000013 	smladeq	r0, r3, r0, r0
 468:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
 46c:	0b3b0b3a 	bleq	ec315c <_start-0xbf144ea4>
 470:	00001349 	andeq	r1, r0, r9, asr #6
 474:	0b011308 	bleq	4509c <_start-0xbffc2f64>
 478:	3b0b3a05 	blcc	2cec94 <_start-0xbfd3936c>
 47c:	0013010b 	andseq	r0, r3, fp, lsl #2
 480:	000d0900 	andeq	r0, sp, r0, lsl #18
 484:	0b3a0e03 	bleq	e83c98 <_start-0xbf184368>
 488:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 48c:	00000538 	andeq	r0, r0, r8, lsr r5
 490:	03000d0a 	movweq	r0, #3338	; 0xd0a
 494:	3b0b3a08 	blcc	2cecbc <_start-0xbfd39344>
 498:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 49c:	0b000005 	bleq	4b8 <_start-0xc0007b48>
 4a0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 4a4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 4a8:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
 4ac:	010c0000 	mrseq	r0, (UNDEF: 12)
 4b0:	01134901 	tsteq	r3, r1, lsl #18
 4b4:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
 4b8:	13490021 	movtne	r0, #36897	; 0x9021
 4bc:	00000b2f 	andeq	r0, r0, pc, lsr #22
 4c0:	0300160e 	movweq	r1, #1550	; 0x60e
 4c4:	3b0b3a0e 	blcc	2ced04 <_start-0xbfd392fc>
 4c8:	00134905 	andseq	r4, r3, r5, lsl #18
 4cc:	000f0f00 	andeq	r0, pc, r0, lsl #30
 4d0:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 4d4:	26100000 	ldrcs	r0, [r0], -r0
 4d8:	00134900 	andseq	r4, r3, r0, lsl #18
 4dc:	00341100 	eorseq	r1, r4, r0, lsl #2
 4e0:	0b3a0e03 	bleq	e83cf4 <_start-0xbf18430c>
 4e4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 4e8:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
 4ec:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
 4f0:	03193f01 	tsteq	r9, #1, 30
 4f4:	3b0b3a0e 	blcc	2ced34 <_start-0xbfd392cc>
 4f8:	1113490b 	tstne	r3, fp, lsl #18
 4fc:	40061201 	andmi	r1, r6, r1, lsl #4
 500:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 504:	00001301 	andeq	r1, r0, r1, lsl #6
 508:	03003413 	movweq	r3, #1043	; 0x413
 50c:	3b0b3a08 	blcc	2ced34 <_start-0xbfd392cc>
 510:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 514:	14000018 	strne	r0, [r0], #-24	; 0xffffffe8
 518:	0b0b0024 	bleq	2c05b0 <_start-0xbfd47a50>
 51c:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 520:	2e150000 	cdpcs	0, 1, cr0, cr5, cr0, {0}
 524:	03193f01 	tsteq	r9, #1, 30
 528:	3b0b3a0e 	blcc	2ced68 <_start-0xbfd39298>
 52c:	1113490b 	tstne	r3, fp, lsl #18
 530:	40061201 	andmi	r1, r6, r1, lsl #4
 534:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 538:	00001301 	andeq	r1, r0, r1, lsl #6
 53c:	3f012e16 	svccc	0x00012e16
 540:	3a0e0319 	bcc	3811ac <_start-0xbfc86e54>
 544:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 548:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 54c:	96184006 	ldrls	r4, [r8], -r6
 550:	13011942 	movwne	r1, #6466	; 0x1942
 554:	05170000 	ldreq	r0, [r7, #-0]
 558:	3a0e0300 	bcc	381160 <_start-0xbfc86ea0>
 55c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 560:	00180213 	andseq	r0, r8, r3, lsl r2
 564:	012e1800 			; <UNDEFINED> instruction: 0x012e1800
 568:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 56c:	0b3b0b3a 	bleq	ec325c <_start-0xbf144da4>
 570:	01111927 	tsteq	r1, r7, lsr #18
 574:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 578:	01194297 			; <UNDEFINED> instruction: 0x01194297
 57c:	19000013 	stmdbne	r0, {r0, r1, r4}
 580:	08030005 	stmdaeq	r3, {r0, r2}
 584:	0b3b0b3a 	bleq	ec3274 <_start-0xbf144d8c>
 588:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 58c:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
 590:	03193f00 	tsteq	r9, #0, 30
 594:	3b0b3a0e 	blcc	2cedd4 <_start-0xbfd3922c>
 598:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
 59c:	96184006 	ldrls	r4, [r8], -r6
 5a0:	00001942 	andeq	r1, r0, r2, asr #18
 5a4:	01110100 	tsteq	r1, r0, lsl #2
 5a8:	0b130e25 	bleq	4c3e44 <_start-0xbfb441bc>
 5ac:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
 5b0:	06120111 			; <UNDEFINED> instruction: 0x06120111
 5b4:	00001710 	andeq	r1, r0, r0, lsl r7
 5b8:	0b011302 	bleq	451c8 <_start-0xbffc2e38>
 5bc:	3b0b3a0b 	blcc	2cedf0 <_start-0xbfd39210>
 5c0:	0013010b 	andseq	r0, r3, fp, lsl #2
 5c4:	000d0300 	andeq	r0, sp, r0, lsl #6
 5c8:	0b3a0e03 	bleq	e83ddc <_start-0xbf184224>
 5cc:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 5d0:	00000b38 	andeq	r0, r0, r8, lsr fp
 5d4:	03000d04 	movweq	r0, #3332	; 0xd04
 5d8:	3b0b3a08 	blcc	2cee00 <_start-0xbfd39200>
 5dc:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 5e0:	0500000b 	streq	r0, [r0, #-11]
 5e4:	0b0b0024 	bleq	2c067c <_start-0xbfd47984>
 5e8:	0e030b3e 	vmoveq.16	d3[0], r0
 5ec:	35060000 	strcc	r0, [r6, #-0]
 5f0:	00134900 	andseq	r4, r3, r0, lsl #18
 5f4:	00160700 	andseq	r0, r6, r0, lsl #14
 5f8:	0b3a0e03 	bleq	e83e0c <_start-0xbf1841f4>
 5fc:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 600:	04080000 	streq	r0, [r8], #-0
 604:	0b0b3e01 	bleq	2cfe10 <_start-0xbfd381f0>
 608:	3a13490b 	bcc	4d2a3c <_start-0xbfb355c4>
 60c:	010b3b0b 	tsteq	fp, fp, lsl #22
 610:	09000013 	stmdbeq	r0, {r0, r1, r4}
 614:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
 618:	00000b1c 	andeq	r0, r0, ip, lsl fp
 61c:	0300280a 	movweq	r2, #2058	; 0x80a
 620:	000b1c08 	andeq	r1, fp, r8, lsl #24
 624:	000f0b00 	andeq	r0, pc, r0, lsl #22
 628:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 62c:	150c0000 	strne	r0, [ip, #-0]
 630:	01192701 	tsteq	r9, r1, lsl #14
 634:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
 638:	13490005 	movtne	r0, #36869	; 0x9005
 63c:	130e0000 	movwne	r0, #57344	; 0xe000
 640:	3a050b01 	bcc	14324c <_start-0xbfec4db4>
 644:	010b3b0b 	tsteq	fp, fp, lsl #22
 648:	0f000013 	svceq	0x00000013
 64c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 650:	0b3b0b3a 	bleq	ec3340 <_start-0xbf144cc0>
 654:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
 658:	0d100000 	ldceq	0, cr0, [r0, #-0]
 65c:	3a080300 	bcc	201264 <_start-0xbfe06d9c>
 660:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 664:	00053813 	andeq	r3, r5, r3, lsl r8
 668:	000d1100 	andeq	r1, sp, r0, lsl #2
 66c:	0b3a0e03 	bleq	e83e80 <_start-0xbf184180>
 670:	1349053b 	movtne	r0, #38203	; 0x953b
 674:	00000538 	andeq	r0, r0, r8, lsr r5
 678:	49010112 	stmdbmi	r1, {r1, r4, r8}
 67c:	00130113 	andseq	r0, r3, r3, lsl r1
 680:	00211300 	eoreq	r1, r1, r0, lsl #6
 684:	0b2f1349 	bleq	bc53b0 <_start-0xbf442c50>
 688:	16140000 	ldrne	r0, [r4], -r0
 68c:	3a0e0300 	bcc	381294 <_start-0xbfc86d6c>
 690:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 694:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
 698:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 69c:	0b3b0b3a 	bleq	ec338c <_start-0xbf144c74>
 6a0:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
 6a4:	00001802 	andeq	r1, r0, r2, lsl #16
 6a8:	03003416 	movweq	r3, #1046	; 0x416
 6ac:	3b0b3a08 	blcc	2ceed4 <_start-0xbfd3912c>
 6b0:	3f13490b 	svccc	0x0013490b
 6b4:	00180219 	andseq	r0, r8, r9, lsl r2
 6b8:	012e1700 			; <UNDEFINED> instruction: 0x012e1700
 6bc:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 6c0:	0b3b0b3a 	bleq	ec33b0 <_start-0xbf144c50>
 6c4:	01111349 	tsteq	r1, r9, asr #6
 6c8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 6cc:	01194296 			; <UNDEFINED> instruction: 0x01194296
 6d0:	18000013 	stmdane	r0, {r0, r1, r4}
 6d4:	0111010b 	tsteq	r1, fp, lsl #2
 6d8:	00000612 	andeq	r0, r0, r2, lsl r6
 6dc:	03003419 	movweq	r3, #1049	; 0x419
 6e0:	3b0b3a0e 	blcc	2cef20 <_start-0xbfd390e0>
 6e4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 6e8:	1a000018 	bne	750 <_start-0xc00078b0>
 6ec:	08030034 	stmdaeq	r3, {r2, r4, r5}
 6f0:	0b3b0b3a 	bleq	ec33e0 <_start-0xbf144c20>
 6f4:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 6f8:	241b0000 	ldrcs	r0, [fp], #-0
 6fc:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 700:	0008030b 	andeq	r0, r8, fp, lsl #6
 704:	012e1c00 			; <UNDEFINED> instruction: 0x012e1c00
 708:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 70c:	0b3b0b3a 	bleq	ec33fc <_start-0xbf144c04>
 710:	06120111 			; <UNDEFINED> instruction: 0x06120111
 714:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 718:	00130119 	andseq	r0, r3, r9, lsl r1
 71c:	012e1d00 			; <UNDEFINED> instruction: 0x012e1d00
 720:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 724:	0b3b0b3a 	bleq	ec3414 <_start-0xbf144bec>
 728:	01111927 	tsteq	r1, r7, lsr #18
 72c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 730:	00194297 	mulseq	r9, r7, r2
 734:	00051e00 	andeq	r1, r5, r0, lsl #28
 738:	0b3a0803 	bleq	e8274c <_start-0xbf1858b4>
 73c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 740:	00001802 	andeq	r1, r0, r2, lsl #16
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000001c 	andeq	r0, r0, ip, lsl r0
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	c0008000 	andgt	r8, r0, r0
  14:	00000218 	andeq	r0, r0, r8, lsl r2
	...
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	00710002 	rsbseq	r0, r1, r2
  28:	00040000 	andeq	r0, r4, r0
  2c:	00000000 	andeq	r0, r0, r0
  30:	c0008218 	andgt	r8, r0, r8, lsl r2
  34:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
	...
  40:	0000001c 	andeq	r0, r0, ip, lsl r0
  44:	00ea0002 	rsceq	r0, sl, r2
  48:	00040000 	andeq	r0, r4, r0
  4c:	00000000 	andeq	r0, r0, r0
  50:	c00082c8 	andgt	r8, r0, r8, asr #5
  54:	00000094 	muleq	r0, r4, r0
	...
  60:	0000001c 	andeq	r0, r0, ip, lsl r0
  64:	01630002 	cmneq	r3, r2
  68:	00040000 	andeq	r0, r4, r0
  6c:	00000000 	andeq	r0, r0, r0
  70:	c000835c 	andgt	r8, r0, ip, asr r3
  74:	000010b8 	strheq	r1, [r0], -r8
	...
  80:	0000001c 	andeq	r0, r0, ip, lsl r0
  84:	05e50002 	strbeq	r0, [r5, #2]!
  88:	00040000 	andeq	r0, r4, r0
  8c:	00000000 	andeq	r0, r0, r0
  90:	c0009414 	andgt	r9, r0, r4, lsl r4
  94:	000002dc 	ldrdeq	r0, [r0], -ip
	...
  a0:	0000001c 	andeq	r0, r0, ip, lsl r0
  a4:	07fd0002 	ldrbeq	r0, [sp, r2]!
  a8:	00040000 	andeq	r0, r4, r0
  ac:	00000000 	andeq	r0, r0, r0
  b0:	c00096f0 	strdgt	r9, [r0], -r0
  b4:	00000018 	andeq	r0, r0, r8, lsl r0
	...
  c0:	0000001c 	andeq	r0, r0, ip, lsl r0
  c4:	084a0002 	stmdaeq	sl, {r1}^
  c8:	00040000 	andeq	r0, r4, r0
  cc:	00000000 	andeq	r0, r0, r0
  d0:	c0009708 	andgt	r9, r0, r8, lsl #14
  d4:	00000284 	andeq	r0, r0, r4, lsl #5
	...
  e0:	0000001c 	andeq	r0, r0, ip, lsl r0
  e4:	0b2a0002 	bleq	a800f4 <_start-0xbf587f0c>
  e8:	00040000 	andeq	r0, r4, r0
  ec:	00000000 	andeq	r0, r0, r0
  f0:	c000998c 	andgt	r9, r0, ip, lsl #19
  f4:	000003a0 	andeq	r0, r0, r0, lsr #7
	...
 100:	0000001c 	andeq	r0, r0, ip, lsl r0
 104:	1b8a0002 	blne	fe280114 <__bss_end__+0x3e27574c>
 108:	00040000 	andeq	r0, r4, r0
 10c:	00000000 	andeq	r0, r0, r0
 110:	c0009d2c 	andgt	r9, r0, ip, lsr #26
 114:	00000248 	andeq	r0, r0, r8, asr #4
	...

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	69676964 	stmdbvs	r7!, {r2, r5, r6, r8, fp, sp, lr}^
   4:	5f007374 	svcpl	0x00007374
   8:	6975625f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r9, sp, lr}^
   c:	6e69746c 	cdpvs	4, 6, cr7, cr9, cr12, {3}
  10:	5f61765f 	svcpl	0x0061765f
  14:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
  18:	696b7300 	stmdbvs	fp!, {r8, r9, ip, sp, lr}^
  1c:	74615f70 	strbtvc	r5, [r1], #-3952	; 0xfffff090
  20:	7600696f 	strvc	r6, [r0], -pc, ror #18
  24:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
  28:	756f6300 	strbvc	r6, [pc, #-768]!	; fffffd30 <__bss_end__+0x3fff5368>
  2c:	5f00746e 	svcpl	0x0000746e
  30:	756f745f 	strbvc	r7, [pc, #-1119]!	; fffffbd9 <__bss_end__+0x3fff5211>
  34:	72657070 	rsbvc	r7, r5, #112	; 0x70
  38:	675f5f00 	ldrbvs	r5, [pc, -r0, lsl #30]
  3c:	5f63756e 	svcpl	0x0063756e
  40:	6c5f6176 	ldfvse	f6, [pc], {118}	; 0x76
  44:	00747369 	rsbseq	r7, r4, r9, ror #6
  48:	63657270 	cmnvs	r5, #112, 4
  4c:	6f697369 	svcvs	0x00697369
  50:	4e47006e 	cdpmi	0, 4, cr0, cr7, cr14, {3}
  54:	31432055 	qdaddcc	r2, r5, r3
  58:	2e372031 	mrccs	0, 1, r2, cr7, cr1, {1}
  5c:	20302e35 	eorscs	r2, r0, r5, lsr lr
  60:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
  64:	6d2d206d 	stcvs	0, cr2, [sp, #-436]!	; 0xfffffe4c
  68:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
  6c:	73637061 	cmnvc	r3, #97	; 0x61
  70:	756e672d 	strbvc	r6, [lr, #-1837]!	; 0xfffff8d3
  74:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
  78:	6e3d7570 	mrcvs	5, 1, r7, cr13, cr0, {3}
  7c:	206e6f65 	rsbcs	r6, lr, r5, ror #30
  80:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
  84:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
  88:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
  8c:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
  90:	2d207066 	stccs	0, cr7, [r0, #-408]!	; 0xfffffe68
  94:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
  98:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
  9c:	2d37766d 	ldccs	6, cr7, [r7, #-436]!	; 0xfffffe4c
  a0:	6d2d2061 	stcvs	0, cr2, [sp, #-388]!	; 0xfffffe7c
  a4:	656e7574 	strbvs	r7, [lr, #-1396]!	; 0xfffffa8c
  a8:	726f633d 	rsbvc	r6, pc, #-201326592	; 0xf4000000
  ac:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
  b0:	2d203961 			; <UNDEFINED> instruction: 0x2d203961
  b4:	736c746d 	cmnvc	ip, #1828716544	; 0x6d000000
  b8:	6169642d 	cmnvs	r9, sp, lsr #8
  bc:	7463656c 	strbtvc	r6, [r3], #-1388	; 0xfffffa94
  c0:	756e673d 	strbvc	r6, [lr, #-1853]!	; 0xfffff8c3
  c4:	20672d20 	rsbcs	r2, r7, r0, lsr #26
  c8:	20304f2d 	eorscs	r4, r0, sp, lsr #30
  cc:	6f6e662d 	svcvs	0x006e662d
  d0:	6975622d 	ldmdbvs	r5!, {r0, r2, r3, r5, r9, sp, lr}^
  d4:	6e69746c 	cdpvs	4, 6, cr7, cr9, cr12, {3}
  d8:	73616200 	cmnvc	r1, #0, 4
  dc:	6e750065 	cdpvs	0, 7, cr0, cr5, cr5, {3}
  e0:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
  e4:	63206465 			; <UNDEFINED> instruction: 0x63206465
  e8:	00726168 	rsbseq	r6, r2, r8, ror #2
  ec:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
  f0:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
  f4:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
  f8:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
  fc:	6e650074 	mcrvs	0, 3, r0, cr5, cr4, {3}
 100:	73007064 	movwvc	r7, #100	; 0x64
 104:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
 108:	74735f65 	ldrbtvc	r5, [r3], #-3941	; 0xfffff09b
 10c:	6c6f7472 	cfstrdvs	mvd7, [pc], #-456	; ffffff4c <__bss_end__+0x3fff5584>
 110:	6d6f6300 	stclvs	3, cr6, [pc, #-0]	; 118 <_start-0xc0007ee8>
 114:	2f6e6f6d 	svccs	0x006e6f6d
 118:	2f637273 	svccs	0x00637273
 11c:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
 120:	632e6674 			; <UNDEFINED> instruction: 0x632e6674
 124:	6f682f00 	svcvs	0x00682f00
 128:	6c2f656d 	cfstr32vs	mvfx6, [pc], #-436	; ffffff7c <__bss_end__+0x3fff55b4>
 12c:	78756e69 	ldmdavc	r5!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
 130:	7261662f 	rsbvc	r6, r1, #49283072	; 0x2f00000
 134:	68676973 	stmdavs	r7!, {r0, r1, r4, r5, r6, r8, fp, sp, lr}^
 138:	52412f74 	subpl	r2, r1, #116, 30	; 0x1d0
 13c:	43442f4d 	movtmi	r2, #20301	; 0x4f4d
 140:	31313232 	teqcc	r1, r2, lsr r2
 144:	61642f31 	cmnvs	r4, r1, lsr pc
 148:	2f383079 	svccs	0x00383079
 14c:	415f3130 	cmpmi	pc, r0, lsr r1	; <UNPREDICTABLE>
 150:	6f635f37 	svcvs	0x00635f37
 154:	6572706d 	ldrbvs	r7, [r2, #-109]!	; 0xffffff93
 158:	736e6568 	cmnvc	lr, #104, 10	; 0x1a000000
 15c:	00657669 	rsbeq	r7, r5, r9, ror #12
 160:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
 164:	69730073 	ldmdbvs	r3!, {r0, r1, r4, r5, r6}^
 168:	7100657a 	tstvc	r0, sl, ror r5
 16c:	696c6175 	stmdbvs	ip!, {r0, r2, r4, r5, r6, r8, sp, lr}^
 170:	72656966 	rsbvc	r6, r5, #1671168	; 0x198000
 174:	6d697300 	stclvs	3, cr7, [r9, #-0]
 178:	5f656c70 	svcpl	0x00656c70
 17c:	74727473 	ldrbtvc	r7, [r2], #-1139	; 0xfffffb8d
 180:	006c756f 	rsbeq	r7, ip, pc, ror #10
 184:	75736572 	ldrbvc	r6, [r3, #-1394]!	; 0xfffffa8e
 188:	7200746c 	andvc	r7, r0, #108, 8	; 0x6c000000
 18c:	61657065 	cmnvs	r5, r5, rrx
 190:	74730074 	ldrbtvc	r0, [r3], #-116	; 0xffffff8c
 194:	656c6e72 	strbvs	r6, [ip, #-3698]!	; 0xfffff18e
 198:	756e006e 	strbvc	r0, [lr, #-110]!	; 0xffffff92
 19c:	7265626d 	rsbvc	r6, r5, #-805306362	; 0xd0000006
 1a0:	74635f00 	strbtvc	r5, [r3], #-3840	; 0xfffff100
 1a4:	00657079 	rsbeq	r7, r5, r9, ror r0
 1a8:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
 1ac:	66756274 			; <UNDEFINED> instruction: 0x66756274
 1b0:	00726566 	rsbseq	r6, r2, r6, ror #10
 1b4:	6c656966 			; <UNDEFINED> instruction: 0x6c656966
 1b8:	69775f64 	ldmdbvs	r7!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
 1bc:	00687464 	rsbeq	r7, r8, r4, ror #8
 1c0:	73677261 	cmnvc	r7, #268435462	; 0x10000006
 1c4:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
 1c8:	6e692067 	cdpvs	0, 6, cr2, cr9, cr7, {3}
 1cc:	69730074 	ldmdbvs	r3!, {r2, r4, r5, r6}^
 1d0:	5f006e67 	svcpl	0x00006e67
 1d4:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
 1d8:	70737600 	rsbsvc	r7, r3, r0, lsl #12
 1dc:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
 1e0:	5f5f0066 	svcpl	0x005f0066
 1e4:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
 1e8:	7475705f 	ldrbtvc	r7, [r5], #-95	; 0xffffffa1
 1ec:	45530063 	ldrbmi	r0, [r3, #-99]	; 0xffffff9d
 1f0:	47464343 	strbmi	r4, [r6, -r3, asr #6]
 1f4:	5f5f0052 	svcpl	0x005f0052
 1f8:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
 1fc:	7475705f 	ldrbtvc	r7, [r5], #-95	; 0xffffffa1
 200:	61640073 	smcvs	16387	; 0x4003
 204:	52006174 	andpl	r6, r0, #116, 2
 208:	00524f54 	subseq	r4, r2, r4, asr pc
 20c:	52525342 	subspl	r5, r2, #134217729	; 0x8000001
 210:	50555000 	subspl	r5, r5, r0
 214:	4d005244 	sfmmi	f5, 4, [r0, #-272]	; 0xfffffef0
 218:	5245444f 	subpl	r4, r5, #1325400064	; 0x4f000000
 21c:	50534f00 	subspl	r4, r3, r0, lsl #30
 220:	52444545 	subpl	r4, r4, #289406976	; 0x11400000
 224:	50544700 	subspl	r4, r4, r0, lsl #14
 228:	52500052 	subspl	r0, r0, #82	; 0x52
 22c:	00435345 	subeq	r5, r3, r5, asr #6
 230:	72747370 	rsbsvc	r7, r4, #112, 6	; 0xc0000001
 234:	755f5f00 	ldrbvc	r5, [pc, #-3840]	; fffff33c <__bss_end__+0x3fff4974>
 238:	5f747261 	svcpl	0x00747261
 23c:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 240:	69706700 	ldmdbvs	r0!, {r8, r9, sl, sp, lr}^
 244:	00745f6f 	rsbseq	r5, r4, pc, ror #30
 248:	524b434c 	subpl	r4, fp, #76, 6	; 0x30000001
 24c:	72617500 	rsbvc	r7, r1, #0, 10
 250:	00745f74 	rsbseq	r5, r4, r4, ror pc
 254:	5059544f 	subspl	r5, r9, pc, asr #8
 258:	41005245 	tstmi	r0, r5, asr #4
 25c:	004c5246 	subeq	r5, ip, r6, asr #4
 260:	61755f5f 	cmnvs	r5, pc, asr pc
 264:	675f7472 			; <UNDEFINED> instruction: 0x675f7472
 268:	00637465 	rsbeq	r7, r3, r5, ror #8
 26c:	48524641 	ldmdami	r2, {r0, r6, r9, sl, lr}^
 270:	6d6f6300 	stclvs	3, cr6, [pc, #-0]	; 278 <_start-0xc0007d88>
 274:	2f6e6f6d 	svccs	0x006e6f6d
 278:	2f637273 	svccs	0x00637273
 27c:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
 280:	6400632e 	strvs	r6, [r0], #-814	; 0xfffffcd2
 284:	72695f6f 	rsbvc	r5, r9, #444	; 0x1bc
 288:	72730071 	rsbsvc	r0, r3, #113	; 0x71
 28c:	6f642f63 	svcvs	0x00642f63
 290:	7172695f 	cmnvc	r2, pc, asr r9
 294:	6700632e 	strvs	r6, [r0, -lr, lsr #6]
 298:	5f6f6970 	svcpl	0x006f6970
 29c:	5f72646f 	svcpl	0x0072646f
 2a0:	796d0074 	stmdbvc	sp!, {r2, r4, r5, r6}^
 2a4:	63727473 	cmnvs	r2, #1929379840	; 0x73000000
 2a8:	4100706d 	tstmi	r0, sp, rrx
 2ac:	4f4c414e 	svcmi	0x004c414e
 2b0:	746f0047 	strbtvc	r0, [pc], #-71	; 2b8 <_start-0xc0007d48>
 2b4:	72657079 	rsbvc	r7, r5, #121	; 0x79
 2b8:	61747300 	cmnvs	r4, r0, lsl #6
 2bc:	00737574 	rsbseq	r7, r3, r4, ror r5
 2c0:	59524556 	ldmdbpl	r2, {r1, r2, r4, r6, r8, sl, lr}^
 2c4:	4749485f 	smlsldmi	r4, r9, pc, r8	; <UNPREDICTABLE>
 2c8:	70670048 	rsbvc	r0, r7, r8, asr #32
 2cc:	00786f69 	rsbseq	r6, r8, r9, ror #30
 2d0:	4f495047 	svcmi	0x00495047
 2d4:	5445535f 	strbpl	r5, [r5], #-863	; 0xfffffca1
 2d8:	4e00545f 	cfmvsrmi	mvf0, r5
 2dc:	55505f4f 	ldrbpl	r5, [r0, #-3919]	; 0xfffff0b1
 2e0:	47004450 	smlsdmi	r0, r0, r4, r4
 2e4:	5f4f4950 	svcpl	0x004f4950
 2e8:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
 2ec:	00545f54 	subseq	r5, r4, r4, asr pc
 2f0:	64707570 	ldrbtvs	r7, [r0], #-1392	; 0xfffffa90
 2f4:	4e490072 	mcrmi	0, 2, r0, cr9, cr2, {3}
 2f8:	00545550 	subseq	r5, r4, r0, asr r5
 2fc:	4944454d 	stmdbmi	r4, {r0, r2, r3, r6, r8, sl, lr}^
 300:	67004d55 	smlsdvs	r0, r5, sp, r4
 304:	5f6f6970 	svcpl	0x006f6970
 308:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 30c:	6700745f 	smlsdvs	r0, pc, r4, r7	; <UNPREDICTABLE>
 310:	5f6f6970 	svcpl	0x006f6970
 314:	64707570 	ldrbtvs	r7, [r0], #-1392	; 0xfffffa90
 318:	00745f72 	rsbseq	r5, r4, r2, ror pc
 31c:	5f6c6168 	svcpl	0x006c6168
 320:	6f697067 	svcvs	0x00697067
 324:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
 328:	65640074 	strbvs	r0, [r4, #-116]!	; 0xffffff8c
 32c:	6f007473 	svcvs	0x00007473
 330:	65657073 	strbvs	r7, [r5, #-115]!	; 0xffffff8d
 334:	68007264 	stmdavs	r0, {r2, r5, r6, r9, ip, sp, lr}
 338:	675f6c61 	ldrbvs	r6, [pc, -r1, ror #24]
 33c:	5f6f6970 	svcpl	0x006f6970
 340:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 344:	70670065 	rsbvc	r0, r7, r5, rrx
 348:	6f5f6f69 	svcvs	0x005f6f69
 34c:	65657073 	strbvs	r7, [r5, #-115]!	; 0xffffff8d
 350:	745f7264 	ldrbvc	r7, [pc], #-612	; 358 <_start-0xc0007ca8>
 354:	69706700 	ldmdbvs	r0!, {r8, r9, sl, sp, lr}^
 358:	6f6d5f6f 	svcvs	0x006d5f6f
 35c:	5f726564 	svcpl	0x00726564
 360:	70670074 	rsbvc	r0, r7, r4, ror r0
 364:	6f5f6f69 	svcvs	0x005f6f69
 368:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 36c:	00745f72 	rsbseq	r5, r4, r2, ror pc
 370:	2f637273 	svccs	0x00637273
 374:	6f697067 	svcvs	0x00697067
 378:	4f00632e 	svcmi	0x0000632e
 37c:	55505455 	ldrbpl	r5, [r0, #-1109]	; 0xfffffbab
 380:	6f6d0054 	svcvs	0x006d0054
 384:	00726564 	rsbseq	r6, r2, r4, ror #10
 388:	545f504d 	ldrbpl	r5, [pc], #-77	; 390 <_start-0xc0007c70>
 38c:	4248415a 	submi	r4, r8, #-2147483626	; 0x80000016
 390:	434e4536 	movtmi	r4, #58678	; 0xe536
 394:	0052524c 	subseq	r5, r2, ip, asr #4
 398:	415f504d 	cmpmi	pc, sp, asr #32
 39c:	4c4d4958 	mcrrmi	9, 5, r4, sp, cr8	; <UNPREDICTABLE>
 3a0:	434e4550 	movtmi	r4, #58704	; 0xe550
 3a4:	0052524c 	subseq	r5, r2, ip, asr #4
 3a8:	415f504d 	cmpmi	pc, sp, asr #32
 3ac:	45324248 	ldrmi	r4, [r2, #-584]!	; 0xfffffdb8
 3b0:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
 3b4:	504d0052 	subpl	r0, sp, r2, asr r0
 3b8:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
 3bc:	534e4535 	movtpl	r4, #58677	; 0xe535
 3c0:	00525445 	subseq	r5, r2, r5, asr #8
 3c4:	415f504d 	cmpmi	pc, sp, asr #32
 3c8:	45334250 	ldrmi	r4, [r3, #-592]!	; 0xfffffdb0
 3cc:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
 3d0:	65720052 	ldrbvs	r0, [r2, #-82]!	; 0xffffffae
 3d4:	00383273 	eorseq	r3, r8, r3, ror r2
 3d8:	44495841 	strbmi	r5, [r9], #-2113	; 0xfffff7bf
 3dc:	00525649 	subseq	r5, r2, r9, asr #12
 3e0:	31736572 	cmncc	r3, r2, ror r5
 3e4:	65720031 	ldrbvs	r0, [r2, #-49]!	; 0xffffffcf
 3e8:	00323173 	eorseq	r3, r2, r3, ror r1
 3ec:	31736572 	cmncc	r3, r2, ror r5
 3f0:	65720033 	ldrbvs	r0, [r2, #-51]!	; 0xffffffcd
 3f4:	00343173 	eorseq	r3, r4, r3, ror r1
 3f8:	31736572 	cmncc	r3, r2, ror r5
 3fc:	65720035 	ldrbvs	r0, [r2, #-53]!	; 0xffffffcb
 400:	00363173 	eorseq	r3, r6, r3, ror r1
 404:	31736572 	cmncc	r3, r2, ror r5
 408:	65720037 	ldrbvs	r0, [r2, #-55]!	; 0xffffffc9
 40c:	00393173 	eorseq	r3, r9, r3, ror r1
 410:	425f504d 	subsmi	r5, pc, #77	; 0x4d
 414:	43544f4f 	cmpmi	r4, #316	; 0x13c
 418:	50410052 	subpl	r0, r1, r2, asr r0
 41c:	49443442 	stmdbmi	r4, {r1, r6, sl, ip, sp}^
 420:	4d005256 	sfmmi	f5, 4, [r0, #-344]	; 0xfffffea8
 424:	50415f43 	subpl	r5, r1, r3, asr #30
 428:	504c3142 	subpl	r3, ip, r2, asr #2
 42c:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
 430:	4d005254 	sfmmi	f5, 4, [r0, #-336]	; 0xfffffeb0
 434:	48415f43 	stmdami	r1, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
 438:	4e453242 	cdpmi	2, 4, cr3, cr5, cr2, {2}
 43c:	52524c43 	subspl	r4, r2, #17152	; 0x4300
 440:	5f504d00 	svcpl	0x00504d00
 444:	31425041 	cmpcc	r2, r1, asr #32
 448:	4c434e45 	mcrrmi	14, 4, r4, r3, cr5
 44c:	53005252 	movwpl	r5, #594	; 0x252
 450:	434d4d44 	movtmi	r4, #56644	; 0xdd44
 454:	534b4333 	movtpl	r4, #45875	; 0xb333
 458:	00524c45 	subseq	r4, r2, r5, asr #24
 45c:	415f504d 	cmpmi	pc, sp, asr #32
 460:	45354250 	ldrmi	r4, [r5, #-592]!	; 0xfffffdb0
 464:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
 468:	52420052 	subpl	r0, r2, #82	; 0x52
 46c:	5453525f 	ldrbpl	r5, [r3], #-607	; 0xfffffda1
 470:	524c4353 	subpl	r4, ip, #1275068417	; 0x4c000001
 474:	434d0052 	movtmi	r0, #53330	; 0xd052
 478:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
 47c:	45504c33 	ldrbmi	r4, [r0, #-3123]	; 0xfffff3cd
 480:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
 484:	504d0052 	subpl	r0, sp, r2, asr r0
 488:	414c4d5f 	cmpmi	ip, pc, asr sp
 48c:	504c4248 	subpl	r4, ip, r8, asr #4
 490:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
 494:	4c005254 	sfmmi	f5, 4, [r0], {84}	; 0x54
 498:	4d495450 	cfstrdmi	mvd5, [r9, #-320]	; 0xfffffec0
 49c:	534b4331 	movtpl	r4, #45873	; 0xb331
 4a0:	00524c45 	subseq	r4, r2, r5, asr #24
 4a4:	415f434d 	cmpmi	pc, sp, asr #6
 4a8:	45324250 	ldrmi	r4, [r2, #-592]!	; 0xfffffdb0
 4ac:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
 4b0:	41550052 	cmpmi	r5, r2, asr r0
 4b4:	43315452 	teqmi	r1, #1375731712	; 0x52000000
 4b8:	4c45534b 	mcrrmi	3, 4, r5, r5, cr11
 4bc:	504d0052 	subpl	r0, sp, r2, asr r0
 4c0:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
 4c4:	534e4536 	movtpl	r4, #58678	; 0xe536
 4c8:	00525445 	subseq	r5, r2, r5, asr #8
 4cc:	415f504d 	cmpmi	pc, sp, asr #32
 4d0:	4c324248 	lfmmi	f4, 4, [r2], #-288	; 0xfffffee0
 4d4:	534e4550 	movtpl	r4, #58704	; 0xe550
 4d8:	00525445 	subseq	r5, r2, r5, asr #8
 4dc:	5f746567 	svcpl	0x00746567
 4e0:	69727473 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
 4e4:	5000676e 	andpl	r6, r0, lr, ror #14
 4e8:	43324c4c 	teqmi	r2, #76, 24	; 0x4c00
 4ec:	31524746 	cmpcc	r2, r6, asr #14
 4f0:	5f434d00 	svcpl	0x00434d00
 4f4:	34425041 	strbcc	r5, [r2], #-65	; 0xffffffbf
 4f8:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
 4fc:	41005254 	tstmi	r0, r4, asr r2
 500:	52354248 	eorspl	r4, r5, #72, 4	; 0x80000004
 504:	4c435453 	cfstrdmi	mvd5, [r3], {83}	; 0x53
 508:	53005252 	movwpl	r5, #594	; 0x252
 50c:	43364950 	teqmi	r6, #80, 18	; 0x140000
 510:	4c45534b 	mcrrmi	3, 4, r5, r5, cr11
 514:	65720052 	ldrbvs	r0, [r2, #-82]!	; 0xffffffae
 518:	00303273 	eorseq	r3, r0, r3, ror r2
 51c:	32736572 	rsbscc	r6, r3, #478150656	; 0x1c800000
 520:	41550031 	cmpmi	r5, r1, lsr r0
 524:	38375452 	ldmdacc	r7!, {r1, r4, r6, sl, ip, lr}
 528:	45534b43 	ldrbmi	r4, [r3, #-2883]	; 0xfffff4bd
 52c:	7200524c 	andvc	r5, r0, #76, 4	; 0xc0000004
 530:	33327365 	teqcc	r2, #-1811939327	; 0x94000001
 534:	415a5400 	cmpmi	sl, r0, lsl #8
 538:	52364248 	eorspl	r4, r6, #72, 4	; 0x80000004
 53c:	45535453 	ldrbmi	r5, [r3, #-1107]	; 0xfffffbad
 540:	4d00524c 	sfmmi	f5, 4, [r0, #-304]	; 0xfffffed0
 544:	4c4d5f50 	mcrrmi	15, 5, r5, sp, cr0
 548:	45424841 	strbmi	r4, [r2, #-2113]	; 0xfffff7bf
 54c:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
 550:	50410052 	subpl	r0, r1, r2, asr r0
 554:	53523242 	cmppl	r2, #536870916	; 0x20000004
 558:	524c4354 	subpl	r4, ip, #84, 6	; 0x50000001
 55c:	65720052 	ldrbvs	r0, [r2, #-82]!	; 0xffffffae
 560:	00373273 	eorseq	r3, r7, r3, ror r2
 564:	31425041 	cmpcc	r2, r1, asr #32
 568:	52564944 	subspl	r4, r6, #68, 18	; 0x110000
 56c:	5f434d00 	svcpl	0x00434d00
 570:	35424841 	strbcc	r4, [r2, #-2113]	; 0xfffff7bf
 574:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
 578:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
 57c:	42504100 	subsmi	r4, r0, #0, 2
 580:	54535234 	ldrbpl	r5, [r3], #-564	; 0xfffffdcc
 584:	52524c43 	subspl	r4, r2, #17152	; 0x4300
 588:	4c4c5000 	marmi	acc0, r5, ip
 58c:	41524631 	cmpmi	r2, r1, lsr r6
 590:	72005243 	andvc	r5, r0, #805306372	; 0x30000004
 594:	00317365 	eorseq	r7, r1, r5, ror #6
 598:	32736572 	rsbscc	r6, r3, #478150656	; 0x1c800000
 59c:	73657200 	cmnvc	r5, #0, 4
 5a0:	65720033 	ldrbvs	r0, [r2, #-51]!	; 0xffffffcd
 5a4:	72003473 	andvc	r3, r0, #1929379840	; 0x73000000
 5a8:	00357365 	eorseq	r7, r5, r5, ror #6
 5ac:	36736572 			; <UNDEFINED> instruction: 0x36736572
 5b0:	73657200 	cmnvc	r5, #0, 4
 5b4:	65720037 	ldrbvs	r0, [r2, #-55]!	; 0xffffffc9
 5b8:	72003873 	andvc	r3, r0, #7536640	; 0x730000
 5bc:	00397365 	eorseq	r7, r9, r5, ror #6
 5c0:	34424841 	strbcc	r4, [r2], #-2113	; 0xfffff7bf
 5c4:	43545352 	cmpmi	r4, #1207959553	; 0x48000001
 5c8:	0052524c 	subseq	r5, r2, ip, asr #4
 5cc:	415f504d 	cmpmi	pc, sp, asr #32
 5d0:	4c344248 	lfmmi	f4, 4, [r4], #-288	; 0xfffffee0
 5d4:	434e4550 	movtmi	r4, #58704	; 0xe550
 5d8:	0052524c 	subseq	r5, r2, ip, asr #4
 5dc:	415f434d 	cmpmi	pc, sp, asr #6
 5e0:	45364248 	ldrmi	r4, [r6, #-584]!	; 0xfffffdb8
 5e4:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
 5e8:	4c500052 	mrrcmi	0, 5, r0, r0, cr2	; <UNPREDICTABLE>
 5ec:	5343344c 	movtpl	r3, #13388	; 0x344c
 5f0:	4c005247 	sfmmi	f5, 4, [r0], {71}	; 0x47
 5f4:	4d495450 	cfstrdmi	mvd5, [r9, #-320]	; 0xfffffec0
 5f8:	4b433534 	blmi	10cdad0 <_start-0xbef3a530>
 5fc:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
 600:	5f434d00 	svcpl	0x00434d00
 604:	48414c4d 	stmdami	r1, {r0, r2, r3, r6, sl, fp, lr}^
 608:	434e4542 	movtmi	r4, #58690	; 0xe542
 60c:	0052524c 	subseq	r5, r2, ip, asr #4
 610:	545f504d 	ldrbpl	r5, [pc], #-77	; 618 <_start-0xc00079e8>
 614:	4248415a 	submi	r4, r8, #-2147483626	; 0x80000016
 618:	45504c36 	ldrbmi	r4, [r0, #-3126]	; 0xfffff3ca
 61c:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
 620:	65720052 	ldrbvs	r0, [r2, #-82]!	; 0xffffffae
 624:	00353273 	eorseq	r3, r5, r3, ror r2
 628:	43485445 	movtmi	r5, #33861	; 0x8445
 62c:	4c45534b 	mcrrmi	3, 4, r5, r5, cr11
 630:	434d0052 	movtmi	r0, #53330	; 0xd052
 634:	414c4d5f 	cmpmi	ip, pc, asr sp
 638:	504c4248 	subpl	r4, ip, r8, asr #4
 63c:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
 640:	41005254 	tstmi	r0, r4, asr r2
 644:	52324250 	eorspl	r4, r2, #80, 4
 648:	45535453 	ldrbmi	r5, [r3, #-1107]	; 0xfffffbad
 64c:	4f005254 	svcmi	0x00005254
 650:	534e4543 	movtpl	r4, #58691	; 0xe543
 654:	00525445 	subseq	r5, r2, r5, asr #8
 658:	415f434d 	cmpmi	pc, sp, asr #6
 65c:	4c344248 	lfmmi	f4, 4, [r4], #-288	; 0xfffffee0
 660:	434e4550 	movtmi	r4, #58704	; 0xe550
 664:	0052524c 	subseq	r5, r2, ip, asr #4
 668:	415f504d 	cmpmi	pc, sp, asr #32
 66c:	45344248 	ldrmi	r4, [r4, #-584]!	; 0xfffffdb8
 670:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
 674:	434d0052 	movtmi	r0, #53330	; 0xd052
 678:	4958415f 	ldmdbmi	r8, {r0, r1, r2, r3, r4, r6, r8, lr}^
 67c:	45504c4d 	ldrbmi	r4, [r0, #-3149]	; 0xfffff3b3
 680:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
 684:	504d0052 	subpl	r0, sp, r2, asr r0
 688:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
 68c:	45504c33 	ldrbmi	r4, [r0, #-3123]	; 0xfffff3cd
 690:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
 694:	434d0052 	movtmi	r0, #53330	; 0xd052
 698:	4958415f 	ldmdbmi	r8, {r0, r1, r2, r3, r4, r6, r8, lr}^
 69c:	434e454d 	movtmi	r4, #58701	; 0xe54d
 6a0:	0052524c 	subseq	r5, r2, ip, asr #4
 6a4:	415f434d 	cmpmi	pc, sp, asr #6
 6a8:	45344248 	ldrmi	r4, [r4, #-584]!	; 0xfffffdb8
 6ac:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
 6b0:	48410052 	stmdami	r1, {r1, r4, r6}^
 6b4:	53523242 	cmppl	r2, #536870916	; 0x20000004
 6b8:	54455354 	strbpl	r5, [r5], #-852	; 0xfffffcac
 6bc:	43520052 	cmpmi	r2, #82	; 0x52
 6c0:	4553344b 	ldrbmi	r3, [r3, #-1099]	; 0xfffffbb5
 6c4:	4d00524c 	sfmmi	f5, 4, [r0, #-304]	; 0xfffffed0
 6c8:	50415f50 	subpl	r5, r1, r0, asr pc
 6cc:	4e453442 	cdpmi	4, 4, cr3, cr5, cr2, {2}
 6d0:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
 6d4:	73657200 	cmnvc	r5, #0, 4
 6d8:	4d003031 	stcmi	0, cr3, [r0, #-196]	; 0xffffff3c
 6dc:	50415f43 	subpl	r5, r1, r3, asr #30
 6e0:	504c3142 	subpl	r3, ip, r2, asr #2
 6e4:	4c434e45 	mcrrmi	14, 4, r4, r3, cr5
 6e8:	55005252 	strpl	r5, [r0, #-594]	; 0xfffffdae
 6ec:	32545241 	subscc	r5, r4, #268435460	; 0x10000004
 6f0:	534b4334 	movtpl	r4, #45876	; 0xb334
 6f4:	00524c45 	subseq	r4, r2, r5, asr #24
 6f8:	314f434d 	cmpcc	pc, sp, asr #6
 6fc:	52474643 	subpl	r4, r7, #70254592	; 0x4300000
 700:	5f434d00 	svcpl	0x00434d00
 704:	32425041 	subcc	r5, r2, #65	; 0x41
 708:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
 70c:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
 710:	63637200 	cmnvs	r3, #0, 4
 714:	4d00745f 	cfstrsmi	mvf7, [r0, #-380]	; 0xfffffe84
 718:	48415f43 	stmdami	r1, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
 71c:	504c3642 	subpl	r3, ip, r2, asr #12
 720:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
 724:	72005254 	andvc	r5, r0, #84, 4	; 0x40000005
 728:	38317365 	ldmdacc	r1!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
 72c:	4c4c5000 	marmi	acc0, r5, ip
 730:	47534331 	smmlarmi	r3, r1, r3, r4
 734:	44460052 	strbmi	r0, [r6], #-82	; 0xffffffae
 738:	434e4143 	movtmi	r4, #57667	; 0xe143
 73c:	4c45534b 	mcrrmi	3, 4, r5, r5, cr11
 740:	41530052 	cmpmi	r3, r2, asr r0
 744:	4b433149 	blmi	10ccc70 <_start-0xbef3b390>
 748:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
 74c:	74656700 	strbtvc	r6, [r5], #-1792	; 0xfffff900
 750:	6168635f 	cmnvs	r8, pc, asr r3
 754:	504d0072 	subpl	r0, sp, r2, ror r0
 758:	414c4d5f 	cmpmi	ip, pc, asr sp
 75c:	504c4248 	subpl	r4, ip, r8, asr #4
 760:	4c434e45 	mcrrmi	14, 4, r4, r3, cr5
 764:	4d005252 	sfmmi	f5, 4, [r0, #-328]	; 0xfffffeb8
 768:	50415f43 	subpl	r5, r1, r3, asr #30
 76c:	4e453242 	cdpmi	2, 4, cr3, cr5, cr2, {2}
 770:	52524c43 	subspl	r4, r2, #17152	; 0x4300
 774:	5f504d00 	svcpl	0x00504d00
 778:	36424841 	strbcc	r4, [r2], -r1, asr #16
 77c:	4c434e45 	mcrrmi	14, 4, r4, r3, cr5
 780:	4d005252 	sfmmi	f5, 4, [r0, #-328]	; 0xfffffeb8
 784:	48415f50 	stmdami	r1, {r4, r6, r8, r9, sl, fp, ip, lr}^
 788:	504c3242 	subpl	r3, ip, r2, asr #4
 78c:	4c434e45 	mcrrmi	14, 4, r4, r3, cr5
 790:	4d005252 	sfmmi	f5, 4, [r0, #-328]	; 0xfffffeb8
 794:	48415f50 	stmdami	r1, {r4, r6, r8, r9, sl, fp, ip, lr}^
 798:	4e453442 	cdpmi	4, 4, cr3, cr5, cr2, {2}
 79c:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
 7a0:	49415300 	stmdbmi	r1, {r8, r9, ip, lr}^
 7a4:	534b4333 	movtpl	r4, #45875	; 0xb333
 7a8:	00524c45 	subseq	r4, r2, r5, asr #24
 7ac:	4b43504d 	blmi	10d48e8 <_start-0xbef33718>
 7b0:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
 7b4:	5f434d00 	svcpl	0x00434d00
 7b8:	48414c4d 	stmdami	r1, {r0, r2, r3, r6, sl, fp, lr}^
 7bc:	45504c42 	ldrbmi	r4, [r0, #-3138]	; 0xfffff3be
 7c0:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
 7c4:	434d0052 	movtmi	r0, #53330	; 0xd052
 7c8:	4250415f 	subsmi	r4, r0, #-1073741801	; 0xc0000017
 7cc:	434e4534 	movtmi	r4, #58676	; 0xe534
 7d0:	0052524c 	subseq	r5, r2, ip, asr #4
 7d4:	435f434d 	cmpmi	pc, #872415233	; 0x34000001
 7d8:	00524549 	subseq	r4, r2, r9, asr #10
 7dc:	43495348 	movtmi	r5, #37704	; 0x9348
 7e0:	00524746 	subseq	r4, r2, r6, asr #14
 7e4:	32474e52 	subcc	r4, r7, #1312	; 0x520
 7e8:	45534b43 	ldrbmi	r4, [r3, #-2883]	; 0xfffff4bd
 7ec:	4d00524c 	sfmmi	f5, 4, [r0, #-304]	; 0xfffffed0
 7f0:	4c4d5f50 	mcrrmi	15, 5, r5, sp, cr0
 7f4:	45424841 	strbmi	r4, [r2, #-2113]	; 0xfffff7bf
 7f8:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
 7fc:	48410052 	stmdami	r1, {r1, r4, r6}^
 800:	53523542 	cmppl	r2, #276824064	; 0x10800000
 804:	54455354 	strbpl	r5, [r5], #-852	; 0xfffffcac
 808:	50410052 	subpl	r0, r1, r2, asr r0
 80c:	53523342 	cmppl	r2, #134217729	; 0x8000001
 810:	54455354 	strbpl	r5, [r5], #-852	; 0xfffffcac
 814:	434d0052 	movtmi	r0, #53330	; 0xd052
 818:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
 81c:	45504c35 	ldrbmi	r4, [r0, #-3125]	; 0xfffff3cb
 820:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
 824:	57500052 			; <UNDEFINED> instruction: 0x57500052
 828:	44504c52 	ldrbmi	r4, [r0], #-3154	; 0xfffff3ae
 82c:	5243594c 	subpl	r5, r3, #76, 18	; 0x130000
 830:	42484100 	submi	r4, r8, #0, 2
 834:	54535233 	ldrbpl	r5, [r3], #-563	; 0xfffffdcd
 838:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
 83c:	73657200 	cmnvc	r5, #0, 4
 840:	4d003632 	stcmi	6, cr3, [r0, #-200]	; 0xffffff38
 844:	53525f43 	cmppl	r2, #268	; 0x10c
 848:	4c435354 	mcrrmi	3, 5, r5, r3, cr4
 84c:	73005252 	movwvc	r5, #594	; 0x252
 850:	752f6372 	strvc	r6, [pc, #-882]!	; 4e6 <_start-0xc0007b1a>
 854:	34747261 	ldrbtcc	r7, [r4], #-609	; 0xfffffd9f
 858:	4900632e 	stmdbmi	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
 85c:	35334332 	ldrcc	r4, [r3, #-818]!	; 0xfffffcce
 860:	45534b43 	ldrbmi	r4, [r3, #-2883]	; 0xfffff4bd
 864:	4d00524c 	sfmmi	f5, 4, [r0, #-304]	; 0xfffffed0
 868:	52475f50 	subpl	r5, r7, #80, 30	; 0x140
 86c:	53435453 	movtpl	r5, #13395	; 0x3453
 870:	00525445 	subseq	r5, r2, r5, asr #8
 874:	33425041 	movtcc	r5, #8257	; 0x2041
 878:	52564944 	subspl	r4, r6, #68, 18	; 0x110000
 87c:	5f504d00 	svcpl	0x00504d00
 880:	34424841 	strbcc	r4, [r2], #-2113	; 0xfffff7bf
 884:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
 888:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
 88c:	43324900 	teqmi	r2, #0, 18
 890:	4b433231 	blmi	10cd15c <_start-0xbef3aea4>
 894:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
 898:	5f434d00 	svcpl	0x00434d00
 89c:	48414c4d 	stmdami	r1, {r0, r2, r3, r6, sl, fp, lr}^
 8a0:	534e4542 	movtpl	r4, #58690	; 0xe542
 8a4:	00525445 	subseq	r5, r2, r5, asr #8
 8a8:	5f747570 	svcpl	0x00747570
 8ac:	69727473 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
 8b0:	4d00676e 	stcmi	7, cr6, [r0, #-440]	; 0xfffffe48
 8b4:	48415f43 	stmdami	r1, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
 8b8:	4e453342 	cdpmi	3, 4, cr3, cr5, cr2, {2}
 8bc:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
 8c0:	4c4c5000 	marmi	acc0, r5, ip
 8c4:	47464331 	smlaldxmi	r4, r6, r1, r3
 8c8:	50003152 	andpl	r3, r0, r2, asr r1
 8cc:	43314c4c 	teqmi	r1, #76, 24	; 0x4c00
 8d0:	32524746 	subscc	r4, r2, #18350080	; 0x1180000
 8d4:	5f504d00 	svcpl	0x00504d00
 8d8:	31425041 	cmpcc	r2, r1, asr #32
 8dc:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
 8e0:	54005254 	strpl	r5, [r0], #-596	; 0xfffffdac
 8e4:	4248415a 	submi	r4, r8, #-2147483626	; 0x80000016
 8e8:	54535236 	ldrbpl	r5, [r3], #-566	; 0xfffffdca
 8ec:	52524c43 	subspl	r4, r2, #17152	; 0x4300
 8f0:	42484100 	submi	r4, r8, #0, 2
 8f4:	54535233 	ldrbpl	r5, [r3], #-563	; 0xfffffdcd
 8f8:	52524c43 	subspl	r4, r2, #17152	; 0x4300
 8fc:	74757000 	ldrbtvc	r7, [r5], #-0
 900:	6168635f 	cmnvs	r8, pc, asr r3
 904:	504d0072 	subpl	r0, sp, r2, ror r0
 908:	415a545f 	cmpmi	sl, pc, asr r4
 90c:	4c364248 	lfmmi	f4, 4, [r6], #-288	; 0xfffffee0
 910:	434e4550 	movtmi	r4, #58704	; 0xe550
 914:	0052524c 	subseq	r5, r2, ip, asr #4
 918:	415f434d 	cmpmi	pc, sp, asr #6
 91c:	45354248 	ldrmi	r4, [r5, #-584]!	; 0xfffffdb8
 920:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
 924:	504d0052 	subpl	r0, sp, r2, asr r0
 928:	4250415f 	subsmi	r4, r0, #-1073741801	; 0xc0000017
 92c:	45504c33 	ldrbmi	r4, [r0, #-3123]	; 0xfffff3cd
 930:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
 934:	53440052 	movtpl	r0, #16466	; 0x4052
 938:	534b4349 	movtpl	r4, #45897	; 0xb349
 93c:	00524c45 	subseq	r4, r2, r5, asr #24
 940:	32495053 	subcc	r5, r9, #83	; 0x53
 944:	43333253 	teqmi	r3, #805306373	; 0x30000005
 948:	4c45534b 	mcrrmi	3, 4, r5, r5, cr11
 94c:	434f0052 	movtmi	r0, #61522	; 0xf052
 950:	4c434e45 	mcrrmi	14, 4, r4, r3, cr5
 954:	44005252 	strmi	r5, [r0], #-594	; 0xfffffdae
 958:	46434742 	strbmi	r4, [r3], -r2, asr #14
 95c:	4d005247 	sfmmi	f5, 4, [r0, #-284]	; 0xfffffee4
 960:	50415f43 	subpl	r5, r1, r3, asr #30
 964:	504c3342 	subpl	r3, ip, r2, asr #6
 968:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
 96c:	4d005254 	sfmmi	f5, 4, [r0, #-336]	; 0xfffffeb0
 970:	43324f43 	teqmi	r2, #268	; 0x10c
 974:	00524746 	subseq	r4, r2, r6, asr #14
 978:	495f504d 	ldmdbmi	pc, {r0, r2, r3, r6, ip, lr}^	; <UNPREDICTABLE>
 97c:	46474457 			; <UNDEFINED> instruction: 0x46474457
 980:	5445535a 	strbpl	r5, [r5], #-858	; 0xfffffca6
 984:	54520052 	ldrbpl	r0, [r2], #-82	; 0xffffffae
 988:	56494443 	strbpl	r4, [r9], -r3, asr #8
 98c:	54530052 	ldrbpl	r0, [r3], #-82	; 0xffffffae
 990:	434e4547 	movtmi	r4, #58695	; 0xe547
 994:	4c45534b 	mcrrmi	3, 4, r5, r5, cr11
 998:	434d0052 	movtmi	r0, #53330	; 0xd052
 99c:	4250415f 	subsmi	r4, r0, #-1073741801	; 0xc0000017
 9a0:	45504c34 	ldrbmi	r4, [r0, #-3124]	; 0xfffff3cc
 9a4:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
 9a8:	41550052 	cmpmi	r5, r2, asr r0
 9ac:	35335452 	ldrcc	r5, [r3, #-1106]!	; 0xfffffbae
 9b0:	45534b43 	ldrbmi	r4, [r3, #-2883]	; 0xfffff4bd
 9b4:	4d00524c 	sfmmi	f5, 4, [r0, #-304]	; 0xfffffed0
 9b8:	50415f50 	subpl	r5, r1, r0, asr pc
 9bc:	4e453442 	cdpmi	4, 4, cr3, cr5, cr2, {2}
 9c0:	52524c43 	subspl	r4, r2, #17152	; 0x4300
 9c4:	42504100 	subsmi	r4, r0, #0, 2
 9c8:	56494432 			; <UNDEFINED> instruction: 0x56494432
 9cc:	434d0052 	movtmi	r0, #53330	; 0xd052
 9d0:	4250415f 	subsmi	r4, r0, #-1073741801	; 0xc0000017
 9d4:	434e4533 	movtmi	r4, #58675	; 0xe533
 9d8:	0052524c 	subseq	r5, r2, ip, asr #4
 9dc:	474d4954 	smlsldmi	r4, sp, r4, r9
 9e0:	45525032 	ldrbmi	r5, [r2, #-50]	; 0xffffffce
 9e4:	4c500052 	mrrcmi	0, 5, r0, r0, cr2	; <UNPREDICTABLE>
 9e8:	5243334c 	subpl	r3, r3, #76, 6	; 0x30000001
 9ec:	5f504d00 	svcpl	0x00504d00
 9f0:	32425041 	subcc	r5, r2, #65	; 0x41
 9f4:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
 9f8:	50005254 	andpl	r5, r0, r4, asr r2
 9fc:	46344c4c 	ldrtmi	r4, [r4], -ip, asr #24
 a00:	52434152 	subpl	r4, r3, #-2147483628	; 0x80000014
 a04:	5f504d00 	svcpl	0x00504d00
 a08:	32425041 	subcc	r5, r2, #65	; 0x41
 a0c:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
 a10:	52524c43 	subspl	r4, r2, #17152	; 0x4300
 a14:	42504100 	subsmi	r4, r0, #0, 2
 a18:	54535231 	ldrbpl	r5, [r3], #-561	; 0xfffffdcf
 a1c:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
 a20:	5f434d00 	svcpl	0x00434d00
 a24:	33424841 	movtcc	r4, #10305	; 0x2841
 a28:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
 a2c:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
 a30:	5f434d00 	svcpl	0x00434d00
 a34:	36424841 	strbcc	r4, [r2], -r1, asr #16
 a38:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
 a3c:	52524c43 	subspl	r4, r2, #17152	; 0x4300
 a40:	4c445200 	sfmmi	f5, 2, [r4], {-0}
 a44:	52434953 	subpl	r4, r3, #1359872	; 0x14c000
 a48:	4c4c5000 	marmi	acc0, r5, ip
 a4c:	00524334 	subseq	r4, r2, r4, lsr r3
 a50:	314b4350 	cmpcc	fp, r0, asr r3
 a54:	4c455332 	mcrrmi	3, 3, r5, r5, cr2
 a58:	4c500052 	mrrcmi	0, 5, r0, r0, cr2	; <UNPREDICTABLE>
 a5c:	4643324c 	strbmi	r3, [r3], -ip, asr #4
 a60:	00325247 	eorseq	r5, r2, r7, asr #4
 a64:	344c4c50 	strbcc	r4, [ip], #-3152	; 0xfffff3b0
 a68:	52474643 	subpl	r4, r7, #70254592	; 0x4300000
 a6c:	65720031 	ldrbvs	r0, [r2, #-49]!	; 0xffffffcf
 a70:	00343273 	eorseq	r3, r4, r3, ror r2
 a74:	415f504d 	cmpmi	pc, sp, asr #32
 a78:	4c354248 	lfmmi	f4, 4, [r5], #-288	; 0xfffffee0
 a7c:	534e4550 	movtpl	r4, #58704	; 0xe550
 a80:	00525445 	subseq	r5, r2, r5, asr #8
 a84:	415f434d 	cmpmi	pc, sp, asr #6
 a88:	4c344248 	lfmmi	f4, 4, [r4], #-288	; 0xfffffee0
 a8c:	534e4550 	movtpl	r4, #58704	; 0xe550
 a90:	00525445 	subseq	r5, r2, r5, asr #8
 a94:	415f504d 	cmpmi	pc, sp, asr #32
 a98:	45334248 	ldrmi	r4, [r3, #-584]!	; 0xfffffdb8
 a9c:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
 aa0:	4c500052 	mrrcmi	0, 5, r0, r0, cr2	; <UNPREDICTABLE>
 aa4:	5343334c 	movtpl	r3, #13132	; 0x334c
 aa8:	4d005247 	sfmmi	f5, 4, [r0, #-284]	; 0xfffffee4
 aac:	52535f50 	subspl	r5, r3, #80, 30	; 0x140
 ab0:	45535145 	ldrbmi	r5, [r3, #-325]	; 0xfffffebb
 ab4:	4d005254 	sfmmi	f5, 4, [r0, #-336]	; 0xfffffeb0
 ab8:	48415f43 	stmdami	r1, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
 abc:	504c3242 	subpl	r3, ip, r2, asr #4
 ac0:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
 ac4:	4d005254 	sfmmi	f5, 4, [r0, #-336]	; 0xfffffeb0
 ac8:	58415f50 	stmdapl	r1, {r4, r6, r8, r9, sl, fp, ip, lr}^
 acc:	504c4d49 	subpl	r4, ip, r9, asr #26
 ad0:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
 ad4:	4d005254 	sfmmi	f5, 4, [r0, #-336]	; 0xfffffeb0
 ad8:	50415f43 	subpl	r5, r1, r3, asr #30
 adc:	504c3342 	subpl	r3, ip, r2, asr #6
 ae0:	4c434e45 	mcrrmi	14, 4, r4, r3, cr5
 ae4:	4d005252 	sfmmi	f5, 4, [r0, #-328]	; 0xfffffeb8
 ae8:	50415f43 	subpl	r5, r1, r3, asr #30
 aec:	4e453142 	dvfmism	f3, f5, f2
 af0:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
 af4:	44495300 	strbmi	r5, [r9], #-768	; 0xfffffd00
 af8:	504d0052 	subpl	r0, sp, r2, asr r0
 afc:	49444b43 	stmdbmi	r4, {r0, r1, r6, r8, r9, fp, lr}^
 b00:	44005256 	strmi	r5, [r0], #-598	; 0xfffffdaa
 b04:	54495244 	strbpl	r5, [r9], #-580	; 0xfffffdbc
 b08:	00524346 	subseq	r4, r2, r6, asr #6
 b0c:	52455043 	subpl	r5, r5, #67	; 0x43
 b10:	45534b43 	ldrbmi	r4, [r3, #-2883]	; 0xfffff4bd
 b14:	4300524c 	movwmi	r5, #588	; 0x24c
 b18:	4b434345 	blmi	10d1834 <_start-0xbef367cc>
 b1c:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
 b20:	5f504d00 	svcpl	0x00504d00
 b24:	52454943 	subpl	r4, r5, #1097728	; 0x10c000
 b28:	43444100 	movtmi	r4, #16640	; 0x4100
 b2c:	45534b43 	ldrbmi	r4, [r3, #-2883]	; 0xfffff4bd
 b30:	4d00524c 	sfmmi	f5, 4, [r0, #-304]	; 0xfffffed0
 b34:	50415f43 	subpl	r5, r1, r3, asr #30
 b38:	4e453342 	cdpmi	3, 4, cr3, cr5, cr2, {2}
 b3c:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
 b40:	5f434d00 	svcpl	0x00434d00
 b44:	4d495841 	stclmi	8, cr5, [r9, #-260]	; 0xfffffefc
 b48:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
 b4c:	52524c43 	subspl	r4, r2, #17152	; 0x4300
 b50:	42484100 	submi	r4, r8, #0, 2
 b54:	54535236 	ldrbpl	r5, [r3], #-566	; 0xfffffdca
 b58:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
 b5c:	5f504d00 	svcpl	0x00504d00
 b60:	53525041 	cmppl	r2, #65	; 0x41
 b64:	00524354 	subseq	r4, r2, r4, asr r3
 b68:	35425041 	strbcc	r5, [r2, #-65]	; 0xffffffbf
 b6c:	53545352 	cmppl	r4, #1207959553	; 0x48000001
 b70:	00525445 	subseq	r5, r2, r5, asr #8
 b74:	415f434d 	cmpmi	pc, sp, asr #6
 b78:	45334248 	ldrmi	r4, [r3, #-584]!	; 0xfffffdb8
 b7c:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
 b80:	43520052 	cmpmi	r2, #82	; 0x52
 b84:	4553334b 	ldrbmi	r3, [r3, #-843]	; 0xfffffcb5
 b88:	5600524c 	strpl	r5, [r0], -ip, asr #4
 b8c:	00525245 	subseq	r5, r2, r5, asr #4
 b90:	66667562 	strbtvs	r7, [r6], -r2, ror #10
 b94:	5f434d00 	svcpl	0x00434d00
 b98:	35425041 	strbcc	r5, [r2, #-65]	; 0xffffffbf
 b9c:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
 ba0:	4d005254 	sfmmi	f5, 4, [r0, #-336]	; 0xfffffeb0
 ba4:	48415f43 	stmdami	r1, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
 ba8:	4e453242 	cdpmi	2, 4, cr3, cr5, cr2, {2}
 bac:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
 bb0:	5f434d00 	svcpl	0x00434d00
 bb4:	35425041 	strbcc	r5, [r2, #-65]	; 0xffffffbf
 bb8:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
 bbc:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
 bc0:	55434d00 	strbpl	r4, [r3, #-3328]	; 0xfffff300
 bc4:	52564944 	subspl	r4, r6, #68, 18	; 0x110000
 bc8:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
 bcc:	52503147 	subspl	r3, r0, #-1073741807	; 0xc0000011
 bd0:	4d005245 	sfmmi	f5, 4, [r0, #-276]	; 0xfffffeec
 bd4:	43475f50 	movtmi	r5, #32592	; 0x7f50
 bd8:	50530052 	subspl	r0, r3, r2, asr r0
 bdc:	31533249 	cmpcc	r3, r9, asr #4
 be0:	45534b43 	ldrbmi	r4, [r3, #-2883]	; 0xfffff4bd
 be4:	4100524c 	tstmi	r0, ip, asr #4
 be8:	44354250 	ldrtmi	r4, [r5], #-592	; 0xfffffdb0
 bec:	00525649 	subseq	r5, r2, r9, asr #12
 bf0:	334c4c50 	movtcc	r4, #52304	; 0xcc50
 bf4:	52474643 	subpl	r4, r7, #70254592	; 0x4300000
 bf8:	504d0032 	subpl	r0, sp, r2, lsr r0
 bfc:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
 c00:	45504c33 	ldrbmi	r4, [r0, #-3123]	; 0xfffff3cd
 c04:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
 c08:	4c500052 	mrrcmi	0, 5, r0, r0, cr2	; <UNPREDICTABLE>
 c0c:	4643344c 	strbmi	r3, [r3], -ip, asr #8
 c10:	00325247 	eorseq	r5, r2, r7, asr #4
 c14:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
 c18:	534b4336 	movtpl	r4, #45878	; 0xb336
 c1c:	00524c45 	subseq	r4, r2, r5, asr #24
 c20:	415f434d 	cmpmi	pc, sp, asr #6
 c24:	45354248 	ldrmi	r4, [r5, #-584]!	; 0xfffffdb8
 c28:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
 c2c:	504d0052 	subpl	r0, sp, r2, asr r0
 c30:	4250415f 	subsmi	r4, r0, #-1073741801	; 0xc0000017
 c34:	45504c33 	ldrbmi	r4, [r0, #-3123]	; 0xfffff3cd
 c38:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
 c3c:	504d0052 	subpl	r0, sp, r2, asr r0
 c40:	415a545f 	cmpmi	sl, pc, asr r4
 c44:	45364248 	ldrmi	r4, [r6, #-584]!	; 0xfffffdb8
 c48:	4c45534e 	mcrrmi	3, 4, r5, r5, cr14
 c4c:	504d0052 	subpl	r0, sp, r2, asr r0
 c50:	4250415f 	subsmi	r4, r0, #-1073741801	; 0xc0000017
 c54:	434e4532 	movtmi	r4, #58674	; 0xe532
 c58:	0052524c 	subseq	r5, r2, ip, asr #4
 c5c:	324c4c50 	subcc	r4, ip, #80, 24	; 0x5000
 c60:	4d005243 	sfmmi	f5, 4, [r0, #-268]	; 0xfffffef4
 c64:	4b435353 	blmi	10d59b8 <_start-0xbef32648>
 c68:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
 c6c:	44505300 	ldrbmi	r5, [r0], #-768	; 0xfffffd00
 c70:	4b434649 	blmi	10d259c <_start-0xbef35a64>
 c74:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
 c78:	54504c00 	ldrbpl	r4, [r0], #-3072	; 0xfffff400
 c7c:	33324d49 	teqcc	r2, #4672	; 0x1240
 c80:	45534b43 	ldrbmi	r4, [r3, #-2883]	; 0xfffff4bd
 c84:	4d00524c 	sfmmi	f5, 4, [r0, #-304]	; 0xfffffed0
 c88:	48415f50 	stmdami	r1, {r4, r6, r8, r9, sl, fp, ip, lr}^
 c8c:	504c3642 	subpl	r3, ip, r2, asr #12
 c90:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
 c94:	4d005254 	sfmmi	f5, 4, [r0, #-336]	; 0xfffffeb0
 c98:	50415f43 	subpl	r5, r1, r3, asr #30
 c9c:	504c3242 	subpl	r3, ip, r2, asr #4
 ca0:	4c434e45 	mcrrmi	14, 4, r4, r3, cr5
 ca4:	4d005252 	sfmmi	f5, 4, [r0, #-328]	; 0xfffffeb8
 ca8:	50415f50 	subpl	r5, r1, r0, asr pc
 cac:	504c3542 	subpl	r3, ip, r2, asr #10
 cb0:	4c434e45 	mcrrmi	14, 4, r4, r3, cr5
 cb4:	4d005252 	sfmmi	f5, 4, [r0, #-328]	; 0xfffffeb8
 cb8:	57495f50 	smlsldpl	r5, r9, r0, pc	; <UNPREDICTABLE>
 cbc:	5a464744 	bpl	11929d4 <_start-0xbee7562c>
 cc0:	52524c43 	subspl	r4, r2, #17152	; 0x4300
 cc4:	5f504d00 	svcpl	0x00504d00
 cc8:	53525041 	cmppl	r2, #65	; 0x41
 ccc:	00525354 	subseq	r5, r2, r4, asr r3
 cd0:	415f434d 	cmpmi	pc, sp, asr #6
 cd4:	4c344250 	lfmmi	f4, 4, [r4], #-320	; 0xfffffec0
 cd8:	434e4550 	movtmi	r4, #58704	; 0xe550
 cdc:	0052524c 	subseq	r5, r2, ip, asr #4
 ce0:	34424841 	strbcc	r4, [r2], #-2113	; 0xfffff7bf
 ce4:	53545352 	cmppl	r4, #1207959553	; 0x48000001
 ce8:	00525445 	subseq	r5, r2, r5, asr #8
 cec:	32424841 	subcc	r4, r2, #4259840	; 0x410000
 cf0:	43545352 	cmpmi	r4, #1207959553	; 0x48000001
 cf4:	0052524c 	subseq	r5, r2, ip, asr #4
 cf8:	435f504d 	cmpmi	pc, #77	; 0x4d
 cfc:	00524649 	subseq	r4, r2, r9, asr #12
 d00:	415f504d 	cmpmi	pc, sp, asr #32
 d04:	45324248 	ldrmi	r4, [r2, #-584]!	; 0xfffffdb8
 d08:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
 d0c:	504d0052 	subpl	r0, sp, r2, asr r0
 d10:	4250415f 	subsmi	r4, r0, #-1073741801	; 0xc0000017
 d14:	45504c35 	ldrbmi	r4, [r0, #-3125]	; 0xfffff3cb
 d18:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
 d1c:	504d0052 	subpl	r0, sp, r2, asr r0
 d20:	4250415f 	subsmi	r4, r0, #-1073741801	; 0xc0000017
 d24:	534e4533 	movtpl	r4, #58675	; 0xe533
 d28:	00525445 	subseq	r5, r2, r5, asr #8
 d2c:	31425041 	cmpcc	r2, r1, asr #32
 d30:	43545352 	cmpmi	r4, #1207959553	; 0x48000001
 d34:	0052524c 	subseq	r5, r2, ip, asr #4
 d38:	415f504d 	cmpmi	pc, sp, asr #32
 d3c:	45354250 	ldrmi	r4, [r5, #-592]!	; 0xfffffdb0
 d40:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
 d44:	504d0052 	subpl	r0, sp, r2, asr r0
 d48:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
 d4c:	45504c35 	ldrbmi	r4, [r0, #-3125]	; 0xfffff3cb
 d50:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
 d54:	504d0052 	subpl	r0, sp, r2, asr r0
 d58:	5453525f 	ldrbpl	r5, [r3], #-607	; 0xfffffda1
 d5c:	4d005353 	stcmi	3, cr5, [r0, #-332]	; 0xfffffeb4
 d60:	48415f50 	stmdami	r1, {r4, r6, r8, r9, sl, fp, ip, lr}^
 d64:	4e453342 	cdpmi	3, 4, cr3, cr5, cr2, {2}
 d68:	52524c43 	subspl	r4, r2, #17152	; 0x4300
 d6c:	42504100 	subsmi	r4, r0, #0, 2
 d70:	54535233 	ldrbpl	r5, [r3], #-563	; 0xfffffdcd
 d74:	52524c43 	subspl	r4, r2, #17152	; 0x4300
 d78:	49534300 	ldmdbmi	r3, {r8, r9, lr}^
 d7c:	52474643 	subpl	r4, r7, #70254592	; 0x4300000
 d80:	5f504d00 	svcpl	0x00504d00
 d84:	51455253 	cmppl	r5, r3, asr r2
 d88:	52524c43 	subspl	r4, r2, #17152	; 0x4300
 d8c:	5f434d00 	svcpl	0x00434d00
 d90:	31425041 	cmpcc	r2, r1, asr #32
 d94:	4c434e45 	mcrrmi	14, 4, r4, r3, cr5
 d98:	4d005252 	sfmmi	f5, 4, [r0, #-328]	; 0xfffffeb8
 d9c:	48415f50 	stmdami	r1, {r4, r6, r8, r9, sl, fp, ip, lr}^
 da0:	4e453542 	cdpmi	5, 4, cr3, cr5, cr2, {2}
 da4:	52524c43 	subspl	r4, r2, #17152	; 0x4300
 da8:	5f504d00 	svcpl	0x00504d00
 dac:	34425041 	strbcc	r5, [r2], #-65	; 0xffffffbf
 db0:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
 db4:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
 db8:	5f504d00 	svcpl	0x00504d00
 dbc:	34425041 	strbcc	r5, [r2], #-65	; 0xffffffbf
 dc0:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
 dc4:	52524c43 	subspl	r4, r2, #17152	; 0x4300
 dc8:	49415300 	stmdbmi	r1, {r8, r9, ip, lr}^
 dcc:	534b4332 	movtpl	r4, #45874	; 0xb332
 dd0:	00524c45 	subseq	r4, r2, r5, asr #24
 dd4:	4d4d4453 	cfstrdmi	mvd4, [sp, #-332]	; 0xfffffeb4
 dd8:	43323143 	teqmi	r2, #-1073741808	; 0xc0000010
 ddc:	4c45534b 	mcrrmi	3, 4, r5, r5, cr11
 de0:	434d0052 	movtmi	r0, #53330	; 0xd052
 de4:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
 de8:	45504c32 	ldrbmi	r4, [r0, #-3122]	; 0xfffff3ce
 dec:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
 df0:	53510052 	cmppl	r1, #82	; 0x52
 df4:	4b434950 	blmi	10d333c <_start-0xbef34cc4>
 df8:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
 dfc:	5f434d00 	svcpl	0x00434d00
 e00:	4d495841 	stclmi	8, cr5, [r9, #-260]	; 0xfffffefc
 e04:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
 e08:	53005254 	movwpl	r5, #596	; 0x254
 e0c:	35344950 	ldrcc	r4, [r4, #-2384]!	; 0xfffff6b0
 e10:	45534b43 	ldrbmi	r4, [r3, #-2883]	; 0xfffff4bd
 e14:	4d00524c 	sfmmi	f5, 4, [r0, #-304]	; 0xfffffed0
 e18:	50415f50 	subpl	r5, r1, r0, asr pc
 e1c:	504c3142 	subpl	r3, ip, r2, asr #2
 e20:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
 e24:	42005254 	andmi	r5, r0, #84, 4	; 0x40000005
 e28:	00524344 	subseq	r4, r2, r4, asr #6
 e2c:	35425041 	strbcc	r5, [r2, #-65]	; 0xffffffbf
 e30:	43545352 	cmpmi	r4, #1207959553	; 0x48000001
 e34:	0052524c 	subseq	r5, r2, ip, asr #4
 e38:	31474e52 	cmpcc	r7, r2, asr lr
 e3c:	45534b43 	ldrbmi	r4, [r3, #-2883]	; 0xfffff4bd
 e40:	5300524c 	movwpl	r5, #588	; 0x24c
 e44:	43344941 	teqmi	r4, #1064960	; 0x104000
 e48:	4c45534b 	mcrrmi	3, 4, r5, r5, cr11
 e4c:	32490052 	subcc	r0, r9, #82	; 0x52
 e50:	43363443 	teqmi	r6, #1124073472	; 0x43000000
 e54:	4c45534b 	mcrrmi	3, 4, r5, r5, cr11
 e58:	4c500052 	mrrcmi	0, 5, r0, r0, cr2	; <UNPREDICTABLE>
 e5c:	5246324c 	subpl	r3, r6, #76, 4	; 0xc0000004
 e60:	00524341 	subseq	r4, r2, r1, asr #6
 e64:	415f434d 	cmpmi	pc, sp, asr #6
 e68:	45354250 	ldrmi	r4, [r5, #-592]!	; 0xfffffdb0
 e6c:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
 e70:	53550052 	cmppl	r5, #82	; 0x52
 e74:	534b4342 	movtpl	r4, #45890	; 0xb342
 e78:	00524c45 	subseq	r4, r2, r5, asr #24
 e7c:	43535341 	cmpmi	r3, #67108865	; 0x4000001
 e80:	4c45534b 	mcrrmi	3, 4, r5, r5, cr11
 e84:	434d0052 	movtmi	r0, #53330	; 0xd052
 e88:	4250415f 	subsmi	r4, r0, #-1073741801	; 0xc0000017
 e8c:	45504c35 	ldrbmi	r4, [r0, #-3125]	; 0xfffff3cb
 e90:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
 e94:	4c500052 	mrrcmi	0, 5, r0, r0, cr2	; <UNPREDICTABLE>
 e98:	5243314c 	subpl	r3, r3, #76, 2
 e9c:	4c4c5000 	marmi	acc0, r5, ip
 ea0:	41524633 	cmpmi	r2, r3, lsr r6
 ea4:	50005243 	andpl	r5, r0, r3, asr #4
 ea8:	43334c4c 	teqmi	r3, #76, 24	; 0x4c00
 eac:	31524746 	cmpcc	r2, r6, asr #14
 eb0:	435a5400 	cmpmi	sl, #0, 8
 eb4:	434f0052 	movtmi	r0, #61522	; 0xf052
 eb8:	52594452 	subspl	r4, r9, #1375731712	; 0x52000000
 ebc:	6c616800 	stclvs	8, cr6, [r1], #-0
 ec0:	7261755f 	rsbvc	r7, r1, #398458880	; 0x17c00000
 ec4:	695f3474 	ldmdbvs	pc, {r2, r4, r5, r6, sl, ip, sp}^	; <UNPREDICTABLE>
 ec8:	0074696e 	rsbseq	r6, r4, lr, ror #18
 ecc:	415f504d 	cmpmi	pc, sp, asr #32
 ed0:	4c314250 	lfmmi	f4, 4, [r1], #-320	; 0xfffffec0
 ed4:	434e4550 	movtmi	r4, #58704	; 0xe550
 ed8:	0052524c 	subseq	r5, r2, ip, asr #4
 edc:	415f504d 	cmpmi	pc, sp, asr #32
 ee0:	4c324250 	lfmmi	f4, 4, [r2], #-320	; 0xfffffec0
 ee4:	534e4550 	movtpl	r4, #58704	; 0xe550
 ee8:	00525445 	subseq	r5, r2, r5, asr #8
 eec:	34425041 	strbcc	r5, [r2], #-65	; 0xffffffbf
 ef0:	53545352 	cmppl	r4, #1207959553	; 0x48000001
 ef4:	00525445 	subseq	r5, r2, r5, asr #8
 ef8:	415f434d 	cmpmi	pc, sp, asr #6
 efc:	45344248 	ldrmi	r4, [r4, #-584]!	; 0xfffffdb8
 f00:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
 f04:	4d460052 	stclmi	0, cr0, [r6, #-328]	; 0xfffffeb8
 f08:	534b4343 	movtpl	r4, #45891	; 0xb343
 f0c:	00524c45 	subseq	r4, r2, r5, asr #24
 f10:	324c4c50 	subcc	r4, ip, #80, 24	; 0x5000
 f14:	52475343 	subpl	r5, r7, #201326593	; 0xc000001
 f18:	5f504d00 	svcpl	0x00504d00
 f1c:	36424841 	strbcc	r4, [r2], -r1, asr #16
 f20:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
 f24:	52524c43 	subspl	r4, r2, #17152	; 0x4300
 f28:	5f434d00 	svcpl	0x00434d00
 f2c:	52464943 	subpl	r4, r6, #1097728	; 0x10c000
 f30:	73657200 	cmnvc	r5, #0, 4
 f34:	4d003232 	sfmmi	f3, 4, [r0, #-200]	; 0xffffff38
 f38:	53525f50 	cmppl	r2, #80, 30	; 0x140
 f3c:	00525354 	subseq	r5, r2, r4, asr r3
 f40:	415f434d 	cmpmi	pc, sp, asr #6
 f44:	45364248 	ldrmi	r4, [r6, #-584]!	; 0xfffffdb8
 f48:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
 f4c:	6d630052 	stclvs	0, cr0, [r3, #-328]!	; 0xfffffeb8
 f50:	72615f64 	rsbvc	r5, r1, #100, 30	; 0x190
 f54:	6d630072 	stclvs	0, cr0, [r3, #-456]!	; 0xfffffe38
 f58:	00745f64 	rsbseq	r5, r4, r4, ror #30
 f5c:	616c6564 	cmnvs	ip, r4, ror #10
 f60:	736d5f79 	cmnvc	sp, #484	; 0x1e4
 f64:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
 f68:	00632e6e 	rsbeq	r2, r3, lr, ror #28
 f6c:	62706d63 	rsbsvs	r6, r0, #6336	; 0x18c0
 f70:	6d006675 	stcvs	6, cr6, [r0, #-468]	; 0xfffffe2c
 f74:	006e6961 	rsbeq	r6, lr, r1, ror #18
 f78:	5f64656c 	svcpl	0x0064656c
 f7c:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
	...

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000001c 	andeq	r0, r0, ip, lsl r0
  14:	00000000 	andeq	r0, r0, r0
  18:	c000835c 	andgt	r8, r0, ip, asr r3
  1c:	00000050 	andeq	r0, r0, r0, asr r0
  20:	8b040e42 	blhi	103930 <_start-0xbff046d0>
  24:	0b0d4201 	bleq	350830 <_start-0xbfcb77d0>
  28:	420d0d60 	andmi	r0, sp, #96, 26	; 0x1800
  2c:	00000ecb 	andeq	r0, r0, fp, asr #29
  30:	0000001c 	andeq	r0, r0, ip, lsl r0
  34:	00000000 	andeq	r0, r0, r0
  38:	c00083ac 	andgt	r8, r0, ip, lsr #7
  3c:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
  40:	8b080e42 	blhi	203950 <_start-0xbfe046b0>
  44:	42018e02 	andmi	r8, r1, #2, 28
  48:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
  4c:	080d0cd6 	stmdaeq	sp, {r1, r2, r4, r6, r7, sl, fp}
  50:	0000001c 	andeq	r0, r0, ip, lsl r0
  54:	00000000 	andeq	r0, r0, r0
  58:	c0008564 	andgt	r8, r0, r4, ror #10
  5c:	0000006c 	andeq	r0, r0, ip, rrx
  60:	8b080e42 	blhi	203970 <_start-0xbfe04690>
  64:	42018e02 	andmi	r8, r1, #2, 28
  68:	70040b0c 	andvc	r0, r4, ip, lsl #22
  6c:	00080d0c 	andeq	r0, r8, ip, lsl #26
  70:	0000001c 	andeq	r0, r0, ip, lsl r0
  74:	00000000 	andeq	r0, r0, r0
  78:	c00085d0 	ldrdgt	r8, [r0], -r0
  7c:	00000094 	muleq	r0, r4, r0
  80:	8b040e42 	blhi	103990 <_start-0xbff04670>
  84:	0b0d4201 	bleq	350890 <_start-0xbfcb7770>
  88:	0d0d4202 	sfmeq	f4, 4, [sp, #-8]
  8c:	000ecb42 	andeq	ip, lr, r2, asr #22
  90:	00000020 	andeq	r0, r0, r0, lsr #32
  94:	00000000 	andeq	r0, r0, r0
  98:	c0008664 	andgt	r8, r0, r4, ror #12
  9c:	000003e4 	andeq	r0, r0, r4, ror #7
  a0:	8b080e42 	blhi	2039b0 <_start-0xbfe04650>
  a4:	42018e02 	andmi	r8, r1, #2, 28
  a8:	03040b0c 	movweq	r0, #19212	; 0x4b0c
  ac:	0d0c01ec 	stfeqs	f0, [ip, #-944]	; 0xfffffc50
  b0:	00000008 	andeq	r0, r0, r8
  b4:	0000001c 	andeq	r0, r0, ip, lsl r0
  b8:	00000000 	andeq	r0, r0, r0
  bc:	c0008a48 	andgt	r8, r0, r8, asr #20
  c0:	0000006c 	andeq	r0, r0, ip, rrx
  c4:	8b040e42 	blhi	1039d4 <_start-0xbff0462c>
  c8:	0b0d4201 	bleq	3508d4 <_start-0xbfcb772c>
  cc:	420d0d6e 	andmi	r0, sp, #7040	; 0x1b80
  d0:	00000ecb 	andeq	r0, r0, fp, asr #29
  d4:	00000020 	andeq	r0, r0, r0, lsr #32
  d8:	00000000 	andeq	r0, r0, r0
  dc:	c0008ab4 			; <UNDEFINED> instruction: 0xc0008ab4
  e0:	000008c8 	andeq	r0, r0, r8, asr #17
  e4:	8b080e42 	blhi	2039f4 <_start-0xbfe0460c>
  e8:	42018e02 	andmi	r8, r1, #2, 28
  ec:	03040b0c 	movweq	r0, #19212	; 0x4b0c
  f0:	0d0c045e 	cfstrseq	mvf0, [ip, #-376]	; 0xfffffe88
  f4:	00000008 	andeq	r0, r0, r8
  f8:	00000030 	andeq	r0, r0, r0, lsr r0
  fc:	00000000 	andeq	r0, r0, r0
 100:	c000937c 	andgt	r9, r0, ip, ror r3
 104:	0000004c 	andeq	r0, r0, ip, asr #32
 108:	810c0e42 	tsthi	ip, r2, asr #28
 10c:	83028203 	movwhi	r8, #8707	; 0x2203
 110:	140e4201 	strne	r4, [lr], #-513	; 0xfffffdff
 114:	048e058b 	streq	r0, [lr], #1419	; 0x58b
 118:	100b0c42 	andne	r0, fp, r2, asr #24
 11c:	140d0c5a 	strne	r0, [sp], #-3162	; 0xfffff3a6
 120:	0ecbce42 	cdpeq	14, 12, cr12, cr11, cr2, {2}
 124:	c2c3420c 	sbcgt	r4, r3, #12, 4	; 0xc0000000
 128:	00000ec1 	andeq	r0, r0, r1, asr #29
 12c:	00000034 	andeq	r0, r0, r4, lsr r0
 130:	00000000 	andeq	r0, r0, r0
 134:	c00093c8 	andgt	r9, r0, r8, asr #7
 138:	0000004c 	andeq	r0, r0, ip, asr #32
 13c:	80100e42 	andshi	r0, r0, r2, asr #28
 140:	82038104 	andhi	r8, r3, #4, 2
 144:	42018302 	andmi	r8, r1, #134217728	; 0x8000000
 148:	068b180e 	streq	r1, [fp], lr, lsl #16
 14c:	0c42058e 	cfstr64eq	mvdx0, [r2], {142}	; 0x8e
 150:	0c5a140b 	cfldrdeq	mvd1, [sl], {11}
 154:	ce42180d 	cdpgt	8, 4, cr1, cr2, cr13, {0}
 158:	42100ecb 	andsmi	r0, r0, #3248	; 0xcb0
 15c:	c0c1c2c3 	sbcgt	ip, r1, r3, asr #5
 160:	0000000e 	andeq	r0, r0, lr
 164:	0000000c 	andeq	r0, r0, ip
 168:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 16c:	7c020001 	stcvc	0, cr0, [r2], {1}
 170:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 174:	0000001c 	andeq	r0, r0, ip, lsl r0
 178:	00000164 	andeq	r0, r0, r4, ror #2
 17c:	c0009414 	andgt	r9, r0, r4, lsl r4
 180:	000001e8 	andeq	r0, r0, r8, ror #3
 184:	8b040e42 	blhi	103a94 <_start-0xbff0456c>
 188:	0b0d4201 	bleq	350994 <_start-0xbfcb766c>
 18c:	0d0dec02 	stceq	12, cr14, [sp, #-8]
 190:	000ecb42 	andeq	ip, lr, r2, asr #22
 194:	0000001c 	andeq	r0, r0, ip, lsl r0
 198:	00000164 	andeq	r0, r0, r4, ror #2
 19c:	c00095fc 	strdgt	r9, [r0], -ip
 1a0:	00000060 	andeq	r0, r0, r0, rrx
 1a4:	8b080e42 	blhi	203ab4 <_start-0xbfe0454c>
 1a8:	42018e02 	andmi	r8, r1, #2, 28
 1ac:	6a040b0c 	bvs	102de4 <_start-0xbff0521c>
 1b0:	00080d0c 	andeq	r0, r8, ip, lsl #26
 1b4:	0000001c 	andeq	r0, r0, ip, lsl r0
 1b8:	00000164 	andeq	r0, r0, r4, ror #2
 1bc:	c000965c 	andgt	r9, r0, ip, asr r6
 1c0:	00000048 	andeq	r0, r0, r8, asr #32
 1c4:	8b080e42 	blhi	203ad4 <_start-0xbfe0452c>
 1c8:	42018e02 	andmi	r8, r1, #2, 28
 1cc:	5e040b0c 	vmlapl.f64	d0, d4, d12
 1d0:	00080d0c 	andeq	r0, r8, ip, lsl #26
 1d4:	0000001c 	andeq	r0, r0, ip, lsl r0
 1d8:	00000164 	andeq	r0, r0, r4, ror #2
 1dc:	c00096a4 	andgt	r9, r0, r4, lsr #13
 1e0:	0000004c 	andeq	r0, r0, ip, asr #32
 1e4:	8b040e42 	blhi	103af4 <_start-0xbff0450c>
 1e8:	0b0d4201 	bleq	3509f4 <_start-0xbfcb760c>
 1ec:	420d0d5e 	andmi	r0, sp, #6016	; 0x1780
 1f0:	00000ecb 	andeq	r0, r0, fp, asr #29
 1f4:	0000000c 	andeq	r0, r0, ip
 1f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 1fc:	7c020001 	stcvc	0, cr0, [r2], {1}
 200:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 204:	0000001c 	andeq	r0, r0, ip, lsl r0
 208:	000001f4 	strdeq	r0, [r0], -r4
 20c:	c00096f0 	strdgt	r9, [r0], -r0
 210:	00000018 	andeq	r0, r0, r8, lsl r0
 214:	8b040e42 	blhi	103b24 <_start-0xbff044dc>
 218:	0b0d4201 	bleq	350a24 <_start-0xbfcb75dc>
 21c:	420d0d44 	andmi	r0, sp, #68, 26	; 0x1100
 220:	00000ecb 	andeq	r0, r0, fp, asr #29
 224:	0000000c 	andeq	r0, r0, ip
 228:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 22c:	7c020001 	stcvc	0, cr0, [r2], {1}
 230:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 234:	0000001c 	andeq	r0, r0, ip, lsl r0
 238:	00000224 	andeq	r0, r0, r4, lsr #4
 23c:	c0009708 	andgt	r9, r0, r8, lsl #14
 240:	0000015c 	andeq	r0, r0, ip, asr r1
 244:	8b040e42 	blhi	103b54 <_start-0xbff044ac>
 248:	0b0d4201 	bleq	350a54 <_start-0xbfcb75ac>
 24c:	0d0da602 	stceq	6, cr10, [sp, #-8]
 250:	000ecb42 	andeq	ip, lr, r2, asr #22
 254:	0000001c 	andeq	r0, r0, ip, lsl r0
 258:	00000224 	andeq	r0, r0, r4, lsr #4
 25c:	c0009864 	andgt	r9, r0, r4, ror #16
 260:	00000088 	andeq	r0, r0, r8, lsl #1
 264:	8b040e42 	blhi	103b74 <_start-0xbff0448c>
 268:	0b0d4201 	bleq	350a74 <_start-0xbfcb758c>
 26c:	420d0d7c 	andmi	r0, sp, #124, 26	; 0x1f00
 270:	00000ecb 	andeq	r0, r0, fp, asr #29
 274:	0000001c 	andeq	r0, r0, ip, lsl r0
 278:	00000224 	andeq	r0, r0, r4, lsr #4
 27c:	c00098ec 	andgt	r9, r0, ip, ror #17
 280:	000000a0 	andeq	r0, r0, r0, lsr #1
 284:	8b040e42 	blhi	103b94 <_start-0xbff0446c>
 288:	0b0d4201 	bleq	350a94 <_start-0xbfcb756c>
 28c:	0d0d4802 	stceq	8, cr4, [sp, #-8]
 290:	000ecb42 	andeq	ip, lr, r2, asr #22
 294:	0000000c 	andeq	r0, r0, ip
 298:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 29c:	7c020001 	stcvc	0, cr0, [r2], {1}
 2a0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 2a4:	00000018 	andeq	r0, r0, r8, lsl r0
 2a8:	00000294 	muleq	r0, r4, r2
 2ac:	c000998c 	andgt	r9, r0, ip, lsl #19
 2b0:	000001e8 	andeq	r0, r0, r8, ror #3
 2b4:	8b080e42 	blhi	203bc4 <_start-0xbfe0443c>
 2b8:	42018e02 	andmi	r8, r1, #2, 28
 2bc:	00040b0c 	andeq	r0, r4, ip, lsl #22
 2c0:	0000001c 	andeq	r0, r0, ip, lsl r0
 2c4:	00000294 	muleq	r0, r4, r2
 2c8:	c0009b74 	andgt	r9, r0, r4, ror fp
 2cc:	0000006c 	andeq	r0, r0, ip, rrx
 2d0:	8b040e42 	blhi	103be0 <_start-0xbff04420>
 2d4:	0b0d4201 	bleq	350ae0 <_start-0xbfcb7520>
 2d8:	420d0d6e 	andmi	r0, sp, #7040	; 0x1b80
 2dc:	00000ecb 	andeq	r0, r0, fp, asr #29
 2e0:	0000001c 	andeq	r0, r0, ip, lsl r0
 2e4:	00000294 	muleq	r0, r4, r2
 2e8:	c0009be0 	andgt	r9, r0, r0, ror #23
 2ec:	00000048 	andeq	r0, r0, r8, asr #32
 2f0:	8b080e42 	blhi	203c00 <_start-0xbfe04400>
 2f4:	42018e02 	andmi	r8, r1, #2, 28
 2f8:	5e040b0c 	vmlapl.f64	d0, d4, d12
 2fc:	00080d0c 	andeq	r0, r8, ip, lsl #26
 300:	0000001c 	andeq	r0, r0, ip, lsl r0
 304:	00000294 	muleq	r0, r4, r2
 308:	c0009c28 	andgt	r9, r0, r8, lsr #24
 30c:	0000004c 	andeq	r0, r0, ip, asr #32
 310:	8b040e42 	blhi	103c20 <_start-0xbff043e0>
 314:	0b0d4201 	bleq	350b20 <_start-0xbfcb74e0>
 318:	420d0d5e 	andmi	r0, sp, #6016	; 0x1780
 31c:	00000ecb 	andeq	r0, r0, fp, asr #29
 320:	0000001c 	andeq	r0, r0, ip, lsl r0
 324:	00000294 	muleq	r0, r4, r2
 328:	c0009c74 	andgt	r9, r0, r4, ror ip
 32c:	000000b8 	strheq	r0, [r0], -r8
 330:	8b080e42 	blhi	203c40 <_start-0xbfe043c0>
 334:	42018e02 	andmi	r8, r1, #2, 28
 338:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
 33c:	080d0c56 	stmdaeq	sp, {r1, r2, r4, r6, sl, fp}
 340:	0000000c 	andeq	r0, r0, ip
 344:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 348:	7c020001 	stcvc	0, cr0, [r2], {1}
 34c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 350:	0000001c 	andeq	r0, r0, ip, lsl r0
 354:	00000340 	andeq	r0, r0, r0, asr #6
 358:	c0009d2c 	andgt	r9, r0, ip, lsr #26
 35c:	00000070 	andeq	r0, r0, r0, ror r0
 360:	8b040e42 	blhi	103c70 <_start-0xbff04390>
 364:	0b0d4201 	bleq	350b70 <_start-0xbfcb7490>
 368:	420d0d70 	andmi	r0, sp, #112, 26	; 0x1c00
 36c:	00000ecb 	andeq	r0, r0, fp, asr #29
 370:	0000001c 	andeq	r0, r0, ip, lsl r0
 374:	00000340 	andeq	r0, r0, r0, asr #6
 378:	c0009d9c 	mulgt	r0, ip, sp
 37c:	00000094 	muleq	r0, r4, r0
 380:	8b080e42 	blhi	203c90 <_start-0xbfe04370>
 384:	42018e02 	andmi	r8, r1, #2, 28
 388:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
 38c:	080d0c44 	stmdaeq	sp, {r2, r6, sl, fp}
 390:	00000018 	andeq	r0, r0, r8, lsl r0
 394:	00000340 	andeq	r0, r0, r0, asr #6
 398:	c0009e30 	andgt	r9, r0, r0, lsr lr
 39c:	00000144 	andeq	r0, r0, r4, asr #2
 3a0:	8b080e42 	blhi	203cb0 <_start-0xbfe04350>
 3a4:	42018e02 	andmi	r8, r1, #2, 28
 3a8:	00040b0c 	andeq	r0, r4, ip, lsl #22
